{"version":3,"sources":["components/NavItem/index.tsx","app/hooks.ts","app/share.ts","features/theater/share.tsx","features/theater/slice.tsx","app/config.tsx","features/channelCardStore/share.tsx","features/channelCardStore/slice.tsx","features/channelCardStore/ChannelCard.tsx","components/GroupLine/index.tsx","features/channelCardStore/ChannelCardsGroup.tsx","features/channelCardStore/ChannelCardsBrowser.tsx","components/SearchBox/index.tsx","features/channelCardStore/api/reqFetchChannels.tsx","features/channelCardStore/api/reqUpdateVisit.tsx","features/user/slice.tsx","features/channelCardStore/ChannelSearch.tsx","features/channelCardStore/api/reqSearchChannel.tsx","components/SwitchBtn/index.tsx","features/channelCardStore/ChannelTagsSwitchers.tsx","features/channelCardStore/FavoredCard.tsx","features/channelCardStore/FavoredCardsGroup.tsx","features/channelCardStore/FavoredCardsViewer.tsx","features/channelCardStore/FavoredCardsNavItem.tsx","components/Navbar/index.tsx","pages/ChannelsStage/index.tsx","features/channelCardStore/api/reqEditVisit.tsx","features/theater/TheaterChatbox/index.tsx","features/theater/TheaterPlayerItem/index.tsx","features/theater/TheaterIframesViewer/index.tsx","features/theater/TheaterSliderItem/index.tsx","features/theater/TheaterSlider/index.tsx","pages/TheaterPage/index.tsx","features/theater/api/reqTheaterChannels.tsx","pages/HomePage/index.tsx","components/RocketLoading/index.tsx","pages/LoadingPage/index.tsx","features/user/styles.tsx","features/user/Login/index.tsx","features/user/api/reqLogin.tsx","features/user/Register/index.tsx","features/user/api/reqRegister.tsx","pages/UserPage/index.tsx","App.tsx","app/store.ts","index.tsx"],"names":["NavItem","props","title","path","icon","showMenu","Container","onClick","history","push","pathname","styled","div","useSelector","hook_useSelector","useDispatch","hook_useDispatch","ConnectionConfig","IsLocal","HostName","createTheaterElement","ch","options","cid","cname","avatar","streamurl","preview","thumbnail","method","checked","getPlayerSrc","console","log","src","sub","match","vedioid","error","getChatboxSrc","getListAppendIframe","list","newItem","filter","o","concat","getListRemoveIframe","setIframeSize","item","ratio","w","h","getResult","col","row","cw","pw","ph","flexType","slice","createSlice","name","initialState","fromChannel","elements","playlist","chatlist","slider","sliderIndex","isTakenOverAnim","isFolded","gridlayout","clientWidth","clientHeight","reducers","setElements","state","action","channels","payload","length","mp","Map","forEach","p","set","found","cidFromChannel","map","i","get","setSlider","next","setSliderFolded","resizeGridLayout","newIframeSize","cW","cH","size","result","maxArea","curRow","Math","ceil","gridW","gridH","curPlayW","curPlayH","curChatW","curChatH","min","area","calcNewIframeSizeV2","player","chatbox","setFromChannel","newPlayerIframe","convertToPlayerIframe","newChatboxIframe","isEnable","convertToChatboxIframe","status","appendIframeToPlaylist","newElements","e","newPlaylist","createPlayerIframe","newChatlist","createChatboxIframe","removeIframeFromPlaylist","removeIframeByCid","actions","selectTheater","theater","selectElements","createSelector","selectPlaylist","selectPlayPairs","len","selectGridLayout","selectSlider","selectNumOfElements","selectSliderElements","API_SERVER_URL","VISITS_DEFAULT_GROUPNAME","CHANNELS_DEFAULT_GROUPNAME","SwitcherList","htmlFor","afterColor","NavItemsArray","createChannelCard","group","heart","createFavoredItem","card","isChanged","isNewAdded","isDeleted","owner","createVisitItem","hasFetchChannels","clusters","favoredList","tags","current","isFavoredCardsViewerEnable","setStore","v","chgroups","setCluster","setChannelCard","prelist","cards","setFavoredList","setSearchResult","f","setIsFavoredCardsViewerEnable","undefined","selectChannelCardStore","channelCardStore","selectHasFetchChannels","store","selectTags","selectGroup","selectFavoredList","selectCurrent","selectIsFavoredCardsViewerEnable","selectVisitList","newfavoredList","newGroup","has","selectFavoredCardsList","x","index","indexOf","selectIsFavoredCardsListChanged","isListChanged","selectNumOfFavoredCards","count","ChannelCard","viewcount","starttime","groupName","useState","isVisible","setIsVisible","ref","useRef","avatarStyles","getAvatarStyles","heartStyles","getHeartTheme","previewStyles","getPreviewImage","dispatch","useEffect","parentDom","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","disconnect","AvatarBox","alt","FavoredHeartBtn","CardBody","PreviewBox","image","Description","Owner","ChTitle","Detail","Left","Right","fontcolor","fontbgcolor","bordercolor","ishidden","color","hoverColor","isHidden","isEnabled","a","GroupLine","h1","lineColor","bkgColor","fontsize","ChannelCardsGroup","ChannelGridCantainer","ChannelCardsBrowser","view","cs","GetChannelCardsGroup","SearchBox","theme","setIsEnable","searchInput","commit","onSubmit","value","onChange","onKeyUp","keyCode","type","id","placeholder","style","fontSize","iconColor","focusColor","reqFetchChannels","username","ssid","request","FormData","append","JSON","stringify","axios","post","then","response","data","reqUpdateVisit","visit","postform","resp","code","msg","setTimeout","err","setSession","session","expiration","expires","Date","now","toUTCString","document","cookie","setCookie","getCookie","setUserLogin","setUserRegiser","setMsg","c_name","c_start","c_end","unescape","substring","selectUser","user","ChannelSearch","keyword","url","SwitchBtn","HiddenCheckedInput","handleSwitchClick","tag","isChecked","ToogleFill","label","beforeColor","ballColor","input","ChannelTagsSwitchers","includes","newtags","_tag","_","SwitchBtnBox","FavoredCard","Cid","getEditedList","newList","getDeletedList","Avatar","OwnerText","ButtonGroup","Button","newGroupName","window","prompt","g","alert","newOwner","confirm","FavoredCardsGroup","Content","items","ul","FavoredCardsViewer","isLogin","headerTheme","getHeaderIcon","favoredlist","useLayoutEffect","ViewerContainer","Header","text","FavoredCardsNavItem","numOfFavored","Collection","visible","Navbar","Nav","Logo","Menu","ToogleNavBkg","nav","ChannelsStage","already","newAdded","reduce","cur","newlist","reqEditVisit","isStopScroll","ControlPanel","ChannelSearchCard","TheaterChatbox","ChatboxContainer","width","height","getChatboxIframe","scrolling","allowFullScreen","seamless","frameBorder","TheaterPlayerItem","IframeGridLocator","playerWidth","playerHeight","chatboxWidth","chatboxHeight","IframeContainer","onMouseEnter","onMouseLeave","getPlayerIframe","sandbox","TheaterIframesViewer","dom","pairs","numOfIframes","resizeIframes","useCallback","handler","resize","clearTimeout","addEventListener","removeEventListener","TheaterSliderItem","isStopTrans","Section","SliderPreview","img","TheaterSlider","numOfElements","sliderElements","SliderWrap","SliderContainer","Control","playSliderLeft","playSliderRight","span","TheaterPage","hasfetchChannels","dispatchEvent","Event","Wrap","HomePage","RocketLoading","Loader","Array","fill","Dot","Rocket","LoadingPage","MsgBox","Title","UsernameField","PasswordField","MainButton","SwitchField","Login","usernameInput","passwordInput","required","password","reqLogin","Register","passwordInput2","password2","reqRegister","UserPage","pageName","App","exact","component","render","reducer","combineReducers","channelCardStoreReducer","userReducer","theaterReducer","middleware","getDefaultMiddleware","serializableCheck","location","hostname","decodeUrlToConnectionConfig","configureStore","createHashHistory","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.565037ee.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { history } from \"../../index\";\r\nimport { NavItemProps } from \"../../app/types\";\r\n\r\ninterface Props extends NavItemProps{\r\n  showMenu:Function\r\n}\r\n\r\nexport default function NavItem(props: Props) {\r\n  const { title, path, icon, showMenu } = props;\r\n\r\n  const onClick = () => {\r\n    if (path !== \"\"){\r\n      history.push({ pathname: `${path}` });\r\n    }\r\n    showMenu();\r\n  };\r\n\r\n  return (\r\n    <Container onClick={onClick}>\r\n      {icon}\r\n      <p>{title}</p>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 1.5em;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    color: var(--menuText);\r\n    margin-right: 10px;\r\n    font-size: 26px;\r\n  }\r\n  p {\r\n    color: var(--menuText);\r\n    text-decoration: none;\r\n    font-size: 23px;\r\n    letter-spacing: 5px;\r\n  }\r\n  :hover {\r\n    background-color: var(--menuText_Hover);\r\n    p {\r\n      color: var(#fff);\r\n    }\r\n  }\r\n\r\n  // 螢幕寬度小於768px時\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    margin: 0 0;\r\n    padding: 0 0;\r\n    svg {\r\n      margin: 0px 0px;\r\n      padding: 0 16px;\r\n      font-size: 35px;\r\n    }\r\n    p {\r\n      display: none;\r\n    }\r\n    :hover {\r\n      svg {\r\n        font-size: 38px;\r\n      }\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    margin: 0px 10px 0px 15px;\r\n    padding: 25px;\r\n    /* background-color: orange; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    svg {\r\n      font-size: 28px;\r\n    }\r\n    p {\r\n      display: block;\r\n      letter-spacing: 10px;\r\n      font-size: 25px;\r\n      width: 50%;\r\n    }\r\n    :hover {\r\n      border-radius: 10px;\r\n      svg {\r\n        font-size: 30px;\r\n      }\r\n      p {\r\n        font-size: 26px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import type { RootState, AppDispatch } from \"./store\";\r\n// hooks\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as hook_useDispatch,\r\n  useSelector as hook_useSelector,\r\n} from \"react-redux\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n\r\n// 不要直接用store.getState(),useSelector會在你store發生改變時重新渲染，省掉\"訂閱\"部分\r\nexport const useSelector: TypedUseSelectorHook<RootState> = hook_useSelector;\r\n\r\n// redux會自動幫我們創建context\r\nexport const useDispatch = () => hook_useDispatch<AppDispatch>();\r\n\r\n","import { type } from \"os\";\r\nimport { ConnectionConfigProps } from \"./types\";\r\n\r\nexport const useGrouped = function <\r\n  V extends { cid: string; group: string },\r\n  S extends { cid: string }\r\n>(map: V[], list: S[]): { [key: string]: S[] } {\r\n  if (!list) {\r\n    return {};\r\n  }\r\n  const result: { [key: string]: S[] } = {};\r\n  // const resident: S[] = [];\r\n\r\n  const mp = new Map<string, V>();\r\n  map.forEach((obj) => {\r\n    mp.set(obj.cid, obj);\r\n  });\r\n  list.forEach((obj) => {\r\n    const cur = mp.get(obj.cid);\r\n    if (cur) {\r\n      const key = cur.group;\r\n      if (!result[key]) {\r\n        result[key] = [obj];\r\n      } else {\r\n        result[key].push(obj);\r\n      }\r\n    } else {\r\n      console.error(\"發生錯誤，不該有這個\");\r\n    }\r\n  });\r\n  return { ...result };\r\n};\r\n\r\nexport const getGroupMap = <T extends { cid: string; group: string }>(\r\n  list: T[]\r\n): {\r\n  [key: string]: string;\r\n} => {\r\n  const mp: { [key: string]: string } = {};\r\n  list.forEach((item) => (mp[item.cid] = item.group));\r\n  return mp;\r\n};\r\n\r\n// export const getGroupedView = <T extends { cid: string }>(\r\n//   mp: { [key: string]: string },\r\n//   group: string[],\r\n//   items: T[],\r\n//   isResident: boolean\r\n// ):T[][] => {\r\n//   const len = group.length;\r\n//   const view = Array(isResident ? len+1 : len)\r\n//     .fill(0)\r\n//     .map(x=>Array<T>());\r\n\r\n//   items.forEach((o) => {\r\n//     const groupName = mp[o.cid];\r\n//     const ix = groupName ? group.indexOf(groupName) : -1;\r\n//     if (ix > -1) {\r\n//       view[ix].push(o);\r\n//     } else {\r\n//       view[len].push(o);\r\n//     }\r\n//   });\r\n//   return view;\r\n// };\r\n\r\nexport var ConnectionConfig: ConnectionConfigProps = {\r\n  IsLocal: false,\r\n  HostName: \"\",\r\n};\r\n\r\nexport const decodeUrlToConnectionConfig = () => {\r\n  console.log(\"decodeUrlToConnectionConfig\");\r\n\r\n  const IsLocal =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  const HostName = window.location.hostname;\r\n\r\n  ConnectionConfig = {\r\n    IsLocal,\r\n    HostName,\r\n  };\r\n};\r\n","import { ConnectionConfig } from \"../../app/share\";\r\nimport {\r\n  ChannelProps,\r\n  ChatboxIframe,\r\n  IframeProps,\r\n  IframeSizeProps,\r\n  PlayerIframe,\r\n  TheaterElement,\r\n} from \"../../app/types\";\r\nimport { setSlider } from \"./slice\";\r\n\r\nexport const createTheaterElement = (\r\n  ch: ChannelProps,\r\n  options: { checked: boolean }\r\n): TheaterElement => {\r\n  const { cid, cname, avatar, streamurl, thumbnail, method } = ch;\r\n  const { checked } = options;\r\n  return {\r\n    cid,\r\n    cname,\r\n    avatar,\r\n    streamurl,\r\n    preview: thumbnail,\r\n    method,\r\n    checked,\r\n  };\r\n};\r\n\r\nconst getPlayerSrc = (\r\n  method: string,\r\n  streamurl: string,\r\n  cname: string\r\n): string => {\r\n  console.log(\"ConnectionConfig.HostName: \", ConnectionConfig.HostName);\r\n\r\n  let src = \"\";\r\n  switch (method) {\r\n    case \"youtube\":\r\n      let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n      let vedioid = sub ? sub[1] : \"\";\r\n      src = `//www.youtube.com/embed/${vedioid}?enablejsapi=1&origin=${ConnectionConfig.HostName}&widgetid=1`;\r\n      break;\r\n    case \"twitch\":\r\n      src = `//player.twitch.tv?allowfullscreen=false&channel=${cname}&parent=${ConnectionConfig.HostName}&muted=false&autoplay=false`;\r\n      break;\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n  return src;\r\n};\r\n\r\nconst getChatboxSrc = (\r\n  method: string,\r\n  streamurl: string,\r\n  cname: string\r\n): string => {\r\n  console.log(\"ConnectionConfig.HostName: \", ConnectionConfig.HostName);\r\n\r\n  let src = \"\";\r\n  switch (method) {\r\n    case \"youtube\":\r\n      let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n      let vedioid = sub ? sub[1] : \"\";\r\n      src = `//www.youtube.com/live_chat?v=${vedioid}&is_popout=1&embed_domain=${ConnectionConfig.HostName}&dark_theme=1`;\r\n      break;\r\n    case \"twitch\":\r\n      src = `//www.twitch.tv/embed/${cname}/chat?darkpopout=&secret=safe&parent=${ConnectionConfig.HostName}`;\r\n      break;\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n  return src;\r\n};\r\n\r\nexport const convertToPlayerIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const convertToChatboxIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nexport const createPlayerIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const createChatboxIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nexport const getListAppendIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  newItem: T\r\n): T[] => {\r\n  const newlist = !list\r\n    ? [newItem]\r\n    : list.filter((o) => o.cid !== newItem.cid).concat(newItem);\r\n\r\n  return newlist;\r\n};\r\n\r\nexport const getListRemoveIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  cid: string\r\n): T[] => {\r\n  const newlist = !list ? [] : list.filter((o) => o.cid !== cid);\r\n\r\n  return newlist;\r\n};\r\n\r\nexport const setIframeSize = <T extends {}>(\r\n  item: T,\r\n  options: { ratio?: number; w: number; h: number }\r\n): T => {\r\n  const { ratio, w, h } = options;\r\n  return {\r\n    ...item,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const calcNewIframeSize = (\r\n  cW: number,\r\n  cH: number,\r\n  ratio: number,\r\n  size: number\r\n): IframeSizeProps => {\r\n  let maxArea = 0;\r\n  let col = 0;\r\n  let row = 0;\r\n  let w = 0;\r\n  let h = 0;\r\n\r\n  for (let i = 1; i < size + 1; i++) {\r\n    const curRow = Math.ceil(size / i);\r\n    // 期待的均分高度為  (cW / i) * Ratio ;\r\n    // 實際允許高度上限  cH / curRow) ;\r\n    // 合理高度範圍勢必介於 [期待的均分高度為, 實際允許高度上限] 這兩者之間\r\n    const gridW = cW / i;\r\n    const gridH = gridW * ratio;\r\n    let curH = Math.min(gridH, cH / curRow);\r\n    // 高度決定後，便可直接決定出寬度。\r\n    let curW = curH * (1 / ratio);\r\n\r\n    const curArea = curW * curH;\r\n    if (curArea > maxArea) {\r\n      maxArea = curArea;\r\n      col = i;\r\n      row = curRow;\r\n      w = curW;\r\n      h = curH;\r\n    }\r\n    console.log(\r\n      `[TheaterIframesViewer] \\n col: ${i}, row: ${curRow}, w: ${curW}, h: ${curH}, area: ${curArea}, max: ${maxArea}`\r\n    );\r\n  }\r\n\r\n  return { col, row, w, h };\r\n};\r\n\r\ntype IframeSizePropsV2 = {\r\n  col: number;\r\n  row: number;\r\n  pw: number;\r\n  ph: number;\r\n  cw: number;\r\n  ch: number;\r\n  flexType: string;\r\n};\r\n\r\nconst MIN_CHATBOX_WIDTH = 320;\r\nconst MIN_CHATBOX_HEIGHT = 320;\r\n\r\nconst getResult = (\r\n  col: number,\r\n  row: number,\r\n  cw: number,\r\n  ch: number,\r\n  pw: number,\r\n  ph: number,\r\n  flexType: string\r\n): IframeSizePropsV2 => {\r\n  return {\r\n    col,\r\n    row,\r\n    cw,\r\n    ch,\r\n    pw,\r\n    ph,\r\n    flexType,\r\n  };\r\n};\r\n\r\nexport const calcNewIframeSizeV2 = (\r\n  cW: number,\r\n  cH: number,\r\n  ratio: number,\r\n  size: number\r\n): IframeSizePropsV2 => {\r\n  let result: IframeSizePropsV2 = {\r\n    col: 0,\r\n    row: 0,\r\n    cw: 0,\r\n    ch: 0,\r\n    pw: 0,\r\n    ph: 0,\r\n    flexType: \"column\",\r\n  };\r\n\r\n  let maxArea = 0;\r\n\r\n  for (let i = 1; i < size + 1; i++) {\r\n    const curRow = Math.ceil(size / i);\r\n\r\n    const gridW = cW / i;\r\n    const gridH = cH / curRow;\r\n    var curPlayW = 0;\r\n    var curPlayH = 0;\r\n    var curChatW = 0;\r\n    var curChatH = 0;\r\n\r\n    // TYPE flex-direction: column\r\n    if (gridH > MIN_CHATBOX_HEIGHT) {\r\n      curChatW = gridW;\r\n      curPlayH = Math.min(gridW * ratio, gridH - MIN_CHATBOX_HEIGHT);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n\r\n      curChatH = gridH - curPlayH;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // TYPE flex-direction: row\r\n    if (gridW > MIN_CHATBOX_WIDTH) {\r\n      curChatH = gridH;\r\n      curPlayW = Math.min(gridH * (1 / ratio), gridW - MIN_CHATBOX_WIDTH);\r\n      curPlayH = curPlayW * ratio;\r\n\r\n      curChatW = gridW - curPlayW;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"row\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[row] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // neither\r\n    if (gridH <= MIN_CHATBOX_HEIGHT && gridW <= MIN_CHATBOX_WIDTH) {\r\n      curPlayH = Math.min(gridW * ratio, gridH);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n      curChatW = 0;\r\n      curChatH = 0;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n  }\r\n\r\n  return { ...result };\r\n};\r\n\r\nexport const playSliderLeft =\r\n  (sliderIndex: number, numOfElements: number) => (dispatch: any) => {\r\n    let next = sliderIndex - 1;\r\n    if (next === 0) {\r\n      dispatch(setSlider({ next: numOfElements + 1, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: numOfElements, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n\r\nexport const playSliderRight =\r\n  (sliderIndex: number, numOfElements: number) => (dispatch: any) => {\r\n    let next = sliderIndex + 1;\r\n    if (next === numOfElements + 1) {\r\n      dispatch(setSlider({ next: 0, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: 1, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { history } from \"../..\";\r\nimport { RootState } from \"../../app/store\";\r\nimport {\r\n  ChannelCardProps,\r\n  ChannelProps,\r\n  ChatboxIframe,\r\n  PlayerIframe,\r\n  TheaterElement,\r\n  TheaterState,\r\n} from \"../../app/types\";\r\nimport {\r\n  calcNewIframeSizeV2,\r\n  convertToChatboxIframe,\r\n  convertToPlayerIframe,\r\n  createChatboxIframe,\r\n  createPlayerIframe,\r\n  createTheaterElement,\r\n  getListAppendIframe,\r\n  getListRemoveIframe,\r\n  setIframeSize,\r\n} from \"./share\";\r\n\r\nconst initialState: TheaterState = {\r\n  fromChannel: [],\r\n  elements: [],\r\n  playlist: [],\r\n  chatlist: [],\r\n  slider: {\r\n    sliderIndex: 0,\r\n    isTakenOverAnim: false,\r\n    isFolded: false,\r\n  },\r\n  gridlayout: {\r\n    flexType: \"column\",\r\n    ratio: 0.5625,\r\n    clientWidth: 0,\r\n    clientHeight: 0,\r\n    col: 0,\r\n    row: 0,\r\n  },\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"theater\",\r\n  initialState,\r\n  reducers: {\r\n    setElements: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { channels: ChannelProps[] };\r\n      }\r\n    ) => {\r\n      const { channels } = action.payload;\r\n      if (channels.length === 0) {\r\n        state.elements = [];\r\n        state.slider.sliderIndex = 0;\r\n      }\r\n      const mp = new Map<string, boolean>();\r\n      state.playlist.forEach((p) => mp.set(p.cid, true));\r\n\r\n      // 進入Theater頁面後，會先獲取當前可以\"直播\"的頻道元素。\r\n      // 進入Theater頁面方式有兩種:\r\n      //    1) 透過NAV按鈕直接進入。\r\n      //    2) 透過點擊卡片進入，這種方式會自動播放卡片上的影片。\r\n      // 此處，檢查是否為(2)的方式，即檢查fromChannel，並再檢查後清除。\r\n      var found = 0;\r\n      const cidFromChannel: string = state.fromChannel[0].cid || \"\";\r\n\r\n      // 透過playlist中的元素，對應elements進行修改\r\n      const elements: TheaterElement[] = channels.map((ch, i) => {\r\n        if (ch.cid === cidFromChannel) {\r\n          found = i;\r\n          console.log(\"由FromChannel存在，NEW_sliderIndex: \", found);\r\n        }\r\n\r\n        // 逐一獲取成 TheaterElement\r\n        if (mp.get(ch.cid)) {\r\n          return createTheaterElement(ch, { checked: true });\r\n        } else {\r\n          return createTheaterElement(ch, { checked: false });\r\n        }\r\n      });\r\n\r\n      // 獲取新的 elements後，還要指定起始位置\r\n      state.elements = elements;\r\n      state.slider.sliderIndex = found + 1;\r\n    },\r\n    setSlider: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { next: number; isTakenOverAnim: boolean };\r\n      }\r\n    ) => {\r\n      const { next, isTakenOverAnim } = action.payload;\r\n      console.log(\r\n        `[setSlider] next:${next} , isTakenOverAnim:${isTakenOverAnim}`\r\n      );\r\n      state.slider.sliderIndex = next;\r\n      state.slider.isTakenOverAnim = isTakenOverAnim;\r\n    },\r\n    setSliderFolded: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: boolean;\r\n      }\r\n    ) => {\r\n      state.slider.isFolded = action.payload;\r\n      console.log(`slider isFolded : ${action.payload}`);\r\n    },\r\n    resizeGridLayout: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          clientWidth: number;\r\n          clientHeight: number;\r\n        };\r\n      }\r\n    ) => {\r\n      const { clientWidth, clientHeight } = action.payload;\r\n      const ratio = state.gridlayout.ratio;\r\n      const numOfIframes = state.playlist.length;\r\n      const newIframeSize = calcNewIframeSizeV2(\r\n        clientWidth,\r\n        clientHeight,\r\n        ratio,\r\n        numOfIframes\r\n      );\r\n      const { flexType, pw, ph, cw, ch, col, row } = newIframeSize;\r\n      state.playlist = state.playlist.map((player) =>\r\n        setIframeSize(player, { w: pw, h: ph })\r\n      );\r\n      state.chatlist = state.chatlist.map((chatbox) =>\r\n        setIframeSize(chatbox, { w: cw, h: ch })\r\n      );\r\n      state.gridlayout = {\r\n        flexType,\r\n        ratio,\r\n        clientWidth,\r\n        clientHeight,\r\n        col,\r\n        row,\r\n      };\r\n    },\r\n    setFromChannel: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { item: ChannelCardProps };\r\n      }\r\n    ) => {\r\n      const { item } = action.payload;\r\n      const newPlayerIframe = convertToPlayerIframe(item, {\r\n        w: 0,\r\n        h: 0,\r\n      });\r\n      const newChatboxIframe = convertToChatboxIframe(item, {\r\n        w: 0,\r\n        h: 0,\r\n        isEnable: item.status === \"live\",\r\n      });\r\n      state.fromChannel = [item];\r\n      state.playlist = [newPlayerIframe];\r\n      state.chatlist = [newChatboxIframe];\r\n      history.push({ pathname: \"/theater\" });\r\n    },\r\n    appendIframeToPlaylist: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { item: TheaterElement };\r\n      }\r\n    ) => {\r\n      const { item } = action.payload;\r\n      const newItem: TheaterElement = { ...item, checked: true };\r\n      const newElements: TheaterElement[] = state.elements.map((e) =>\r\n        e.cid === item.cid ? newItem : e\r\n      );\r\n\r\n      const newPlaylist: PlayerIframe[] = getListAppendIframe(\r\n        state.playlist,\r\n        createPlayerIframe(newItem, { w: 0, h: 0 })\r\n      );\r\n\r\n      const newChatlist: ChatboxIframe[] = getListAppendIframe(\r\n        state.chatlist,\r\n        createChatboxIframe(newItem, { w: 0, h: 0, isEnable: true })\r\n      );\r\n\r\n      state.elements = newElements;\r\n      state.playlist = newPlaylist;\r\n      state.chatlist = newChatlist;\r\n    },\r\n    removeIframeFromPlaylist: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { item: TheaterElement };\r\n      }\r\n    ) => {\r\n      const { item } = action.payload;\r\n      const newItem: TheaterElement = { ...item, checked: false };\r\n      const newElements: TheaterElement[] = state.elements.map((e) =>\r\n        e.cid === item.cid ? newItem : e\r\n      );\r\n      state.elements = newElements;\r\n      state.playlist = getListRemoveIframe(state.playlist, item.cid);\r\n      state.chatlist = getListRemoveIframe(state.chatlist, item.cid);\r\n    },\r\n    removeIframeByCid: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { cid: string };\r\n      }\r\n    ) => {\r\n      const { cid } = action.payload;\r\n      state.playlist = getListRemoveIframe(state.playlist, cid);\r\n      state.chatlist = getListRemoveIframe(state.chatlist, cid);\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setElements,\r\n  setSlider,\r\n  setSliderFolded,\r\n  resizeGridLayout,\r\n  setFromChannel,\r\n  appendIframeToPlaylist,\r\n  removeIframeFromPlaylist,\r\n  removeIframeByCid,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const selectTheater = (state: RootState): TheaterState => state.theater;\r\nexport const selectElements = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.elements\r\n);\r\nexport const selectPlaylist = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.playlist\r\n);\r\nexport const selectPlayPairs = createSelector([selectTheater], (theater) => {\r\n  const playlist = theater.playlist;\r\n  const chatlist = theater.chatlist;\r\n  const len = playlist.length;\r\n  const result = [];\r\n  for (let i = 0; i < len; i++) {\r\n    result.push({ player: playlist[i], chatbox: chatlist[i] });\r\n  }\r\n  return result;\r\n});\r\nexport const selectGridLayout = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.gridlayout\r\n);\r\nexport const selectSlider = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.slider\r\n);\r\nexport const selectNumOfElements = createSelector(\r\n  [selectElements],\r\n  (elements) => elements.length\r\n);\r\nexport const selectSliderElements = createSelector(\r\n  [selectElements],\r\n  (elements) =>\r\n    elements.length > 0\r\n      ? [elements[elements.length - 1], ...elements, elements[0]]\r\n      : []\r\n);\r\n","import { NavItemProps, Switcher } from \"./types\";\r\nimport * as ai from \"react-icons/ai\";\r\n\r\n// export const API_SERVER_URL = \"http://192.168.50.240:8000\";\r\nexport const API_SERVER_URL = `https://lowkeydd.ddnsking.com`;\r\n\r\nexport const VISITS_DEFAULT_GROUPNAME = \"Favorite\";\r\n\r\nexport const CHANNELS_DEFAULT_GROUPNAME = \"Resident\";\r\n\r\nexport const SwitcherList: Array<Switcher> = [\r\n  { checked: false, htmlFor: \"live\", afterColor: \"#f00\" },\r\n  { checked: false, htmlFor: \"wait\", afterColor: \"#0ff\" },\r\n  { checked: false, htmlFor: \"off\", afterColor: \"#856\" },\r\n];\r\n\r\nexport const NavItemsArray: NavItemProps[] = [\r\n  {\r\n    title: \"瀏覽\",\r\n    path: \"/channels/\",\r\n    icon: <ai.AiOutlineHeart />,\r\n  },\r\n  {\r\n    title: \"影院\",\r\n    path: \"/theater/\",\r\n    icon: <ai.AiOutlineVideoCamera />,\r\n  },\r\n  {\r\n    title: \"會員\",\r\n    path: \"/login/\",\r\n    icon: <ai.AiOutlineUser />,\r\n  },\r\n  // {\r\n  //   title: \"收藏\",\r\n  //   path: \"/visit/\",\r\n  //   icon: <ai.AiOutlineBook />,\r\n  // },\r\n];\r\n","import {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../app/config\";\r\nimport {\r\n  ChannelCardProps,\r\n  ChannelProps,\r\n  FavoredItem,\r\n  VisitItem,\r\n} from \"../../app/types\";\r\n\r\nexport const createChannelCard = (\r\n  ch: ChannelProps,\r\n  options: {\r\n    group: string,\r\n    heart: boolean;\r\n  }\r\n): ChannelCardProps => {\r\n  // 表示為自動添加的預設名稱\r\n\r\n  const { group, heart } = options;\r\n\r\n  return {\r\n    ...ch,\r\n    group,\r\n    heart,\r\n  };\r\n};\r\n\r\nexport const createFavoredItem = (\r\n  card: ChannelCardProps | VisitItem,\r\n  options: { isChanged: boolean; isNewAdded: boolean; isDeleted: boolean }\r\n): FavoredItem => {\r\n  const { isChanged, isNewAdded, isDeleted } = options;\r\n  const { cid, cname, owner, avatar, method, group } = card;\r\n  const groupName =\r\n    group === CHANNELS_DEFAULT_GROUPNAME ? VISITS_DEFAULT_GROUPNAME : group;\r\n  return {\r\n    cid,\r\n    cname,\r\n    owner,\r\n    avatar,\r\n    method,\r\n    group: groupName,\r\n    isChanged,\r\n    isNewAdded,\r\n    isDeleted,\r\n  };\r\n};\r\n\r\nexport const createVisitItem = (\r\n  card: ChannelCardProps | FavoredItem\r\n): VisitItem => {\r\n  const { cid, cname, owner, avatar, method, group } = card;\r\n  const groupName =\r\n    group === CHANNELS_DEFAULT_GROUPNAME ? VISITS_DEFAULT_GROUPNAME : group;\r\n  return {\r\n    cid,\r\n    cname,\r\n    owner,\r\n    avatar,\r\n    method,\r\n    group: groupName,\r\n  };\r\n};\r\n\r\nexport const createVMap = <T extends { cid: string }>(\r\n  list: T[]\r\n): Map<string, T> => {\r\n  const mp = new Map<string, T>();\r\n  list.forEach((o) => {\r\n    mp.set(o.cid, o);\r\n  });\r\n  return mp;\r\n};\r\n\r\nexport const createMap = <T extends { cid: string }>(\r\n  list: T[]\r\n): Map<string, boolean> => {\r\n  const mp = new Map<string, boolean>();\r\n  list.forEach((o) => {\r\n    mp.set(o.cid, true);\r\n  });\r\n  return mp;\r\n};\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../app/config\";\r\nimport { RootState } from \"../../app/store\";\r\nimport {\r\n  ChannelCardProps,\r\n  ChannelProps,\r\n  FavoredItem,\r\n  VisitItem,\r\n  VisitList,\r\n} from \"../../app/types\";\r\nimport { createChannelCard, createFavoredItem, createVisitItem } from \"./share\";\r\n\r\ntype ChannelCardStore = {\r\n  hasFetchChannels: boolean;\r\n  clusters: ChannelCardProps[][];\r\n  group: string[];\r\n  favoredList: FavoredItem[];\r\n  tags: string[];\r\n  current: ChannelCardProps | null;\r\n  isFavoredCardsViewerEnable: boolean;\r\n};\r\n\r\nconst initialState: ChannelCardStore = {\r\n  hasFetchChannels: false,\r\n  clusters: [[]],\r\n  group: [],\r\n  favoredList: [],\r\n  tags: [\"live\"],\r\n  current: null,\r\n  isFavoredCardsViewerEnable: false,\r\n};\r\n\r\nconst setCluster = (\r\n  state: ChannelCardStore,\r\n  channels: ChannelProps[][],\r\n  group: string[]\r\n) => {\r\n  const clusters = channels.map((chgroups, i) =>\r\n    chgroups !== null\r\n      ? chgroups.map((ch) =>\r\n          createChannelCard(ch, {\r\n            group: group[i],\r\n            heart: group[i] !== CHANNELS_DEFAULT_GROUPNAME,\r\n          })\r\n        )\r\n      : []\r\n  );\r\n  console.log(\"[ChannelCardStore] setCluster\");\r\n  state.clusters = clusters;\r\n  state.hasFetchChannels = true;\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"browser\",\r\n  initialState,\r\n  reducers: {\r\n    setStore: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          channels: ChannelProps[][];\r\n          group: string[];\r\n          list: VisitItem[];\r\n          tags: string[];\r\n        };\r\n      }\r\n    ) => {\r\n      const { channels, group, list, tags } = action.payload;\r\n      state.group = group;\r\n      state.tags = tags[0] === \"all\" ? [\"live\", \"wait\", \"off\"] : tags;\r\n      // state.current = null;\r\n\r\n      // list\r\n      if (list) {\r\n        state.favoredList = list.map((v: VisitItem) =>\r\n          createFavoredItem(v, {\r\n            isChanged: false,\r\n            isNewAdded: false,\r\n            isDeleted: false,\r\n          })\r\n        );\r\n      }\r\n\r\n      // cluster\r\n      setCluster(state, channels, group);\r\n    },\r\n    setChannelCard: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          card: ChannelCardProps;\r\n          options: {\r\n            isChanged: boolean;\r\n            isNewAdded: boolean;\r\n            isDeleted: boolean;\r\n          };\r\n        };\r\n      }\r\n    ) => {\r\n      const { card, options } = action.payload;\r\n      const { isChanged, isNewAdded, isDeleted } = options;\r\n      const prelist = state.favoredList;\r\n\r\n      if (card.heart) {\r\n        state.favoredList = [\r\n          createFavoredItem(card, {\r\n            isChanged,\r\n            isNewAdded,\r\n            isDeleted,\r\n          }),\r\n          ...prelist.filter((p) => p.cid !== card.cid),\r\n        ];\r\n      } else {\r\n        if (isNewAdded) {\r\n          // 對於還不是喜愛的頻道直接移除。\r\n          state.favoredList = [...prelist.filter((p) => p.cid !== card.cid)];\r\n        } else {\r\n          // 對於已經加入喜愛的頻道視為刪除(劃線)。\r\n          const newItem = createFavoredItem(card, {\r\n            isChanged,\r\n            isNewAdded,\r\n            isDeleted: true,\r\n          });\r\n          state.favoredList = prelist.map((p) =>\r\n            p.cid !== newItem.cid ? p : newItem\r\n          );\r\n        }\r\n      }\r\n\r\n      // 產生新的卡片群集\r\n      state.clusters = state.clusters.map((cards: ChannelCardProps[]) =>\r\n        cards.length !== 0\r\n          ? cards.map((ch: ChannelCardProps) =>\r\n              ch.cid !== card.cid ? ch : card\r\n            )\r\n          : []\r\n      );\r\n    },\r\n    setFavoredList: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          group: string[] | null;\r\n          list: FavoredItem[];\r\n        };\r\n      }\r\n    ) => {\r\n      const { group, list } = action.payload;\r\n      if (group !== null) {\r\n        state.group = group;\r\n      }\r\n      state.favoredList = list;\r\n\r\n      // 無法透過新生成的List去推得新的卡片群集；\r\n      // 必須在更新後發送請求，重新獲取新的clusters 和更新後的 List\r\n    },\r\n    setSearchResult: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { current: ChannelCardProps | null };\r\n      }\r\n    ) => {\r\n      const { current } = action.payload;\r\n      if (current !== null) {\r\n        state.current = current;\r\n\r\n        if (current.heart === true) {\r\n          const newItem = createFavoredItem(\r\n            { ...current, group: VISITS_DEFAULT_GROUPNAME }, //修正為合法的group屬性\r\n            {\r\n              isChanged: false,\r\n              isNewAdded: true,\r\n              isDeleted: false,\r\n            }\r\n          );\r\n          state.favoredList = [newItem, ...state.favoredList];\r\n        } else {\r\n          state.favoredList = state.favoredList.filter(\r\n            (f) => f.cid !== current.cid\r\n          );\r\n        }\r\n      }\r\n    },\r\n    setIsFavoredCardsViewerEnable: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: boolean | undefined;\r\n      }\r\n    ) => {\r\n      if (action.payload === undefined) {\r\n        state.isFavoredCardsViewerEnable = !state.isFavoredCardsViewerEnable;\r\n      } else {\r\n        state.isFavoredCardsViewerEnable = action.payload;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setStore,\r\n  setChannelCard,\r\n  setFavoredList,\r\n  setSearchResult,\r\n  setIsFavoredCardsViewerEnable,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const selectChannelCardStore = (state: RootState) =>\r\n  state.channelCardStore;\r\n\r\nexport const selectHasFetchChannels = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.hasFetchChannels\r\n);\r\n\r\nexport const selectChannelsCluster = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.clusters\r\n);\r\n\r\nexport const selectTags = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.tags\r\n);\r\n\r\nexport const selectGroup = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.group\r\n);\r\n\r\nexport const selectFavoredList = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.favoredList\r\n);\r\n\r\nexport const selectCurrent = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.current\r\n);\r\n\r\nexport const selectIsFavoredCardsViewerEnable = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.isFavoredCardsViewerEnable\r\n);\r\n\r\nexport const selectVisitList = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    const newfavoredList = favoredList\r\n      // 刪除\r\n      .filter((f) => !f.isDeleted)\r\n      // 修正群主名稱 Resident => Favorite\r\n      .map((f) =>\r\n        f.group === CHANNELS_DEFAULT_GROUPNAME\r\n          ? { ...f, group: VISITS_DEFAULT_GROUPNAME }\r\n          : f\r\n      );\r\n\r\n    // 刪除多餘沒被使用到的群組名稱\r\n    const mp = new Map<string, boolean>();\r\n    const newGroup: string[] = [];\r\n    newfavoredList.forEach((f: FavoredItem) => {\r\n      if (!mp.has(f.group)) {\r\n        mp.set(f.group, true);\r\n        newGroup.push(f.group);\r\n      }\r\n    });\r\n\r\n    // 轉成VisitItem表單。\r\n    const list: VisitItem[] = newfavoredList.map((f) => createVisitItem(f));\r\n\r\n    // 輸出結果\r\n    const visit: VisitList = {\r\n      list,\r\n      group: newGroup,\r\n    };\r\n    return visit;\r\n  }\r\n);\r\n\r\nexport const selectFavoredCardsList = createSelector(\r\n  [selectGroup, selectFavoredList],\r\n  (group, favoredList) => {\r\n    if (group.length === 0) {\r\n      return [[]];\r\n    }\r\n\r\n    const result: FavoredItem[][] = group.map((x) => []);\r\n    favoredList.forEach((f: FavoredItem) => {\r\n      const index = group.indexOf(f.group);\r\n      result[index].push(f);\r\n    });\r\n\r\n    return result;\r\n  }\r\n);\r\n\r\nexport const selectIsFavoredCardsListChanged = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var isListChanged = false;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isChanged, isNewAdded, isDeleted } = favoredList[i];\r\n      if (isChanged || isNewAdded || isDeleted) {\r\n        isListChanged = true;\r\n        break;\r\n      }\r\n    }\r\n    return isListChanged;\r\n  }\r\n);\r\n\r\nexport const selectNumOfFavoredCards = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var count = 0;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isNewAdded } = favoredList[i];\r\n      if (isNewAdded) {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n);\r\n\r\n// export const selectFavoredList = createSelector([selectChannelCardStore], (store) => {\r\n//   return store.favoredList;\r\n// });\r\n","import * as ai from \"react-icons/ai\";\r\nimport { ReactElement, useEffect, useRef, useState, Fragment } from \"react\";\r\nimport { useDispatch } from \"../../app/hooks\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { setFromChannel } from \"../theater/slice\";\r\nimport styled from \"styled-components\";\r\nimport { setChannelCard, setSearchResult } from \"./slice\";\r\nimport { CHANNELS_DEFAULT_GROUPNAME } from \"../../app/config\";\r\n\r\nexport function ChannelCard(props: ChannelCardProps) {\r\n  const {\r\n    avatar,\r\n    // cname,\r\n    cid,\r\n    owner,\r\n    status,\r\n    // streamurl,\r\n    thumbnail,\r\n    title,\r\n    viewcount,\r\n    starttime,\r\n    // method,\r\n    // updatetime,\r\n    group: groupName,\r\n    heart,\r\n  } = props;\r\n  const item = props;\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const avatarStyles = getAvatarStyles(status);\r\n  const heartStyles = getHeartTheme(status, heart);\r\n  const previewStyles = getPreviewImage(cid, status, thumbnail, isVisible);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEnterTheater = () => {\r\n    // 當點選頻道進入Theater。\r\n    if (status !== \"failure\" && status !== \"error\") {\r\n      dispatch(setFromChannel({ item }));\r\n    }\r\n  };\r\n\r\n  const onFavoredHeartBtnClick = () => {\r\n    const card: ChannelCardProps = { ...props, heart: !heart };\r\n    if (groupName === \"Search Result\") {\r\n      dispatch(\r\n        setSearchResult({\r\n          current: { ...props, heart: !heart },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        setChannelCard({\r\n          card,\r\n          options: {\r\n            isChanged: false,\r\n            isNewAdded: groupName === CHANNELS_DEFAULT_GROUPNAME,\r\n            isDeleted: false,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const parentDom = ref.current;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsVisible(entry.isIntersecting);\r\n    });\r\n    if (parentDom) {\r\n      observer.observe(parentDom);\r\n    }\r\n    return () => {\r\n      if (parentDom) {\r\n        observer.unobserve(parentDom);\r\n      }\r\n      observer.disconnect();\r\n    };\r\n  }, [ref, isVisible]);\r\n\r\n  // console.log(\"owner: \", owner, \"status: \", status);\r\n\r\n  return (\r\n    <Container ref={ref}>\r\n      <AvatarBox {...avatarStyles}>\r\n        <img src={isVisible ? avatar : undefined} alt={\"avatar_\" + cid} />\r\n        <div>\r\n          <h1>{status}</h1>\r\n        </div>\r\n      </AvatarBox>\r\n      <FavoredHeartBtn onClick={onFavoredHeartBtnClick} {...heartStyles}>\r\n        {heartStyles.icon}\r\n      </FavoredHeartBtn>\r\n      <CardBody>\r\n        <PreviewBox {...previewStyles} onClick={handleEnterTheater}>\r\n          {previewStyles.image}\r\n        </PreviewBox>\r\n        <Description>\r\n          <Owner>\r\n            <h1>{owner}</h1>\r\n          </Owner>\r\n          <ChTitle>\r\n            <p>{title}</p>\r\n          </ChTitle>\r\n          <Detail>\r\n            <Left>\r\n              <ai.AiOutlineEye />\r\n              <p>{viewcount}</p>\r\n            </Left>\r\n            <Right>\r\n              <ai.AiOutlineCalendar />\r\n              <p>{status === \"live\" ? \"直播中\" : starttime}</p>\r\n            </Right>\r\n          </Detail>\r\n        </Description>\r\n      </CardBody>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --bkgColor: #fff;\r\n\r\n  /* background-color: #999; */\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\ntype AvatarStyle = {\r\n  fontcolor: string;\r\n  fontbgcolor: string;\r\n  bordercolor: string;\r\n  ishidden: boolean;\r\n};\r\n\r\nconst getAvatarStyles = (status: string): AvatarStyle => {\r\n  switch (status) {\r\n    case \"live\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#ee5253\",\r\n        bordercolor: \"#f00\",\r\n        ishidden: false,\r\n      };\r\n    case \"wait\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#34afeb\",\r\n        bordercolor: \"#6a97ad\",\r\n        ishidden: false,\r\n      };\r\n    case \"off\":\r\n      return {\r\n        fontcolor: \"#f9fae6\",\r\n        fontbgcolor: \"#616161\",\r\n        bordercolor: \"#616161\",\r\n        ishidden: false,\r\n      };\r\n    default:\r\n      return {\r\n        fontcolor: \"#f0d8e2\",\r\n        fontbgcolor: \"#cb4ede\",\r\n        bordercolor: \"#6c3075\",\r\n        ishidden: true,\r\n      };\r\n  }\r\n};\r\n\r\nconst AvatarBox = styled.div<AvatarStyle>`\r\n  display: ${(p) => (p.ishidden ? `none` : `static`)};\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: none;\r\n  pointer-events: none;\r\n  img {\r\n    width: 4.8em;\r\n    border: 5px solid ${(p) => p.fontbgcolor};\r\n    border-radius: 50%;\r\n  }\r\n  div {\r\n    position: relative;\r\n    background: none;\r\n    top: -12px;\r\n    left: 0;\r\n    width: 100%;\r\n    padding: 3px 0;\r\n    h1 {\r\n      margin: auto;\r\n      width: 48px;\r\n      padding: 1px 1px;\r\n      color: ${(p) => p.fontcolor};\r\n      background-color: ${(p) => p.fontbgcolor};\r\n      text-align: center;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n`;\r\n\r\ntype HeartThemeType = {\r\n  color: string;\r\n  hoverColor: string;\r\n  icon: any;\r\n  isHidden: boolean;\r\n};\r\nexport const getHeartTheme = (\r\n  status: string,\r\n  heart: boolean\r\n): HeartThemeType => {\r\n  switch (status) {\r\n    case \"failure\":\r\n    case \"error\":\r\n      return {\r\n        color: \"\",\r\n        hoverColor: \"\",\r\n        icon: null,\r\n        isHidden: true,\r\n      };\r\n    default:\r\n      return heart === true\r\n        ? {\r\n            color: \"#ee5253\",\r\n            hoverColor: \"#ee5253\",\r\n            icon: <ai.AiFillHeart />,\r\n            isHidden: false,\r\n          }\r\n        : {\r\n            color: \"#aaa\",\r\n            hoverColor: \"#ee5253\",\r\n            icon: <ai.AiOutlineHeart />,\r\n            isHidden: false,\r\n          };\r\n  }\r\n};\r\n\r\nconst FavoredHeartBtn = styled.div<HeartThemeType>`\r\n  display: ${(p) => (p.isHidden ? `none` : `static`)};\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  right: 0.5em;\r\n  top: 2.5em;\r\n  z-index: 1;\r\n\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: none;\r\n\r\n  svg {\r\n    font-size: 35px;\r\n    color: ${(p) => p.color};\r\n    transition: 0.1s;\r\n  }\r\n\r\n  :hover {\r\n    svg {\r\n      font-size: 38px;\r\n      color: ${(p) => p.hoverColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  background-color: var(--navColor);\r\n  border-radius: 1.2em;\r\n  margin: 10px 10px;\r\n`;\r\n\r\ntype PreviewBoxProps = {\r\n  isEnabled: boolean; // 允許點擊\r\n  image: ReactElement;\r\n};\r\nconst getPreviewImage = (\r\n  cid: string,\r\n  status: string,\r\n  thumbnail: string,\r\n  isVisible: boolean\r\n): PreviewBoxProps => {\r\n  switch (status) {\r\n    case \"failure\":\r\n      return {\r\n        isEnabled: false,\r\n        image: (\r\n          <div>\r\n            <ai.AiFillFrown />\r\n            <h1>獲取頻道訊息發生錯誤</h1>\r\n          </div>\r\n        ),\r\n      };\r\n    case \"error\":\r\n      return {\r\n        isEnabled: false,\r\n        image: (\r\n          <div>\r\n            <ai.AiFillExclamationCircle />\r\n            <h1>輸入的網址格式有誤?</h1>\r\n            <p>可參考下方的網址範例 : </p>\r\n            <p>https://www.twitch.tv/xxxx</p>\r\n            <p>https://www.youtube.com/channel/xxxx</p>\r\n          </div>\r\n        ),\r\n      };\r\n    default:\r\n      return {\r\n        isEnabled: true,\r\n        image: (\r\n          <div>\r\n            <img\r\n              src={isVisible ? thumbnail : undefined}\r\n              alt={\"thumbnail_\" + cid}\r\n            />\r\n          </div>\r\n        ),\r\n      };\r\n  }\r\n};\r\nconst PreviewBox = styled.a<PreviewBoxProps>`\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  //點擊後將跳轉到Theater\r\n  cursor: ${(p) => (p.isEnabled ? `pointer` : `auto`)};\r\n\r\n  div {\r\n    background-color: #000;\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 15rem;\r\n    // 透過hidden把超出範圍的圖片直接剪裁掉\r\n    overflow: hidden;\r\n    border-radius: 1.2em;\r\n    box-sizing: border-box;\r\n\r\n    color: var(--toogleColor);\r\n\r\n    // 頻道正確顯示時\r\n    img {\r\n      width: 99.9%;\r\n      border-radius: 6px;\r\n    }\r\n\r\n    // 錯誤提示訊息\r\n    svg {\r\n      margin: 0 0 10px 0;\r\n      font-size: 150px;\r\n    }\r\n    h1 {\r\n      font-size: 18px;\r\n      margin: 0 0 10px 0;\r\n    }\r\n    p {\r\n      font-size: 1.5vmin;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  /* background-color: royalblue; */\r\n\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 6px auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Owner = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  margin: 0 0 10px;\r\n  height: 56px;\r\n  border-bottom: 1px solid silver;\r\n\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  h1 {\r\n    font-size: 26px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n    letter-spacing: 5px;\r\n  }\r\n`;\r\n\r\nconst ChTitle = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  p {\r\n    /* background-color: royalblue; */\r\n    font-size: 16px;\r\n    line-height: 25px;\r\n    padding: 0 20px;\r\n    height: 50px;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n\r\nconst Detail = styled.div`\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  div {\r\n    height: 40px;\r\n    flex: 1;\r\n    background-color: var(--toogleColor);\r\n    padding: 5px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  margin: 0 2px 0 5px;\r\n  border-radius: 0 0 0 15px;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    letter-spacing: 1px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  margin: 0 5px 0 2px;\r\n  border-radius: 0 0 15px 0;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  groupName: string;\r\n  fontsize: string;\r\n  lineColor?: string;\r\n  bkgColor?: string;\r\n};\r\n\r\nexport default function GroupLine(props: Props) {\r\n  const { groupName } = props;\r\n  return (\r\n    <Container {...props}>\r\n      <span>{groupName}</span>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.h1<Props>`\r\n  --lineColor: ${(p) => p.lineColor || `#000`};\r\n  --bkgColor: ${(p) => p.bkgColor || `#fff`};\r\n\r\n  margin: 50px 0 20px 0;\r\n  position: relative;\r\n  text-align: center;\r\n  font-size: ${(p) => p.fontsize};\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  z-index: 1;\r\n  line-height: 50px;\r\n  ::before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  ::after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    right: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  span {\r\n    padding: 0 10px;\r\n    color: var(--lineColor);\r\n    background-color: var(--bkgColor);\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { ChannelCard } from \"./ChannelCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\n\r\nexport function ChannelCardsGroup(props: {\r\n  cards: ChannelCardProps[];\r\n  groupName: string;\r\n}) {\r\n  const { cards, groupName } = props;\r\n\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"40px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#fff\"}\r\n      />\r\n      <ChannelGridCantainer key={\"ChannelGridCantainer_\" + groupName}>\r\n        {cards.map((ch: ChannelCardProps) => (\r\n          <ChannelCard\r\n            key={`ChannelCard_${ch.cid}`}\r\n            {...ch}\r\n            group={groupName}\r\n          />\r\n        ))}\r\n      </ChannelGridCantainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ChannelGridCantainer = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #fff;\r\n\r\n\r\n  display: grid;\r\n  grid-gap: 4px;\r\n  grid-template-columns: repeat(auto-fill, minmax(310px, 1fr));\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 360px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import { useSelector } from \"../../app/hooks\";\r\nimport { selectChannelCardStore } from \"./slice\";\r\nimport { ChannelCardsGroup } from \"./ChannelCardsGroup\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { Fragment } from \"react\";\r\n\r\n/**\r\n * 瀏覽頻道，顯示當前可被瀏覽頻道內容。\r\n */\r\nexport function ChannelCardsBrowser() {\r\n  const { group, clusters } = useSelector(selectChannelCardStore);\r\n  const view = clusters.filter((cs) => cs !== null);\r\n\r\n  return (\r\n    <>\r\n      {view.map((cards, i) =>\r\n        // 收到的頻道資料會透過group清單，以此查找出其所對應的組別\r\n        GetChannelCardsGroup(cards, group[i])\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst GetChannelCardsGroup = (\r\n  cards: ChannelCardProps[],\r\n  groupName: string\r\n): JSX.Element => {\r\n  // groupName =\r\n  //   groupName === VISITS_DEFAULT_GROUPNAME\r\n  //     ? CHANNELS_DEFAULT_GROUPNAME\r\n  //     : groupName;\r\n  // console.log(\"GetChannelCardsGroup groupName\", groupName);\r\n  if (cards.length === 0) {\r\n    return <Fragment key={\"ChannelCardsGroup_\" + groupName} />;\r\n  } else {\r\n    return (\r\n      <ChannelCardsGroup\r\n        key={\"ChannelCardsGroup_\" + groupName}\r\n        cards={cards}\r\n        groupName={groupName}\r\n      />\r\n    );\r\n  }\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function SearchBox(props: SearchBoxProps) {\r\n  // 取得樣式設定參數\r\n  const { theme } = props;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n  const searchInput = useRef<HTMLInputElement>(null);\r\n\r\n  // 輸入查詢功能\r\n  const handleKeyUp = (e: any) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n\r\n    // 按下enter鍵，提交數據\r\n    commit();\r\n  };\r\n\r\n  const commit = () => {\r\n    if (searchInput.current != null) {\r\n      props.onSubmit(searchInput.current.value);\r\n    } else {\r\n      console.error(\"searchInput 不存在\");\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    if (searchInput.current && searchInput.current.value !== \"\") {\r\n      setIsEnable(true);\r\n    } else {\r\n      setIsEnable(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container {...theme} isEnable={isEnable}>\r\n      <input\r\n        onChange={onChange}\r\n        onKeyUp={handleKeyUp}\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n        placeholder=\"(๑•̀ㅂ•́)و✧ 輸入喜歡的頻道網址 !!! \"\r\n        ref={searchInput}\r\n      />\r\n      <button onClick={commit}>\r\n        <ai.AiOutlineSearch style={{ fontSize: \"1.5rem\" }} />\r\n      </button>\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SearchBoxProps = {\r\n  theme?: SearchBoxThemeProps;\r\n  onSubmit: (inputValue: string) => void;\r\n};\r\n\r\ntype SearchBoxThemeProps = {\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n};\r\n\r\nexport const Container = styled.div<{\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n  isEnable: boolean;\r\n}>`\r\n  --height: 2.4rem;\r\n  --width: 2.4rem;\r\n  --bgColor: #2f3640;\r\n  --iconColor: ${(props) => props.iconColor || \"#e84118\"};\r\n  --focusColor: ${(props) => props.focusColor || \"#fff\"};\r\n  background: var(--bgColor);\r\n  width: ${(p) => (p.isEnable ? `100%` : `var(--width)`)};\r\n  height: var(--height);\r\n  border-radius: var(--height);\r\n  padding: calc(var(--height) / 4);\r\n  transition: width 0.4s;\r\n\r\n  input {\r\n    border: none;\r\n    background: none;\r\n    outline: none;\r\n    float: left;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    line-height: var(--height);\r\n    border-radius: var(--height);\r\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n    padding: ${(p) => (p.isEnable ? `0 1rem` : `0px`)};\r\n    width: ${(p) => (p.isEnable ? `80%` : `0%`)};\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  button {\r\n    color: var(--iconColor);\r\n    float: right;\r\n    width: var(--width);\r\n    height: var(--height);\r\n    border-radius: 50%;\r\n    background-color: ${(p) =>\r\n    p.isEnable ? `var(--focusColor)` : `var(--bgColor)`};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    :hover{\r\n\r\n    }\r\n  }\r\n\r\n  :focus-within {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n`;\r\n\r\n// const SearchInput = styled.input`\r\n//     border: none;\r\n//     background: none;\r\n//     outline: none;\r\n//     float: left;\r\n//     color: #fff;\r\n//     font-size: 16px;\r\n//     line-height: var(--height);\r\n//     border-radius: var(--height);\r\n//     box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n//     padding: 0px;\r\n//     width: 0%;\r\n//     transition: all 0.4s;\r\n// `;\r\n\r\n// const SearchButton = styled.a`\r\n//   color: var(--iconColor);\r\n//   float: right;\r\n//   width: var(--width);\r\n//   height: var(--height);\r\n//   border-radius: 50%;\r\n//   background-color: var(--bgColor);\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n// `;\r\n","import axios from \"axios\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { ChannelProps, VisitItem } from \"../../../app/types\";\r\nimport { setStore } from \"../slice\";\r\n\r\nexport const reqFetchChannels =\r\n  (username: string, ssid: string, tags: string[]) => (dispatch: any) => {\r\n    // 避免tags為空\r\n    if (tags.length === 0) {\r\n      console.error(\"tags不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    // 搜尋內容為空時會被撤回\r\n    if (tags[0] === \"\") {\r\n      console.error(\"搜尋內容不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    const request = new FormData();\r\n    request.append(\"username\", username);\r\n    request.append(\"ssid\", ssid);\r\n    request.append(\"tags\", JSON.stringify(tags));\r\n\r\n    console.log(\"getLetsddV2Channels, tags: \", [tags]);\r\n    axios.post(`${API_SERVER_URL}/letsdd/v2`, request).then(\r\n      (response) => {\r\n        console.log(\"成功了, 回應如下:\\n\", response.data);\r\n        const channels: ChannelProps[][] = response.data[\"channels\"];\r\n        const group: string[] = response.data[\"group\"];\r\n        const list: VisitItem[] = response.data[\"list\"];\r\n \r\n\r\n        // 檢驗收到的資料，如果沒有傳送AUTH或驗證失敗，會收到空的group清單。\r\n\r\n        if (group.length === 0 && channels.length === 1) {\r\n          // 使用預設的群組名稱為此頻道來命名。\r\n          dispatch(\r\n            setStore({\r\n              channels: [[], ...channels],\r\n              group: [VISITS_DEFAULT_GROUPNAME, CHANNELS_DEFAULT_GROUPNAME],\r\n              tags,\r\n              list,\r\n            })\r\n          );\r\n        } else {\r\n          // 使用收到的group清單。\r\n          dispatch(\r\n            setStore({\r\n              channels,\r\n              group: group.concat(CHANNELS_DEFAULT_GROUPNAME),\r\n              tags,\r\n              list,\r\n            })\r\n          );\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", error);\r\n      }\r\n    );\r\n  };\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { VisitList } from \"../../../app/types\";\r\nimport { reqFetchChannels } from \"./reqFetchChannels\";\r\n\r\nexport const reqUpdateVisit =\r\n  (username: string, ssid: string, visit: VisitList, tags: string[]) =>\r\n  (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    postform.append(\"visit\", JSON.stringify({ ...visit }));\r\n    axios.post(`${API_SERVER_URL}/visit/update`, postform).then(\r\n      (resp) => {\r\n        console.log(\"更新VisitList, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        // const visit: VisitList = resp.data[\"visit\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          console.log(\"更新VisitList成功了, msg:\\n\", msg);\r\n          // const newList = visit.list || [];\r\n          // const newGroup = visit.group || [];\r\n        } else {\r\n          console.log(\"更新VisitList失敗了, msg:\\n\", msg);\r\n        }\r\n        setTimeout(() =>\r\n          (function (username, ssid, tags) {\r\n            dispatch(reqFetchChannels(username, ssid, tags));\r\n            history.push({ pathname: \"/channels/\" });\r\n          })(username, ssid, tags)\r\n        );\r\n      },\r\n      (err) => {\r\n        console.log(\"更新VisitList失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { UserLoginResponse, UserSession, UserState } from \"../../app/types\";\r\n\r\nconst setSession = (state: UserState, session: UserSession) => {\r\n  const { username, ssid, expiration } = session;\r\n  state.username = username;\r\n  state.ssid = ssid;\r\n  setCookie(ssid, username, expiration);\r\n};\r\n\r\nconst initialState: UserState = {\r\n  username: getCookie(\"username\"),\r\n  ssid: getCookie(\"ssid\"),\r\n  msg: \"\",\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    setUserLogin: (\r\n      state,\r\n      action: { type: string; payload: UserLoginResponse }\r\n    ) => {\r\n      const { username, ssid, expiration, msg } = action.payload;\r\n      setSession(state, { username, ssid, expiration });\r\n      state.msg = msg;\r\n    },\r\n    setUserRegiser: (\r\n      state,\r\n      action: { type: string; payload: UserLoginResponse }\r\n    ) => {\r\n      const { username, ssid, expiration, msg } = action.payload;\r\n      setSession(state, { username, ssid, expiration });\r\n      state.msg = msg;\r\n    },\r\n    setMsg: (state, action: { type: string; payload: string }) => {\r\n      state.msg = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUserLogin, setUserRegiser, setMsg } = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// expiration 會乘上1000倍，所以單位是秒\r\nfunction setCookie(ssid: string, username: string, expiration: number) {\r\n  var expires = new Date(Date.now() + expiration * 1000).toUTCString();\r\n  document.cookie = `ssid=${ssid}; expires=${expires}; path=/`;\r\n  document.cookie = `username=${username}; expires=${expires}; path=/`;\r\n}\r\n\r\nfunction getCookie(c_name: string): string {\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + \"=\");\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(\";\", c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport const selectUser = (state: RootState) => state.user;\r\nexport const selectMsg = createSelector([selectUser], (user) => {\r\n  return user.msg;\r\n});\r\n","import SearchBox from \"../../components/SearchBox\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { reqFetchChannels } from \"./api\";\r\nimport { reqSearchChannel } from \"./api/reqSearchChannel\";\r\nimport { selectUser } from \"../user/slice\";\r\n\r\nexport function ChannelSearch() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (keyword: string) => {\r\n    if (keyword === \"\") return\r\n    if (\r\n      keyword === \"all\" ||\r\n      keyword === \"live\" ||\r\n      keyword === \"wait\" ||\r\n      keyword === \"off\" ||\r\n      keyword === \"failure\"\r\n    ) {\r\n      dispatch(reqFetchChannels(username, ssid, [keyword]));\r\n    }else{\r\n      dispatch(reqSearchChannel(keyword))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchBox\r\n      onSubmit={onSubmit}\r\n      theme={{ focusColor: \"#1985a1\", iconColor: \"#c5c3c6\" }}\r\n    />\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { ChannelProps } from \"../../../app/types\";\r\nimport { createChannelCard } from \"../share\";\r\nimport { setSearchResult } from \"../slice\";\r\n\r\nexport const reqSearchChannel = (url: string) => (dispatch: any) => {\r\n  const postform = new FormData();\r\n  postform.append(\"url\", url);\r\n  axios.post(`${API_SERVER_URL}/channels/search`, postform).then(\r\n    (resp) => {\r\n      console.log(\"[ChanelSearch]成功了, 回應如下:\\n\", resp.data);\r\n      const code: string = resp.data[\"code\"];\r\n      const ch: ChannelProps = resp.data[\"channels\"][0];\r\n\r\n      switch (code) {\r\n        case \"success\":\r\n          console.log(`成功獲取頻道 ${ch.cname} \\n`);\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(ch, {\r\n                group: \"Search Result\",\r\n                heart: false,\r\n              }),\r\n            })\r\n          );\r\n          break;\r\n        case \"failure\":\r\n          console.log(\r\n            `獲取頻道 ${ch.cname} 失敗，請確認該頻道是否已經沒有內容或受到閱覽限制\\n`\r\n          );\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(\r\n                { ...ch, status: \"failure\" },\r\n                {\r\n                  group: \"Search Failed\",\r\n                  heart: false,\r\n                }\r\n              ),\r\n            })\r\n          );\r\n          break;\r\n        default:\r\n          console.log(\"作為搜尋頻道的連結格式有誤，請參考以下: \\n\");\r\n          console.log(\"Youtube : https://www.youtube.com/channel/xxxxxxx\\n\");\r\n          console.log(\"twitch  : https://www.twitch.tv/xxxxxx\\n\");\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(\r\n                { ...ch, status: \"error\" },\r\n                {\r\n                  group: \"Search Error\",\r\n                  heart: false,\r\n                }\r\n              ),\r\n            })\r\n          );\r\n          break;\r\n      }\r\n    },\r\n    (err) => {\r\n      console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n    }\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default function SwitchBtn(props: SwitchButtonProps) {\r\n  const { checked, htmlFor, theme } = props;\r\n\r\n  const handleClick = () => {\r\n    props.handleSwitchClick({ tag: htmlFor, isChecked: !checked });\r\n  };\r\n  \r\n  return (\r\n    <Container {...theme}>\r\n      <HiddenCheckedInput\r\n        type=\"checkbox\"\r\n        id={htmlFor || \"\"}\r\n        onClick={handleClick}\r\n      />\r\n      <ToogleFill checked={checked} />\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SwitchButtonProps = {\r\n  htmlFor: string;\r\n  checked: boolean;\r\n  theme?: SwitchButtonThemeProps;\r\n  handleSwitchClick: (action: { tag: string; isChecked: boolean }) => void;\r\n};\r\n\r\ntype SwitchButtonThemeProps = {\r\n  beforeColor?: string;\r\n  afterColor?: string;\r\n  ballColor?: string;\r\n};\r\n\r\nconst Container = styled.label<SwitchButtonThemeProps>`\r\n  --width: 32px;\r\n  --height: calc(var(--width) / 2);\r\n  --radius: calc(var(--height) / 2);\r\n  --beforeColor: ${(props) => props.beforeColor || \"#ddd\"};\r\n  --afterColor: ${(props) => props.afterColor || \"#34deeb\"};\r\n  --ballColor: ${(props) => props.ballColor || \"#fff\"};\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ToogleFill = styled.div<{ checked: boolean }>`\r\n  /* 底色 */\r\n  position: relative;\r\n  width: var(--width);\r\n  height: var(--height);\r\n  border-radius: var(--radius);\r\n  background: ${(props) =>\r\n    props.checked ? `var(--afterColor)` : `var(--beforeColor)`};\r\n  transition: background 0.2s;\r\n\r\n  /* 球球與陰影效果 */\r\n  ::after {\r\n    /* 透過after實現了相對內部移動的效果 */\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: var(--height);\r\n    width: var(--height);\r\n    background: var(--ballColor);\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\r\n    border-radius: var(--radius);\r\n    transform: ${(props) =>\r\n      props.checked ? `translateX(110%)` : `translateX(0%)`};\r\n    transition: transform 0.5s;\r\n  }\r\n`;\r\n\r\nconst HiddenCheckedInput = styled.input`\r\n  display: none;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport SwitchBtn from \"../../components/SwitchBtn\";\r\nimport { SwitcherList } from \"../../app/config\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { selectUser } from \"../user/slice\";\r\nimport { selectTags } from \"./slice\";\r\nimport { reqFetchChannels } from \"./api\";\r\n\r\nexport function ChannelTagsSwitchers() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const dispatch = useDispatch();\r\n  console.log({ tags });\r\n\r\n  const handleSwitchClick = (action: { tag: string; isChecked: boolean }) => {\r\n    const { tag, isChecked } = action;\r\n    if (isChecked) {\r\n      if (!tags.includes(tag)) {\r\n        dispatch(reqFetchChannels(username, ssid, [...tags, tag]));\r\n      }\r\n    } else {\r\n      const newtags = tags.filter((_tag) => _tag !== tag);\r\n      dispatch(reqFetchChannels(username, ssid, newtags));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {SwitcherList.map((tag, _) => {\r\n        const { htmlFor, afterColor } = tag;\r\n        const checked = tags.indexOf(htmlFor) > -1;\r\n        return (\r\n          <SwitchBtnBox key={\"SwitchBtnBox_\" + htmlFor}>\r\n            <p>{htmlFor}</p>\r\n            <SwitchBtn\r\n              htmlFor={htmlFor}\r\n              checked={checked}\r\n              theme={{ afterColor }}\r\n              handleSwitchClick={handleSwitchClick}\r\n            />\r\n          </SwitchBtnBox>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst SwitchBtnBox = styled.div`\r\n  margin: 0 0.5rem;\r\n  height: 2.4rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  p {\r\n    margin-right: 6px;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    color: #eee;\r\n  }\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { setFavoredList, selectChannelCardStore } from \"./slice\";\r\n\r\nexport function FavoredCard(props: FavoredItem) {\r\n  const {\r\n    cid: Cid,\r\n    group: groupName,\r\n    owner,\r\n    cname,\r\n    avatar,\r\n    isDeleted,\r\n    isNewAdded,\r\n  } = props;\r\n  const { favoredList: list, group } = useSelector(selectChannelCardStore);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getEditedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.filter(\r\n      (item: FavoredItem) => item.cid !== newItem.cid\r\n    );\r\n    return [newItem, ...newList];\r\n  };\r\n\r\n  const getDeletedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.map((item: FavoredItem) =>\r\n      item.cid !== newItem.cid ? item : newItem\r\n    );\r\n    return [...newList];\r\n  };\r\n\r\n  const handleGroupEdit = () => {\r\n    // 取得新的狀態\r\n    const newGroupName = window.prompt(\"指定為新的群組? \", groupName);\r\n\r\n    if (newGroupName == null) {\r\n      return;\r\n    }\r\n    if (newGroupName === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n\r\n    // 加入到新的群組\r\n    if (newGroupName !== groupName) {\r\n      // 修改該元素的群組屬性\r\n      const newList: FavoredItem[] = getEditedList({\r\n        ...props,\r\n        isChanged: true, //添加變更紀錄\r\n        group: newGroupName,\r\n      });\r\n\r\n      const newGroup: string[] = [\r\n        newGroupName,\r\n        ...group.filter((g: string) => g !== newGroupName),\r\n      ];\r\n      dispatch(setFavoredList({ group: newGroup, list: newList }));\r\n    }\r\n  };\r\n\r\n  const handleItemEdit = () => {\r\n    var newOwner = window.prompt(\"輸入新的頻道名稱 ? \", owner);\r\n    if (newOwner == null) {\r\n      return;\r\n    }\r\n    if (newOwner === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n    const newList = getEditedList({\r\n      ...props,\r\n      isChanged: true, //添加變更紀錄\r\n      owner: newOwner,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  const handleItemDelete = () => {\r\n    var ok = window.confirm(`確定要停止追隨 ${owner} 嗎 ?`);\r\n    if (ok) {\r\n      const newList = getDeletedList({\r\n        ...props,\r\n        isDeleted: true, //添加變更紀錄\r\n        group: groupName,\r\n      });\r\n      dispatch(setFavoredList({ list: newList, group: null }));\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    const newList = getDeletedList({\r\n      ...props,\r\n      isDeleted: false, //添加變更紀錄\r\n      group: groupName,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Avatar>\r\n        <img src={avatar} alt={`${cname}'s avatar`} />\r\n      </Avatar>\r\n      <OwnerText isDeleted={isDeleted} isNewAdded={isNewAdded}>\r\n        <label htmlFor={Cid}>{owner}</label>\r\n      </OwnerText>\r\n      <ButtonGroup>\r\n        <Button onClick={handleGroupEdit}>\r\n          <ai.AiOutlineGroup />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        <Button onClick={handleItemEdit}>\r\n          <ai.AiOutlineEdit />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        {isDeleted ? (\r\n          <Button onClick={cancelDelete}>\r\n            <ai.AiOutlineRedo />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        ) : (\r\n          <Button onClick={handleItemDelete}>\r\n            <ai.AiTwotoneDelete />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        )}\r\n      </ButtonGroup>\r\n    </Container>\r\n  );\r\n}\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #c5c3c6;\r\n  padding: 16px;\r\n  margin: 6px auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  margin-right: 15px;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  pointer-events: none;\r\n\r\n  img {\r\n    min-width: 50px;\r\n    max-width: 100px;\r\n    background-color: #999;\r\n    border-radius: 15px;\r\n    width: 4rem;\r\n    height: 4rem;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst OwnerText = styled.div<{ isDeleted: boolean; isNewAdded: boolean }>`\r\n  width: 100%;\r\n  padding: 0 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: ${(p) => (p.isNewAdded ? `#f00` : p.isDeleted ? `#888` : `#fff`)};\r\n  label {\r\n    text-decoration: ${(p) => (p.isDeleted ? `line-through` : `none`)};\r\n    font-size: 18px;\r\n  }\r\n`;\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Button = styled.div`\r\n  margin-left: 12px;\r\n  padding: 5px 5px;\r\n  cursor: pointer;\r\n  font-size: 25px;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  p {\r\n    display: none;\r\n  }\r\n  :hover {\r\n    color: var(--btnHoverColor);\r\n    background-color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { VISITS_DEFAULT_GROUPNAME } from \"../../app/config\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { FavoredCard } from \"./FavoredCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n// import { selectFavoredList, setFavoredList } from \"./slice\";\r\n// import { useDispatch, useSelector } from \"../../app/hooks\";\r\n\r\nexport function FavoredCardsGroup(props: {\r\n  items: FavoredItem[];\r\n  groupName: string;\r\n}) {\r\n  const groupName = props.groupName || VISITS_DEFAULT_GROUPNAME;\r\n  // const favoredlist = useSelector(selectFavoredList);\r\n  // const dispatch = useDispatch();\r\n\r\n  // const onDragEnd = (e: any) => {\r\n  //   const src = e.source.index;\r\n  //   const dest = e.destination.index;\r\n  //   if (src === undefined || dest === undefined || src === dest) {\r\n  //     return;\r\n  //   }\r\n  //   console.log(`onDragEnd: src: ${src}, dest: ${dest}`);\r\n  //   const newList = [...favoredlist];\r\n  //   // 從src位置刪除1個元素，並返回該刪除元素形成的陣列\r\n  //   const [deleted] = newList.splice(src, 1);\r\n  //   // 再將被移出的元素，從新放置到該陣列裡面。\r\n  //   newList.splice(dest, 0, { ...deleted, isChanged: true }); // 表示在dest後，(0)不刪除任何元素，把deleted隨後添加進去。\r\n  //   dispatch(setFavoredList({ list: newList, group: null }));\r\n  // };\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"30px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#4c4a46\"}\r\n      />\r\n      <Content>\r\n        {props.items.map((item: FavoredItem) => (\r\n          <li key={\"FavoredCard_\" + item.cid}>\r\n            <FavoredCard {...item} />\r\n          </li>\r\n        ))}\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Content = styled.ul`\r\n  max-width: 960px;\r\n  width: 99%;\r\n  margin: auto;\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem, VisitList } from \"../../app/types\";\r\nimport { selectUser } from \"../user/slice\";\r\nimport { FavoredCardsGroup } from \"./FavoredCardsGroup\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  selectFavoredCardsList,\r\n  selectGroup,\r\n  selectIsFavoredCardsListChanged,\r\n  selectTags,\r\n  selectVisitList,\r\n  setIsFavoredCardsViewerEnable,\r\n} from \"./slice\";\r\nimport { reqUpdateVisit } from \"./api\";\r\nimport { history } from \"../..\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\n/**\r\n * 收藏品，表列出已登入使用者自定義的喜好頻道列表\r\n */\r\nexport function FavoredCardsViewer() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const isLogin: boolean = username !== \"\";\r\n  const isListChanged: boolean = useSelector(selectIsFavoredCardsListChanged);\r\n  const headerTheme: HeaderThemeType = getHeaderIcon(isLogin, isListChanged);\r\n  const favoredlist: FavoredItem[][] = useSelector(selectFavoredCardsList);\r\n  const group = useSelector(selectGroup);\r\n  const visit: VisitList = useSelector(selectVisitList);\r\n  const tags: string[] = useSelector(selectTags);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onHeaderBtnClick = () => {\r\n    if (!isLogin) {\r\n      history.push({ pathname: \"/login/\" });\r\n    } else if (isListChanged) {\r\n      dispatch(reqUpdateVisit(username, ssid, visit, tags));\r\n    }\r\n    dispatch(setIsFavoredCardsViewerEnable(false));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <ViewerContainer>\r\n      <Header {...headerTheme}>\r\n        <div onClick={onHeaderBtnClick}>\r\n          {headerTheme.icon}\r\n          <p>{headerTheme.text}</p>\r\n        </div>\r\n      </Header>\r\n      <Content>\r\n        {favoredlist.map((items: FavoredItem[], i) => {\r\n          // 驗證groupname\r\n          // 根據分群顯示\r\n          const groupName = group[i];\r\n          return items.length > 0 ? (\r\n            <FavoredCardsGroup\r\n              key={\"GroupVisitItems_\" + groupName}\r\n              items={items}\r\n              groupName={groupName}\r\n            />\r\n          ) : (\r\n            <Fragment key={\"GroupVisitItems_\" + groupName} />\r\n          );\r\n        })}\r\n      </Content>\r\n    </ViewerContainer>\r\n  );\r\n}\r\n\r\nconst ViewerContainer = styled.div`\r\n  --btnTextColor: #fff;\r\n  --btnTextHoverColor: #fff;\r\n  --btnBgColor: rgba(25, 133, 161, 0.5);\r\n  --btnBgHoverColor: rgb(25, 133, 161);\r\n  --groupTextColor: rgb(25, 133, 161);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #4c4a46;\r\n\r\n  position: fixed;\r\n  top: 65px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n  background-color: var(--bkgColor);\r\n  z-index: 7;\r\n  overflow-y: auto;\r\n`;\r\n\r\ntype HeaderThemeType = {\r\n  icon: any;\r\n  text: string;\r\n};\r\nconst getHeaderIcon = (\r\n  isLogin: boolean,\r\n  isChanged: boolean\r\n): HeaderThemeType => {\r\n  // debugger\r\n  if (!isLogin) {\r\n    // login first\r\n    return {\r\n      text: \"請先登入\",\r\n      icon: <ai.AiOutlineUser />,\r\n    };\r\n  }\r\n  if (isChanged) {\r\n    // should update\r\n    return {\r\n      text: \"上傳檔案\",\r\n      icon: <ai.AiOutlineCloudUpload />,\r\n    };\r\n  } else {\r\n    // colsed\r\n    return {\r\n      text: \"直接關閉\",\r\n      icon: <ai.AiOutlineClose />,\r\n    };\r\n  }\r\n};\r\n\r\nconst Header = styled.div<HeaderThemeType>`\r\n  position: relative;\r\n  background-color: var(--navColor);\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  div {\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 10px 20px 0;\r\n    padding: 15px 0;\r\n    border-radius: 30px;\r\n    font-weight: 700px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: var(--btnTextColor);\r\n    background-color: var(--btnBgColor);\r\n    cursor: pointer;\r\n    border: 2px solid;\r\n    transition: 0.5s;\r\n\r\n    svg {\r\n      font-size: 8vmin;\r\n      padding-right: 5px;\r\n      transition: 0.2s;\r\n    }\r\n\r\n    p {\r\n      letter-spacing: 1vmin;\r\n      font-size: 6vmin;\r\n      transition: 0.2s;\r\n    }\r\n\r\n    :hover {\r\n      color: var(--btnTextHoverColor);\r\n      background-color: var(--btnBgHoverColor);\r\n\r\n      svg {\r\n        font-size: 9vmin;\r\n      }\r\n\r\n      p {\r\n        font-size: 8vmin;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { AiOutlineBook } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport NavItem  from \"../../components/NavItem\";\r\nimport {\r\n  selectNumOfFavoredCards,\r\n  setIsFavoredCardsViewerEnable,\r\n} from \"./slice\";\r\n\r\ntype Props = {\r\n  showMenu: () => void;\r\n};\r\n\r\nexport function FavoredCardsNavItem(props: Props) {\r\n  const numOfFavored = useSelector(selectNumOfFavoredCards);\r\n  const isVisible = numOfFavored > 0;\r\n  const dispatch = useDispatch();\r\n\r\n  const showMenu = () => {\r\n    // 開關Menu面板(手機模式時)\r\n    props.showMenu();\r\n    // undefined 時為切換\r\n    dispatch(setIsFavoredCardsViewerEnable());\r\n  };\r\n\r\n  return (\r\n    <Collection visible={isVisible}>\r\n      <NavItem\r\n        key={`MenuItem_收藏`}\r\n        title=\"收藏\"\r\n        path=\"\" // 不改變當前的目錄位置。\r\n        icon={<AiOutlineBook />}\r\n        showMenu={showMenu}\r\n      />\r\n      <h1>\r\n        <span>{numOfFavored}</span>\r\n      </h1>\r\n    </Collection>\r\n  );\r\n}\r\n\r\nconst Collection = styled.div<{ visible: boolean }>`\r\n  --display: ${(props) => [props.visible ? `block` : `none`]};\r\n\r\n  display: flex;\r\n  h1 {\r\n    text-align: center;\r\n    line-height: 18px;\r\n    display: var(--display);\r\n    position: absolute;\r\n    color: #fff;\r\n    z-index: 2;\r\n    top: 22px;\r\n    right: 95px;\r\n    font-size: 12px;\r\n  }\r\n  span {\r\n    display: var(--display);\r\n    content: \"\";\r\n    transform: translate(-50%, -50%);\r\n    top: -1px;\r\n    left: 0px;\r\n    width: 16px;\r\n    height: 16px;\r\n    position: absolute;\r\n    color: white;\r\n    background-color: red;\r\n    border-radius: 50%;\r\n    z-index: -1;\r\n  }\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    h1 {\r\n      line-height: 18px;\r\n      top: 19px;\r\n      right: 24px;\r\n      font-size: 14px;\r\n    }\r\n    span {\r\n      top: 0px;\r\n      left: 0px;\r\n      width: 18px;\r\n      height: 18px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    div {\r\n      width: 80%;\r\n      p {\r\n        margin: 0px;\r\n      }\r\n    }\r\n    h1 {\r\n      line-height: 16px;\r\n      top: 327px;\r\n      left: 102px;\r\n      font-size: 12px;\r\n    }\r\n    span {\r\n      top: 0px;\r\n      left: 0px;\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n  }\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { NavItemProps } from \"../../app/types\";\r\nimport NavItem from \"../NavItem\";\r\nimport { FavoredCardsNavItem } from \"../../features/channelCardStore\";\r\n\r\ntype NavbarProps = {\r\n  items: NavItemProps[];\r\n  onClick: () => void;\r\n};\r\n\r\nexport default function Navbar(props: NavbarProps) {\r\n  const [isEnable, setIsEnable] = useState(false);\r\n\r\n  const showMenu = () => {\r\n    setIsEnable(!isEnable);\r\n    props.onClick()\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Nav>\r\n        <Logo>\r\n          <p>LowkeyDD</p>\r\n        </Logo>\r\n        <Menu isEnable={isEnable}>\r\n          <ToogleNavBkg onClick={showMenu}>\r\n            <div>\r\n              <ai.AiOutlineMenu />\r\n            </div>\r\n          </ToogleNavBkg>\r\n          <ul>\r\n            <ToogleNavBkg onClick={showMenu}>\r\n              <div>\r\n                <ai.AiOutlineClose />\r\n              </div>\r\n            </ToogleNavBkg>\r\n\r\n            {props.items.map((item) => (\r\n              <NavItem\r\n                key={`MenuItem_${item.title}`}\r\n                {...item}\r\n                showMenu={showMenu}\r\n              />\r\n            ))}\r\n\r\n            {/* 額外的 FavoredCardsNav */}\r\n            <FavoredCardsNavItem showMenu={showMenu} />\r\n          </ul>\r\n        </Menu>\r\n      </Nav>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: fixed; //這樣才能讓NAV固定在畫面上\r\n  width: 100%;\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --logoColor: #fff;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  position: relative;\r\n  background-color: var(--navColor);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  padding: 0 1rem;\r\n  background: none;\r\n  width: 150px; // 由內部logo字體決定寬度\r\n  height: 65px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  z-index: 1;\r\n  p {\r\n    color: var(--logoColor);\r\n    font-size: 25px;\r\n    letter-spacing: 2px;\r\n  }\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.ul<{ isEnable: boolean }>`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  width: 100%; //剩下的部分\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  ul {\r\n    position: relative;\r\n    /* background-color: #0051ff; */\r\n    width: 100%; //剩下的部分\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    ul {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      background-color: var(--menuBgColor);\r\n      width: 380px;\r\n      height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n      padding: 65px 0 0 0;\r\n      transform: ${(props) =>\r\n        props.isEnable ? `translateX(0%)` : `translateX(-100%)`};\r\n      transition: transform 0.2s ease-in;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToogleNavBkg = styled.div`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  color: var(--toogleColor);\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%; //用它來當作NAV的底層\r\n  height: 65px;\r\n  font-size: 40px;\r\n  div {\r\n    display: none;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    div {\r\n      width: 65px;\r\n      height: 65px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n    div:hover {\r\n      background-color: var(--toogleColor);\r\n      color: var(--logoColor);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"../../app/hooks\";\r\nimport { selectUser } from \"../../features/user/slice\";\r\nimport { Fragment, useLayoutEffect } from \"react\";\r\nimport {\r\n  selectCurrent,\r\n  selectFavoredList,\r\n  selectIsFavoredCardsListChanged,\r\n  selectIsFavoredCardsViewerEnable,\r\n  selectTags,\r\n} from \"../../features/channelCardStore/slice\";\r\nimport {\r\n  reqFetchChannels,\r\n  reqEditVisit,\r\n} from \"../../features/channelCardStore\";\r\nimport {\r\n  ChannelCardsGroup,\r\n  ChannelSearch,\r\n  ChannelTagsSwitchers,\r\n  ChannelCardsBrowser,\r\n} from \"../../features/channelCardStore\";\r\n\r\nexport default function ChannelsStage() {\r\n  const isEnable = useSelector(selectIsFavoredCardsViewerEnable);\r\n  const user = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const isListChanged = useSelector(selectIsFavoredCardsListChanged);\r\n  const favoredList = useSelector(selectFavoredList);\r\n  const dispatch = useDispatch();\r\n\r\n  useLayoutEffect(() => {\r\n    if (isListChanged) {\r\n      // 檢查收藏表單是否已經被改變，如果已有異動，先發送請求獲取新的收藏表單。\r\n      const { username, ssid } = user;\r\n      dispatch(reqEditVisit(username, ssid, favoredList, tags));\r\n    } else {\r\n      // 獲取當前資料庫中的頻道資訊。\r\n      const { username, ssid } = user;\r\n      dispatch(reqFetchChannels(username, ssid, tags));\r\n    }\r\n    return () => {};\r\n  }, [dispatch, user, tags]);\r\n\r\n  return (\r\n    <Container isStopScroll={isEnable}>\r\n      <ControlPanel>\r\n        <ChannelSearch />\r\n        <ChannelTagsSwitchers />\r\n      </ControlPanel>\r\n      <ChannelSearchCard />\r\n      <ChannelCardsBrowser />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction ChannelSearchCard() {\r\n  const current = useSelector(selectCurrent);\r\n\r\n  return (\r\n    <>\r\n      {current !== null ? (\r\n        current.status === \"failure\" ? (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        ) : (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        )\r\n      ) : (\r\n        <Fragment />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div<{ isStopScroll: boolean }>`\r\n  position: absolute;\r\n  top: 65px;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: ${(p) => (p.isStopScroll ? `hidden` : `auto`)};\r\n`;\r\n\r\nconst ControlPanel = styled.div`\r\n  position: relative;\r\n  background-color: #666;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: start;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\n","import axios from \"axios\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { FavoredItem, VisitItem, VisitList } from \"../../../app/types\";\r\nimport { createVisitItem } from \"../share\";\r\nimport { setFavoredList } from \"../slice\";\r\nimport { reqUpdateVisit } from \"./reqUpdateVisit\";\r\n\r\nexport const reqEditVisit =\r\n  (username: string, ssid: string, already: FavoredItem[], tags: string[]) =>\r\n  (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    axios.post(`${API_SERVER_URL}/visit/edit`, postform).then(\r\n      (resp) => {\r\n        console.log(\"開啟VisitList成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const visit: VisitList = resp.data[\"visit\"];\r\n\r\n        // 尚未登入時已有添加喜歡的對象到表單，登入後自動獲取該表單與回應收到的結果進行合併。\r\n\r\n        // 即使success，也可能新的使用者初始清單為空。\r\n        if (code === \"success\" && visit.list) {\r\n          // 安全地添加 \"Favorite\" 分群\r\n          const group = visit.group.includes(VISITS_DEFAULT_GROUPNAME)\r\n            ? visit.group\r\n            : [VISITS_DEFAULT_GROUPNAME, ...visit.group];\r\n\r\n          // 被添加到最愛的頻道都會被標記為 isNewAdded = true，蒐集後並轉換型態成VisitItem[]\r\n          const newAdded: VisitItem[] = already.reduce(\r\n            (result: VisitItem[], cur: FavoredItem) =>\r\n              cur.isNewAdded && !cur.isDeleted\r\n                ? result.concat(createVisitItem(cur))\r\n                : result,\r\n            []\r\n          );\r\n\r\n          // 取出\"新的且沒被刪除的\"被添加到最愛的頻道，並與回應收到的表單頻道比對後去除重複的。\r\n          const mp = new Map<string, boolean>();\r\n          const newlist: VisitItem[] = newAdded\r\n            .concat(visit.list)\r\n            .reduce((result: VisitItem[], cur: VisitItem) => {\r\n              if (!mp.has(cur.cid)) {\r\n                mp.set(cur.cid, true);\r\n                return result.concat(cur);\r\n              } else {\r\n                return result;\r\n              }\r\n            }, []);\r\n          setTimeout(() =>\r\n            (function (group: string[], list: VisitItem[]) {\r\n              dispatch(reqUpdateVisit(username, ssid, { group, list }, tags));\r\n            })(group, newlist)\r\n          );\r\n        } else {\r\n          dispatch(\r\n            setFavoredList({\r\n              list: already,\r\n              group: [VISITS_DEFAULT_GROUPNAME, CHANNELS_DEFAULT_GROUPNAME],\r\n            })\r\n          );\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"開啟VisitList 失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChatboxIframe } from \"../../../app/types\";\r\n\r\nexport function TheaterChatbox(props: ChatboxIframe) {\r\n  const chatbox = props;\r\n  const { w, h } = props;\r\n  return (\r\n    <>\r\n      {chatbox.isEnable ? (\r\n        <ChatboxContainer width={w} height={h}>{getChatboxIframe(chatbox)}</ChatboxContainer>\r\n      ) : (\r\n        <Fragment/>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst getChatboxIframe = (chatbox: ChatboxIframe): any => {\r\n  const { method, cid, src, cname } = chatbox;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          allowFullScreen={false}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\nconst ChatboxContainer = styled.div<{ width: number; height: number }>`\r\n  background-color: #000;\r\n  width: ${(p) => p.width};\r\n  height: ${(p) => p.height};\r\n  iframe {\r\n    width: ${(p) => p.width};\r\n    height: ${(p) => p.height};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { useState } from \"react\";\r\nimport { ChatboxIframe, PlayerIframe } from \"../../../app/types\";\r\nimport { removeIframeByCid } from \"../slice\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterChatbox } from '../TheaterChatbox';\r\n\r\ntype Props = {\r\n  flexType: string;\r\n  player: PlayerIframe;\r\n  chatbox: ChatboxIframe;\r\n};\r\n\r\nexport function TheaterPlayerItem(props: Props) {\r\n  const { flexType, player, chatbox } = props;\r\n  const { cid, w: pw, h: ph } = player;\r\n  const { w: cw, h: ch } = chatbox;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const showMenu = () => {\r\n    setIsEnable(!isEnable);\r\n  };\r\n  const onLeaveMenu = () => {\r\n    setIsEnable(false);\r\n  };\r\n  const onEnterMenu = () => {\r\n    setIsEnable(true);\r\n  };\r\n  const removeIframe = () => {\r\n    dispatch(removeIframeByCid({ cid }));\r\n  };\r\n\r\n  return (\r\n    <IframeGridLocator\r\n      flexType={flexType}\r\n      playerWidth={pw}\r\n      playerHeight={ph}\r\n      chatboxWidth={cw}\r\n      chatboxHeight={ch}\r\n    >\r\n      <IframeContainer>\r\n        <Menu\r\n          onClick={showMenu}\r\n          onMouseEnter={onEnterMenu}\r\n          onMouseLeave={onLeaveMenu}\r\n          isEnable={isEnable}\r\n        >\r\n          <div onClick={removeIframe}>\r\n            <ai.AiOutlineCloseCircle />\r\n          </div>\r\n        </Menu>\r\n        {getPlayerIframe(player)}\r\n      </IframeContainer>\r\n        <TheaterChatbox {...chatbox}/>\r\n    </IframeGridLocator>\r\n  );\r\n}\r\n\r\nconst getPlayerIframe = (player: PlayerIframe): any => {\r\n  const { method, cid, src, cname } = player;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-presentation\"\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-presentation\"\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\n\r\n\r\nconst IframeGridLocator = styled.div<{\r\n  flexType: string;\r\n  playerWidth: number;\r\n  playerHeight: number;\r\n  chatboxWidth: number;\r\n  chatboxHeight: number;\r\n}>`\r\n  --playerWidth: ${(p) => p.playerWidth}px;\r\n  --playerHeight: ${(p) => p.playerHeight}px;\r\n  --chatboxWidth: ${(p) => p.chatboxWidth}px;\r\n  --chatboxHeight: ${(p) => p.chatboxHeight}px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: ${(p) => p.flexType};\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #000;\r\n`;\r\n\r\nconst IframeContainer = styled.div`\r\n  width: var(--playerWidth);\r\n  height: var(--playerHeight);\r\n  position: relative;\r\n  iframe {\r\n    z-index: 1;\r\n    width: var(--playerWidth);\r\n    height: var(--playerHeight);\r\n  }\r\n`;\r\n\r\nconst Menu = styled.h1<{ isEnable: boolean }>`\r\n  top: 0;\r\n  right: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: ${(p) => (p.isEnable ? `200px` : `50px`)};\r\n  background-color: black;\r\n  opacity: ${(p) => (p.isEnable ? `0.8` : `0.02`)};\r\n  transition: 0.6s;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  div {\r\n    font-size: ${(p) => (p.isEnable ? `100px` : `0px`)};\r\n    svg {\r\n      position: relative;\r\n      top: ${(p) => (p.isEnable ? `0%` : `30%`)};\r\n      color: hotpink;\r\n      cursor: pointer;\r\n      border-radius: 50%;\r\n      opacity: ${(p) => (p.isEnable ? `.8` : `0`)};\r\n      transform: ${(p) => (p.isEnable ? `rotate(360deg)` : `none`)};\r\n      transition: 0.4s;\r\n      :hover {\r\n        color: gray;\r\n        background-color: hotpink;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport {\r\n  selectPlayPairs,\r\n  selectGridLayout,\r\n  resizeGridLayout,\r\n} from \"../slice\";\r\nimport { useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { TheaterPlayerItem } from \"../TheaterPlayerItem\";\r\n\r\nexport function TheaterIframesViewer() {\r\n  const dom = useRef<HTMLDivElement>(null);\r\n  const pairs = useSelector(selectPlayPairs);\r\n  const numOfIframes = pairs.length;\r\n  const { col, row, flexType } = useSelector(selectGridLayout);\r\n  const dispatch = useDispatch();\r\n\r\n  const resizeIframes = useCallback(() => {\r\n    if (numOfIframes === 0 || dom.current === null) {\r\n      return;\r\n    }\r\n    console.log(\"[TheaterIframesViewer] Resize All Iframes\");\r\n    const { clientWidth, clientHeight } = dom.current;\r\n    dispatch(resizeGridLayout({ clientWidth, clientHeight }));\r\n  }, [dispatch, dom, numOfIframes]);\r\n\r\n  useLayoutEffect(() => {\r\n    // 添加新的Iframe元素時，要先執行一次\r\n    resizeIframes();\r\n\r\n    // 監聽畫面更新時的resize\r\n    let handler: any = null;\r\n    const resize = () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      handler = setTimeout(resizeIframes, 500);\r\n    };\r\n    window.addEventListener(\"resize\", resize);\r\n\r\n    return () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      window.removeEventListener(\"resize\", resize);\r\n    };\r\n  }, [resizeIframes]);\r\n\r\n  // console.log(`[TheaterIframesViewer] render, numOfIframes: ${numOfIframes}`);\r\n  return (\r\n    <Container ref={dom} col={col} row={row}>\r\n      {pairs.map(({ player, chatbox }) => (\r\n        <TheaterPlayerItem\r\n        key={\"TheaterPlayerItem_\" + player.cid}\r\n          flexType={flexType}\r\n          player={player}\r\n          chatbox={chatbox}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div<{ col: number; row: number }>`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 100px;\r\n  width: 100%;\r\n  height: calc(100% - 100px);\r\n  box-sizing: border-box;\r\n  background-color: gray;\r\n  z-index: 1;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => props.col}, 1fr);\r\n  grid-template-rows: repeat(${(props) => props.row}, 1fr);\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport { appendIframeToPlaylist, removeIframeFromPlaylist } from \"../slice\";\r\n\r\ntype TheaterSliderItemProps = {\r\n  item: TheaterElement;\r\n  index: number;\r\n  isStopTrans: boolean;\r\n};\r\n\r\nexport function TheaterSliderItem(props: TheaterSliderItemProps) {\r\n  const { index, isStopTrans, item } = props;\r\n  const { preview, cname, avatar, checked } = item;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    if (item.checked) {\r\n      dispatch(removeIframeFromPlaylist({ item }));\r\n    } else {\r\n      dispatch(appendIframeToPlaylist({ item }));\r\n    }\r\n  };\r\n  // console.log(\"[TheaterSliderItem] render\")\r\n  return (\r\n    <Section index={index} isStopTrans={isStopTrans}>\r\n      <SliderPreview>\r\n        <img src={preview} alt={`${cname}_preview`} />\r\n        <p>{`${cname}`}</p>\r\n      </SliderPreview>\r\n      <Avatar\r\n        src={avatar}\r\n        alt={`${cname}_avatar`}\r\n        onClick={handleClick}\r\n        checked={checked}\r\n      />\r\n    </Section>\r\n  );\r\n}\r\nconst Section = styled.div<{ index: number; isStopTrans: boolean }>`\r\n  position: relative;\r\n  left: ${(props) => -100 * props.index}%;\r\n  min-width: 100%;\r\n  height: 100px;\r\n\r\n  background-color: var(--navColor);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  transition: ${(props) => (props.isStopTrans ? `none` : `.5s`)};\r\n`;\r\n\r\nconst SliderPreview = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  img {\r\n    width: auto;\r\n    height: auto;\r\n    filter: blur(2px);\r\n    opacity: 0.3;\r\n  }\r\n\r\n  p {\r\n    position: absolute;\r\n    top: 100px;\r\n    padding: 4px;\r\n    color: hotpink;\r\n    background-color: var(--navColor);\r\n    opacity: 0.8;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    transition: top 0.5s;\r\n    z-index: 1;\r\n\r\n    min-width: 100%;\r\n    border-radius: 70% 70% 0 0;\r\n  }\r\n\r\n  :hover {\r\n    p {\r\n      top: 78px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.img<{ checked: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 85px;\r\n  border-radius: 50%;\r\n  border: ${(props) => (props.checked ? `solid 5px hotpink` : `none`)};\r\n  cursor: pointer;\r\n  transition: width 0.2s ease-in-out;\r\n  transition: border 0.5s;\r\n  opacity: 0.9;\r\n\r\n  :hover {\r\n    width: 90px;\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport {\r\n  setSlider,\r\n  selectNumOfElements,\r\n  selectSliderElements,\r\n  selectSlider,\r\n} from \"../slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { TheaterSliderItem } from \"../TheaterSliderItem\";\r\nimport { playSliderLeft, playSliderRight } from \"../share\";\r\n\r\nexport function TheaterSlider() {\r\n  const { sliderIndex, isTakenOverAnim } = useSelector(selectSlider);\r\n  const numOfElements = useSelector(selectNumOfElements);\r\n  const sliderElements = useSelector(selectSliderElements);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderLeft = () => {\r\n    dispatch(playSliderLeft(sliderIndex, numOfElements));\r\n  };\r\n\r\n  const sliderRight = () => {\r\n    dispatch(playSliderRight(sliderIndex, numOfElements));\r\n  };\r\n\r\n  // console.log(\r\n  //   `[TheaterSlider] render, numOfElements: ${numOfElements}, sliderIndex: ${sliderIndex}`\r\n  // );\r\n  return (\r\n    <SliderWrap>\r\n      <SliderContainer>\r\n        <Control onClick={sliderLeft}>\r\n          <ai.AiOutlineLeftCircle />\r\n        </Control>\r\n        <Control onClick={sliderRight}>\r\n          <ai.AiOutlineRightCircle />\r\n        </Control>\r\n        <Content>\r\n          {sliderElements.map((e: TheaterElement, i: number) => (\r\n            <TheaterSliderItem\r\n              key={`slider_${i}_cid_${e.cid}_content`}\r\n              item={e}\r\n              index={sliderIndex}\r\n              isStopTrans={isTakenOverAnim}\r\n            />\r\n          ))}\r\n        </Content>\r\n      </SliderContainer>\r\n    </SliderWrap>\r\n  );\r\n}\r\n\r\nconst SliderWrap = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: auto;\r\n  z-index: 1;\r\n`;\r\n\r\nconst SliderContainer = styled.div`\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  background-color: var(--navColor);\r\n  box-sizing: border-box;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n\r\n  background-color: gray;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: left;\r\n  overflow: hidden;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nconst Control = styled.span`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n\r\n  font-size: 50px;\r\n  background-color: none;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 1;\r\n  border-radius: 50%;\r\n  :nth-of-type(1) {\r\n    left: 30px;\r\n    text-align: right;\r\n  }\r\n  :nth-of-type(2) {\r\n    left: calc(100% - 100px);\r\n    text-align: right;\r\n  }\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n","import { useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { TheaterSlider, TheaterIframesViewer } from \"../../features/theater\";\r\nimport { reqTheaterChannels } from \"../../features/theater\";\r\nimport {\r\n  selectPlaylist,\r\n  selectSlider,\r\n  setSliderFolded,\r\n} from \"../../features/theater/slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { selectHasFetchChannels } from \"../../features/channelCardStore/slice\";\r\nimport { history } from \"../..\";\r\n\r\ntype Props = {\r\n  setNavbarFolded: (isFolded: boolean) => void;\r\n};\r\n\r\nexport default function TheaterPage(props: Props) {\r\n  const hasfetchChannels = useSelector(selectHasFetchChannels);\r\n  const playlist = useSelector(selectPlaylist);\r\n  const { isFolded } = useSelector(selectSlider);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderFold = () => {\r\n    dispatch(setSliderFolded(!isFolded));\r\n\r\n    // 主動觸發一次resize\r\n    if (playlist.length > 0) {\r\n      console.log(\"resize on after sliderFold\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    // 進入Theater前，必須先至少取得一次完整的頻道資訊避免異常。\r\n    if (!hasfetchChannels) {\r\n      history.push({ pathname: \"/channels\" });\r\n      return;\r\n    }\r\n    // 進入頁面時，先獲取Theater清單(目前為取出所有live頻道)\r\n    dispatch(reqTheaterChannels(\"live\"));\r\n    return () => {};\r\n  }, [hasfetchChannels, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Control onClick={sliderFold}>\r\n        {isFolded ? (\r\n          <ai.AiOutlineVerticalAlignBottom />\r\n        ) : (\r\n          <ai.AiOutlineVerticalAlignTop />\r\n        )}\r\n      </Control>\r\n      <Wrap isFolded={isFolded}>\r\n        <TheaterSlider />\r\n        <TheaterIframesViewer />\r\n      </Wrap>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div<{ isFolded: boolean }>`\r\n  --topOffset: ${(props) => (props.isFolded ? `-100` : `65`)}px;\r\n\r\n  position: absolute;\r\n  left: 0;\r\n  top: var(--topOffset);\r\n\r\n  width: 100%;\r\n  height: calc(100vh - var(--topOffset));\r\n  z-index: 5;\r\n`;\r\n\r\nconst Control = styled.span`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 115px;\r\n  left: calc(100% - 35px);\r\n  text-align: right;\r\n\r\n  font-size: 45px;\r\n  background-color: #eee;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 6;\r\n  border-radius: 50%;\r\n\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { ChannelProps } from \"../../../app/types\";\r\nimport { setElements } from \"../slice\";\r\n\r\nexport const reqTheaterChannels =\r\n  (tag: string) => (dispatch: any) => {\r\n    axios.get(`${API_SERVER_URL}/channels/${tag}`).then(\r\n      (resp) => {\r\n        console.log(\"Theater請求成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const channels: ChannelProps[] = resp.data[\"channels\"];\r\n        if (code === \"success\") {\r\n          dispatch(setElements({ channels }));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"Theater請求失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { useEffect } from 'react'\r\nimport { history } from '../..';\r\nimport { useSelector } from '../../app/hooks';\r\nimport { selectUser } from '../../features/user/slice';\r\n\r\n\r\nexport default function HomePage() {\r\n    const user = useSelector(selectUser);\r\n\r\n    useEffect(() => {\r\n    const { ssid, username } = user;\r\n    console.log({ ssid });\r\n    if (ssid !== \"\" && username !== \"\") {\r\n        history.push({ pathname: \"/channels\" });\r\n    } else{\r\n        history.push({ pathname: \"/login\" });\r\n    }\r\n    return () => {};\r\n  }, [user]);\r\n\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    )\r\n}\r\n","import { IoMdRocket } from \"react-icons/io\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function RocketLoading() {\r\n  return (\r\n    <Loader>\r\n      {Array(20)\r\n        .fill(0)\r\n        .map((_, i) => {\r\n          return <Dot key={`dot_${i}`} index={i} />;\r\n        })}\r\n      <Rocket>\r\n        <IoMdRocket />\r\n      </Rocket>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nconst Loader = styled.div`\r\n\r\n  --speed: 1;\r\n  --scale: 2;\r\n  --dotColor: #fff;\r\n  --rocketColor: #fff;\r\n\r\n  position: relative;\r\n  width: calc(120px * var(--scale));\r\n  height: calc(120px * var(--scale));\r\n`;\r\n\r\ntype DotProps = {\r\n  index: number;\r\n};\r\nconst Dot = styled.div<DotProps>`\r\n  --i: ${(p) => p.index};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: rotate(calc(180deg + 18deg * var(--i)));\r\n\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(15px * var(--scale));\r\n    height: calc(15px * var(--scale));\r\n    background-color: var(--dotColor);\r\n    border-radius: 50%;\r\n    transform: scale(0);\r\n    animation: animate calc(2s / var(--speed)) linear infinite;\r\n    animation-delay: calc(0.1s / var(--speed) * var(--i));\r\n  }\r\n\r\n  @keyframes animate {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    10% {\r\n      transform: scale(1.2);\r\n    }\r\n    80%,\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Rocket = styled.div`\r\n  /* background-color: brown; */\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: var(--rocketColor);\r\n  font-size: calc(50px * var(--scale));\r\n  animation: rotating calc(2s / var(--speed)) linear infinite;\r\n  animation-delay: calc(-1s / var(--speed));\r\n\r\n  svg{\r\n      transform: rotate(45deg);\r\n      position: relative;\r\n      top: calc(-15px * var(--scale));\r\n      left: calc(-15px * var(--scale));\r\n  }\r\n\r\n  @keyframes rotating{\r\n    0%{\r\n        transform: rotate(10deg)\r\n    }\r\n    100%{\r\n        transform: rotate(370deg)\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\"\r\nimport RocketLoading from \"../../components/RocketLoading\"\r\n\r\nexport default function LoadingPage() {\r\n    return (\r\n        <Container>\r\n            <RocketLoading/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    top: 65px;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: grey;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: none;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #fff;\r\n\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  box-sizing: border-box;\r\n  border: 5px solid;\r\n  border-radius: 1.5em 1.5em 1.5em 1.5em;\r\n  border-color: var(--navColor);\r\n  background-color: var(--bkgColor);\r\n\r\n  max-width: 480px;\r\n  min-width: 250px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  /* background-color: red; */\r\n`;\r\n\r\nexport const MsgBox = styled.div`\r\n  position: relative;\r\n  left: 0%;\r\n  top: 0%;\r\n\r\n  padding: 20px 0;\r\n  border-radius: 20px;\r\n\r\n  border: 2px solid var(--btnHoverBgColor);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  :after {\r\n    position: absolute;\r\n    margin-top: 58px;\r\n    background-color: #fff;\r\n    /* top: 20px; */\r\n    content: \"\";\r\n    width: 25px;\r\n    height: 25px;\r\n    border-bottom: 2px solid var(--btnHoverBgColor);\r\n    border-right: 2px solid var(--btnHoverBgColor);\r\n    /* border-top: 2px solid var(--btnHoverBgColor); */\r\n    /* border-left: 2px solid var(--btnHoverBgColor); */\r\n    transform: rotate(45deg);\r\n    z-index: 1;\r\n  }\r\n\r\n  h1 {\r\n    position: relative;\r\n    display: block;\r\n    color: var(--btnHoverBgColor);\r\n    z-index: 2;\r\n\r\n    animation: animate .8s linear infinite;\r\n\r\n    @keyframes animate {\r\n      0% {\r\n        transform: translateX(-3px);\r\n      }\r\n      50% {\r\n        transform: translateX(3px);\r\n      }\r\n      100% {\r\n        transform: translateX(-3px);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  padding: 20px 0 0 0;\r\n  h1 {\r\n    letter-spacing: 5px;\r\n    text-align: center;\r\n    padding: 0 0 20px 0;\r\n    border-bottom: 1px solid silver;\r\n    font-size: 28px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px 40px 0 40px;\r\n  background-color: none;\r\n  div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    input {\r\n      width: 100%;\r\n      padding: 0 5px;\r\n      height: 40px;\r\n      font-size: 16px;\r\n      border: none;\r\n      outline: none;\r\n      color: var(--btnHoverColor);\r\n\r\n      :focus ~ label {\r\n        top: -5px;\r\n        color: var(--btnHoverColor);\r\n      }\r\n      :valid ~ label {\r\n        top: -5px;\r\n        color: var(--btnHoverColor);\r\n      }\r\n      :focus ~ span::before {\r\n        width: 100%;\r\n      }\r\n    }\r\n    label {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 5px;\r\n      color: #adadad;\r\n      transform: translateY(-50%);\r\n      font-size: 16px;\r\n      pointer-events: none;\r\n      transition: 0.3s;\r\n    }\r\n    span {\r\n      ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 40px;\r\n        left: 0;\r\n        width: 0%;\r\n        height: 2px;\r\n        background-color: var(--btnHoverColor);\r\n        transition: 0.3s;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UsernameField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #adadad;\r\n  margin: 30px 0;\r\n`;\r\nexport const PasswordField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #adadad;\r\n  margin: 30px 0;\r\n`;\r\nexport const MainButton = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  border-radius: 25px;\r\n  font-size: 18px;\r\n  font-weight: 700px;\r\n  color: #fff;\r\n  background-color: var(--btnHoverColor);\r\n  letter-spacing: 2px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: 2px solid;\r\n  p {\r\n    /* background-color: red; */\r\n    width: 100%;\r\n    text-align: center;\r\n    pointer-events: none;\r\n  }\r\n  :hover {\r\n    border-color: var(--btnHoverColor);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nexport const SwitchField = styled.div`\r\n  position: relative;\r\n  margin: 30px 0;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  p {\r\n    /* background-color: red; */\r\n    text-align: center;\r\n    pointer-events: none;\r\n  }\r\n  div {\r\n    padding: 0px 10px;\r\n    color: var(--btnHoverColor);\r\n    cursor: pointer;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n","import { Fragment, useLayoutEffect, useRef } from \"react\";\r\nimport { reqLogin } from \"../api\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport { history } from \"../../../index\";\r\nimport { selectUser, setMsg } from \"../slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"../styles\";\r\n\r\nexport function Login() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { username, msg } = useSelector(selectUser);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n\r\n  const routeToRegister = () => {\r\n    history.push({ pathname: \"/register\" });\r\n  };\r\n\r\n  const onLogin = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      // console.log(\"用戶名不可為空\");\r\n      dispatch(setMsg(\"用戶名不可為空\"));\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      // console.log(\"密碼不可為空\");\r\n      dispatch(setMsg(\"密碼不可為空\"));\r\n      return;\r\n    }\r\n\r\n    dispatch(reqLogin(username, password));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (usernameInput.current) {\r\n      usernameInput.current.value = username;\r\n    }\r\n    return () => {};\r\n  }, [usernameInput, username]);\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員登入</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment/>\r\n          )}\r\n          <UsernameField>\r\n            <input\r\n              type=\"text\"\r\n              // placeholder=\"請輸入用戶名?\"\r\n              ref={usernameInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input\r\n              type=\"password\"\r\n              // placeholder=\"請輸入密碼?\"\r\n              ref={passwordInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onLogin}>\r\n            <p>登 入</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>還不是會員?</p>\r\n            <div onClick={routeToRegister}>註冊</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserLoginResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserLogin } from \"../slice\";\r\n\r\nexport const reqLogin =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    // 產生登入的postform資料\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n\r\n    // 發送Post請求\r\n    axios.post(`${API_SERVER_URL}/auth/login`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userLoginRes: UserLoginResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserLogin(userLoginRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"登入成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { useLayoutEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { reqRegister } from \"../api\";\r\nimport { history } from \"../../../index\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport { selectUser } from \"../slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"../styles\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport function Register() {\r\n  const dispatch = useDispatch();\r\n\r\n  const {username, msg} = useSelector(selectUser);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput2 = useRef<HTMLInputElement>(null);\r\n\r\n\r\n  const routeToLogin = () => {\r\n    history.push({ pathname: \"/login\" });\r\n  };\r\n\r\n  const onRegister = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n    const password2 = passwordInput2.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      console.log(\"用戶名不可為空\");\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      console.log(\"密碼不可為空\");\r\n      return;\r\n    }\r\n    if (password !== password2) {\r\n      console.log(\"輸入的密碼不一致\");\r\n      return;\r\n    }\r\n\r\n    dispatch(reqRegister(username, password));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if(usernameInput.current){\r\n      usernameInput.current.value = username;\r\n    }\r\n    return () => {};\r\n  }, [usernameInput, username])\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員註冊</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment/>\r\n          )}\r\n          <UsernameField>\r\n            <input type=\"text\" ref={usernameInput} required />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput} required />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput2} required />\r\n            <span />\r\n            <label>{\"密碼確認\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onRegister}>\r\n            <p>註 冊</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>註冊過了?</p>\r\n            <div onClick={routeToLogin}>登入</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\n// const UsernameField = styled.div`\r\n//   position: relative;\r\n//   border-bottom: 2px solid #adadad;\r\n//   margin: 30px 0;\r\n// `;\r\n// const PasswordField = styled.div`\r\n//   position: relative;\r\n//   border-bottom: 2px solid #adadad;\r\n//   margin: 30px 0;\r\n// `;\r\n// const RegisterField = styled.div`\r\n//   width: 100%;\r\n//   padding: 10px 0;\r\n//   border-radius: 25px;\r\n//   font-size: 18px;\r\n//   font-weight: 700px;\r\n//   color: #fff;\r\n//   background-color: var(--btnHoverColor);\r\n//   letter-spacing: 2px;\r\n//   cursor: pointer;\r\n//   outline: none;\r\n//   border: none;\r\n//   border: 2px solid;\r\n//   p {\r\n//     /* background-color: red; */\r\n//     width: 100%;\r\n//     text-align: center;\r\n//     pointer-events: none;\r\n//   }\r\n//   :hover {\r\n//     border-color: var(--btnHoverColor);\r\n//     transition: 0.2s;\r\n//   }\r\n// `;\r\n\r\n// const LoginField = styled.div`\r\n//   position: relative;\r\n//   margin: 30px 0;\r\n\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   p {\r\n//     /* background-color: red; */\r\n//     text-align: center;\r\n//     pointer-events: none;\r\n//   }\r\n//   div {\r\n//     padding: 0px 10px;\r\n//     color: var(--btnHoverColor);\r\n//     cursor: pointer;\r\n//     :hover {\r\n//       text-decoration: underline;\r\n//     }\r\n//   }\r\n// `;\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserRegisterResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserRegiser } from \"../slice\";\r\n\r\nexport const reqRegister =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n    axios.post(`${API_SERVER_URL}/auth/register`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userRegisterRes: UserRegisterResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserRegiser(userRegisterRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"註冊成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { useDispatch } from \"../../app/hooks\";\r\nimport { setMsg } from \"../../features/user/slice\";\r\nimport { Login, Register } from \"../../features/user\";\r\n\r\nexport default function UserPage(props: { pageName: string }) {\r\n  const pageName = props.pageName;\r\n  const dispatch = useDispatch();\r\n  dispatch(setMsg(\"\"));\r\n  return (\r\n    <>\r\n      {(function (): JSX.Element {\r\n        switch (pageName) {\r\n          case \"login\":\r\n            return <Login />;\r\n          case \"register\":\r\n            return <Register />;\r\n          default:\r\n            return <Login />;\r\n        }\r\n      })()}\r\n    </>\r\n  );\r\n}\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport ChannelsStage from \"./pages/ChannelsStage\";\r\nimport TheaterPage from \"./pages/TheaterPage\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport { NavItemsArray } from \"./app/config\";\r\nimport LoadingPage from \"./pages/LoadingPage\";\r\nimport UserPage from \"./pages/UserPage\";\r\nimport { FavoredCardsViewer } from \"./features/channelCardStore\";\r\nimport { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"./app/hooks\";\r\nimport {\r\n  selectIsFavoredCardsViewerEnable,\r\n  setIsFavoredCardsViewerEnable,\r\n} from \"./features/channelCardStore/slice\";\r\n\r\nexport default function App() {\r\n  const isFavoredCardsViewerEnable = useSelector(\r\n    selectIsFavoredCardsViewerEnable\r\n  );\r\n  const dispatch = useDispatch();\r\n  const closeFavoredCardsViewer = () => {\r\n    dispatch(setIsFavoredCardsViewerEnable(false));\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar items={NavItemsArray} onClick={closeFavoredCardsViewer} />\r\n      {isFavoredCardsViewerEnable ? <FavoredCardsViewer /> : <Fragment />}\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/channels/\" component={ChannelsStage} />\r\n        <Route path=\"/theater/\" component={TheaterPage} />\r\n        <Route path=\"/login/\" render={() => <UserPage pageName=\"login\" />} />\r\n        <Route\r\n          path=\"/register/\"\r\n          render={() => <UserPage pageName=\"register\" />}\r\n        />\r\n        <Route path=\"/loading/\" component={LoadingPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport channelCardStoreReducer from \"../features/channelCardStore/slice\";\r\nimport userReducer from \"../features/user/slice\";\r\nimport theaterReducer from \"../features/theater/slice\";\r\nimport { decodeUrlToConnectionConfig } from \"./share\";\r\n\r\nconst reducer = combineReducers({\r\n  channelCardStore: channelCardStoreReducer,\r\n  user: userReducer,\r\n  theater: theaterReducer,\r\n});\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n});\r\n\r\n// 透過Url取得連線參數。\r\ndecodeUrlToConnectionConfig();\r\n\r\n// const preloadedState = {\r\n//   channels:{\r\n//     favored:[],\r\n//     resident:[],\r\n//   },\r\n//   visit:{\r\n//     list:[],\r\n//   },\r\n//   user:{\r\n//     username: \"\",\r\n//     ssid: \"\",\r\n//   }\r\n// }\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  middleware,\r\n  // preloadedState,\r\n});\r\n\r\n// 透過其回傳值自行推斷出 Store 的形態\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\nimport { Router } from \"react-router\";\r\nimport {createHashHistory} from 'history'\r\n\r\nexport const history = createHashHistory()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}