{"version":3,"sources":["components/NavButtons/NavButton.tsx","components/NavButtons/Browser/index.tsx","app/hooks.ts","app/config.tsx","features/channelCardStore/shares/createChannelCard.tsx","features/channelCardStore/shares/createFavoredItem.tsx","features/channelCardStore/shares/createVisitItem.tsx","features/channelCardStore/reducers/setStore.tsx","features/channelCardStore/reducers/setChannelCard.tsx","features/channelCardStore/reducers/setFavoredList.tsx","features/channelCardStore/reducers/setSearchResult.tsx","features/channelCardStore/slice.tsx","components/NavButtons/Collections/index.tsx","components/NavButtons/Theater/index.tsx","features/user/shares/cookies.tsx","features/user/reducers/setMsg.tsx","features/user/shares/setSession.tsx","features/user/reducers/setUserLogin.tsx","features/user/reducers/setUserRegister.tsx","features/user/slice.tsx","components/NavButtons/User/index.tsx","features/theater/shares/createTheaterElement.tsx","features/theater/shares/createIframes.tsx","app/connections.ts","features/theater/shares/createPlayerIframe.tsx","features/theater/shares/createChatboxIframe.tsx","features/theater/shares/toggleFullScreen.js","features/theater/reducers/setElements.tsx","features/theater/reducers/setSlider.tsx","features/theater/reducers/setSliderFolded.tsx","features/theater/reducers/setFullScreen.tsx","features/theater/reducers/setFromChannel.tsx","features/theater/reducers/resizeGridLayout.tsx","features/theater/reducers/appendIframeToPlaylist.tsx","features/theater/reducers/removeIframeFromPlaylist.tsx","features/theater/reducers/switchChatBoxByCid.tsx","features/theater/reducers/removeIframeByCid.tsx","features/theater/slice.tsx","components/Navbar/index.tsx","features/channelCardStore/ChannelCard.tsx","components/GroupLine/index.tsx","features/channelCardStore/ChannelCardsGroup.tsx","features/channelCardStore/ChannelCardsBrowser.tsx","components/SearchBox/index.tsx","features/channelCardStore/api/reqFetchChannels.tsx","features/channelCardStore/api/reqUpdateVisit.tsx","features/channelCardStore/ChannelSearch.tsx","features/channelCardStore/api/reqSearchChannel.tsx","components/SwitchBtn/index.tsx","features/channelCardStore/ChannelTagsSwitchers.tsx","features/channelCardStore/FavoredCard.tsx","features/channelCardStore/FavoredCardsGroup.tsx","features/channelCardStore/FavoredCardsViewer.tsx","pages/ChannelsStage/index.tsx","features/channelCardStore/api/reqEditVisit.tsx","features/theater/TheaterChatbox/index.tsx","features/theater/TheaterPlayerItem/index.tsx","features/theater/TheaterIframesViewer/index.tsx","features/theater/TheaterSliderItem/index.tsx","features/theater/TheaterSlider/index.tsx","features/theater/api/playSlider.tsx","pages/TheaterPage/index.tsx","features/theater/api/reqTheaterChannels.tsx","pages/HomePage/index.tsx","components/RocketLoading/index.tsx","pages/LoadingPage/index.tsx","features/user/styles.tsx","features/user/LoginPage.tsx","features/user/api/reqLogin.tsx","features/user/RegisterPage.tsx","features/user/api/reqRegister.tsx","App.tsx","app/store.ts","index.tsx"],"names":["NavButton","props","title","path","icon","closeMenu","Wrap","Container","onClick","history","push","pathname","children","styled","div","NavBrowser","useSelector","hook_useSelector","useDispatch","hook_useDispatch","API_SERVER_URL","VISITS_DEFAULT_GROUPNAME","CHANNELS_DEFAULT_GROUPNAME","createChannelCard","ch","options","group","heart","createFavoredItem","card","isChanged","isNewAdded","isDeleted","cid","cname","owner","avatar","method","createVisitItem","setStore","state","action","payload","channels","list","tags","favoredList","map","v","setCluster","clusters","chgroups","i","hasFetchChannels","setChannelCard","prelist","filter","p","newItem","cards","length","setFavoredList","setSearchResult","current","f","slice","createSlice","name","initialState","reducers","actions","selectChannelCardStore","channelCardStore","selectHasFetchChannels","createSelector","store","selectTags","selectGroup","selectFavoredList","selectCurrent","selectVisitList","newfavoredList","mp","Map","newGroup","forEach","has","set","selectFavoredCardsList","result","x","index","indexOf","selectIsFavoredCardsListChanged","isListChanged","len","selectNumOfFavoredCards","count","NavCollections","numOfFavored","Counter","visible","NavTheater","getCookie","c_name","document","cookie","c_start","c_end","unescape","substring","setMsg","undefined","msg","setSession","session","username","ssid","expiration","expires","Date","now","toUTCString","setCookie","setUserLogin","setUserRegister","selectUser","user","selectIsLogin","NavUser","isLogin","Status","createTheaterElement","streamurl","preview","thumbnail","checked","getListAppendIframe","o","concat","getListRemoveIframe","ConnectionConfig","IsLocal","HostName","getPlayerSrc","src","sub","match","vedioid","getChatboxSrc","enableFullScreen","elem","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","exitFullScreen","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","setElements","elements","slider","sliderIndex","playlist","found","cidFromChannel","fromChannel","get","setSlider","next","isTakenOverAnim","setSliderFolded","window","dispatchEvent","Event","isFolded","setFullScreen","body","isFullScreen","setFromChannel","item","newPlayerIframe","ratio","w","h","convertToPlayerIframe","newChatboxIframe","isEnable","convertToChatboxIframe","status","chatlist","resizeGridLayout","clientWidth","clientHeight","gridlayout","numOfIframes","calcNewIframeSizeV2","flexType","pw","ph","cw","col","row","calcSingleIframeSize","noChatWidth","noChatHeight","newPlayerList","newChatboxList","chatbox","player","setIframeSize","cW","cH","size","maxArea","curRow","Math","ceil","gridW","gridH","curPlayW","curPlayH","curChatW","curChatH","min","area","getResult","curCol","appendIframeToPlaylist","newElements","e","newPlaylist","createPlayerIframe","newChatlist","createChatboxIframe","removeIframeFromPlaylist","switchChatBoxByCid","c","removeIframeByCid","selectTheater","theater","selectElements","selectPlayPairs","selectGridLayout","selectSlider","selectNumOfElements","selectSliderElements","Navbar","useState","setIsEnable","Nav","Logo","Menu","ToogleNavBkg","NavItemList","nav","ul","ChannelCard","viewcount","starttime","groupName","isVisible","setIsVisible","ref","useRef","avatarStyles","getAvatarStyles","heartStyles","getHeartTheme","previewStyles","getPreviewImage","dispatch","useEffect","parentDom","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","disconnect","AvatarBox","alt","FavoredHeartBtn","CardBody","PreviewBox","image","Description","Owner","ChTitle","Detail","Left","Right","fontcolor","fontbgcolor","bordercolor","ishidden","color","hoverColor","isHidden","isEnabled","a","GroupLine","h1","lineColor","bkgColor","fontsize","ChannelCardsGroup","ChannelGridCantainer","ChannelCardsBrowser","view","cs","GetChannelCardsGroup","SearchBox","theme","searchInput","commit","onSubmit","value","onChange","onKeyUp","keyCode","type","id","placeholder","style","fontSize","iconColor","focusColor","reqFetchChannels","request","FormData","append","JSON","stringify","axios","post","then","response","data","error","reqUpdateVisit","visit","postform","resp","setTimeout","err","ChannelSearch","keyword","url","code","SwitchBtn","htmlFor","HiddenCheckedInput","handleSwitchClick","tag","isChecked","ToogleFill","label","beforeColor","afterColor","ballColor","input","ChannelTagsSwitchers","includes","newtags","_tag","SwitcherList","_","SwitchBtnBox","FavoredCard","Cid","getEditedList","newList","getDeletedList","Avatar","OwnerText","ButtonGroup","Button","newGroupName","prompt","g","alert","newOwner","confirm","FavoredCardsGroup","Content","items","FavoredCardsViewer","headerTheme","getHeaderIcon","favoredlist","useLayoutEffect","ViewerContainer","Header","goBack","text","ChannelsStage","already","newAdded","reduce","cur","newlist","reqEditVisit","ControlPanel","ChannelSearchCard","TheaterChatbox","ChatboxContainer","width","height","getChatboxIframe","scrolling","allowFullScreen","seamless","frameBorder","TheaterPlayerItem","IframeGridLocator","playerWidth","playerHeight","chatboxWidth","chatboxHeight","IframeContainer","getPlayerIframe","onMouseEnter","onMouseLeave","sandbox","TheaterIframesViewer","dom","pairs","resizeIframes","useCallback","handler","resize","clearTimeout","addEventListener","removeEventListener","TheaterSliderItem","isStopTrans","Section","SliderPreview","img","TheaterSlider","numOfElements","sliderElements","SliderWrap","SliderContainer","Control","playSliderLeft","playSliderRight","span","TheaterPage","hasfetchChannels","HideNavBarBtn","FullScreenBtn","HomePage","RocketLoading","Loader","Array","fill","Dot","Rocket","LoadingPage","MsgBox","Title","UsernameField","PasswordField","MainButton","SwitchField","LoginPage","usernameInput","passwordInput","required","password","reqLogin","RegisterPage","passwordInput2","password2","reqRegister","App","exact","component","reducer","combineReducers","channelCardStoreReducer","userReducer","theaterReducer","middleware","getDefaultMiddleware","serializableCheck","location","hostname","decodeUrlToConnectionConfig","configureStore","createHashHistory","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0310a919.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { history } from \"../..\";\r\nimport { NavButtonProps } from \"../../app/types\";\r\n\r\nexport default function NavButton(props: NavButtonProps) {\r\n  const { title, path, icon, closeMenu } = props;\r\n\r\n  const onClick = () => {\r\n    if (path !== \"\") {\r\n      history.push({ pathname: `${path}` });\r\n    }\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container onClick={onClick}>\r\n        {icon}\r\n        <p>{title}</p>\r\n      </Container>\r\n      {/* 附加物 */}\r\n      {props.children}\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  :hover {\r\n    div {\r\n      // Container\r\n      background-color: var(--menuText_Hover);\r\n\r\n      p {\r\n        // NavItemTextColor\r\n        color: #fff;\r\n      }\r\n      svg {\r\n        // NavItemIconColor\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    div {\r\n      h3 {\r\n        // NavUser-Backaground\r\n        background-color: var(--menuText_Hover);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 1.5em;\r\n  cursor: pointer;\r\n  div {\r\n    width: 80%;\r\n    p {\r\n      margin: 0px;\r\n    }\r\n  }\r\n\r\n  svg {\r\n    color: var(--menuText);\r\n    margin-right: 10px;\r\n    font-size: 26px;\r\n  }\r\n  p {\r\n    color: var(--menuText);\r\n    text-decoration: none;\r\n    font-size: 23px;\r\n    letter-spacing: 5px;\r\n  }\r\n\r\n  transition: 0.3s;\r\n\r\n  // 螢幕寬度小於768px時\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    margin: 0 0;\r\n    padding: 0 0;\r\n    svg {\r\n      margin: 0px 0px;\r\n      padding: 0 16px;\r\n      font-size: 35px;\r\n    }\r\n    p {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    width: 80%;\r\n    margin: 0px 10px 0px 15px;\r\n    padding: 25px;\r\n    /* background-color: orange; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n\r\n    svg {\r\n      font-size: 28px;\r\n    }\r\n    p {\r\n      margin: 0px;\r\n      display: block;\r\n      letter-spacing: 10px;\r\n      font-size: 25px;\r\n      width: 50%;\r\n    }\r\n  }\r\n`;\r\n","import { NavButtonProps } from \"../../../app/types\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavBrowser(props: NavButtonProps) {\r\n  return <NavButton {...props} />;\r\n}\r\n","import type { RootState, AppDispatch } from \"./store\";\r\n// hooks\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as hook_useDispatch,\r\n  useSelector as hook_useSelector,\r\n} from \"react-redux\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n\r\n// 不要直接用store.getState(),useSelector會在你store發生改變時重新渲染，省掉\"訂閱\"部分\r\nexport const useSelector: TypedUseSelectorHook<RootState> = hook_useSelector;\r\n\r\n// redux會自動幫我們創建context\r\nexport const useDispatch = () => hook_useDispatch<AppDispatch>();\r\n\r\n","\r\n// export const API_SERVER_URL = \"http://192.168.50.240:8000\";\r\nexport const API_SERVER_URL = `https://lowkeydd.ddnsking.com`;\r\n\r\nexport const VISITS_DEFAULT_GROUPNAME = \"Favorite\";\r\n\r\nexport const CHANNELS_DEFAULT_GROUPNAME = \"Resident\";\r\n\r\n\r\n","import { ChannelCardProps, ChannelProps } from \"../../../app/types\";\r\n\r\nexport const createChannelCard = (\r\n    ch: ChannelProps,\r\n    options: {\r\n      group: string,\r\n      heart: boolean;\r\n    }\r\n  ): ChannelCardProps => {\r\n    const { group, heart } = options;\r\n    return {\r\n      ...ch,\r\n      group,\r\n      heart,\r\n    };\r\n  };","import {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { ChannelCardProps, FavoredItem, VisitItem } from \"../../../app/types\";\r\n\r\nexport const createFavoredItem = (\r\n  card: ChannelCardProps | VisitItem,\r\n  options: { isChanged: boolean; isNewAdded: boolean; isDeleted: boolean }\r\n): FavoredItem => {\r\n  const { isChanged, isNewAdded, isDeleted } = options;\r\n  const { cid, cname, owner, avatar, method, group } = card;\r\n  const groupName =\r\n    group === CHANNELS_DEFAULT_GROUPNAME ? VISITS_DEFAULT_GROUPNAME : group;\r\n  return {\r\n    cid,\r\n    cname,\r\n    owner,\r\n    avatar,\r\n    method,\r\n    group: groupName,\r\n    isChanged,\r\n    isNewAdded,\r\n    isDeleted,\r\n  };\r\n};\r\n","import { CHANNELS_DEFAULT_GROUPNAME, VISITS_DEFAULT_GROUPNAME } from \"../../../app/config\";\r\nimport { ChannelCardProps, FavoredItem, VisitItem } from \"../../../app/types\";\r\n\r\nexport const createVisitItem = (\r\n    card: ChannelCardProps | FavoredItem\r\n  ): VisitItem => {\r\n    const { cid, cname, owner, avatar, method, group } = card;\r\n    const groupName =\r\n      group === CHANNELS_DEFAULT_GROUPNAME ? VISITS_DEFAULT_GROUPNAME : group;\r\n    return {\r\n      cid,\r\n      cname,\r\n      owner,\r\n      avatar,\r\n      method,\r\n      group: groupName,\r\n    };\r\n  };","/**\r\n * 獲取頻道卡片跟用戶收藏者清單本是兩支api，合併成一個reqFetchChannels來一次性獲取後設置。\r\n */\r\nimport { CHANNELS_DEFAULT_GROUPNAME } from \"../../../app/config\";\r\nimport { ChannelCardStore, ChannelProps, VisitItem } from \"../../../app/types\";\r\nimport { createChannelCard, createFavoredItem } from \"../shares\";\r\n\r\nexport const setStore =(\r\n  state: ChannelCardStore,\r\n  action: {\r\n    type: string;\r\n    payload: {\r\n      channels: ChannelProps[][];\r\n      group: string[];\r\n      list: VisitItem[];\r\n      tags: string[];\r\n    };\r\n  }\r\n) => {\r\n  const { channels, group, list, tags } = action.payload;\r\n  state.group = group;\r\n  state.tags = tags[0] === \"all\" ? [\"live\", \"wait\", \"off\"] : tags;\r\n\r\n  // 設置使用者個人的收藏清單\r\n  if (list) {\r\n    state.favoredList = list.map((v: VisitItem) =>\r\n      createFavoredItem(v, {\r\n        isChanged: false,\r\n        isNewAdded: false,\r\n        isDeleted: false,\r\n      })\r\n    );\r\n  }\r\n\r\n  // cluster\r\n  setCluster(state, channels, group);\r\n};\r\n\r\nconst setCluster = (\r\n  state: ChannelCardStore,\r\n  channels: ChannelProps[][],\r\n  group: string[]\r\n) => {\r\n  const clusters = channels.map((chgroups, i) =>\r\n    chgroups !== null\r\n      ? chgroups.map((ch) =>\r\n          createChannelCard(ch, {\r\n            group: group[i],\r\n            heart: group[i] !== CHANNELS_DEFAULT_GROUPNAME,\r\n          })\r\n        )\r\n      : []\r\n  );\r\n  console.log(\"[ChannelCardStore] setCluster\");\r\n  state.clusters = clusters;\r\n  state.hasFetchChannels = true;\r\n};","/**\r\n * 改變瀏覽頁面上的頻道卡片狀態，例如將某張卡片加到最愛時。\r\n */\r\nimport { ChannelCardProps, ChannelCardStore } from \"../../../app/types\";\r\nimport { createFavoredItem } from \"../shares\";\r\n\r\nexport const setChannelCard = (\r\n  state: ChannelCardStore,\r\n  action: {\r\n    type: string;\r\n    payload: {\r\n      card: ChannelCardProps;\r\n      options: {\r\n        isChanged: boolean;\r\n        isNewAdded: boolean;\r\n        isDeleted: boolean;\r\n      };\r\n    };\r\n  }\r\n) => {\r\n  const { card, options } = action.payload;\r\n  const { isChanged, isNewAdded, isDeleted } = options;\r\n  const prelist = state.favoredList;\r\n\r\n  if (card.heart) {\r\n    state.favoredList = [\r\n      createFavoredItem(card, {\r\n        isChanged,\r\n        isNewAdded,\r\n        isDeleted,\r\n      }),\r\n      ...prelist.filter((p) => p.cid !== card.cid),\r\n    ];\r\n  } else {\r\n    if (isNewAdded) {\r\n      // 對於還不是喜愛的頻道直接移除。\r\n      state.favoredList = [...prelist.filter((p) => p.cid !== card.cid)];\r\n    } else {\r\n      // 對於已經加入喜愛的頻道視為刪除(劃線)。\r\n      const newItem = createFavoredItem(card, {\r\n        isChanged,\r\n        isNewAdded,\r\n        isDeleted: true,\r\n      });\r\n      state.favoredList = prelist.map((p) =>\r\n        p.cid !== newItem.cid ? p : newItem\r\n      );\r\n    }\r\n  }\r\n\r\n  // 產生新的卡片群集\r\n  state.clusters = state.clusters.map((cards: ChannelCardProps[]) =>\r\n    cards.length !== 0\r\n      ? cards.map((ch: ChannelCardProps) => (ch.cid !== card.cid ? ch : card))\r\n      : []\r\n  );\r\n};\r\n","/**\r\n * 設置使用者頻道收藏清單 \r\n */\r\nimport { ChannelCardStore, FavoredItem } from \"../../../app/types\";\r\n\r\nexport const setFavoredList = (\r\n  state: ChannelCardStore,\r\n  action: {\r\n    type: string;\r\n    payload: {\r\n      group: string[] | null;\r\n      list: FavoredItem[];\r\n    };\r\n  }\r\n) => {\r\n  const { group, list } = action.payload;\r\n  if (group !== null) {\r\n    state.group = group;\r\n  }\r\n  state.favoredList = list;\r\n};\r\n","/**\r\n * 透過搜尋功能，顯示頻道搜尋結果\r\n */\r\nimport { VISITS_DEFAULT_GROUPNAME } from \"../../../app/config\";\r\nimport { ChannelCardProps, ChannelCardStore } from \"../../../app/types\";\r\nimport { createFavoredItem } from \"../shares\";\r\n\r\nexport const setSearchResult = (\r\n  state: ChannelCardStore,\r\n  action: {\r\n    type: string;\r\n    payload: { current: ChannelCardProps | null };\r\n  }\r\n) => {\r\n  const { current } = action.payload;\r\n  if (current !== null) {\r\n    state.current = current;\r\n\r\n    // 將搜尋結果卡片設置為最愛時，已預設的分群名稱添加進收藏清單。\r\n    if (current.heart === true) {\r\n      const newItem = createFavoredItem(\r\n        { ...current, group: VISITS_DEFAULT_GROUPNAME },\r\n        {\r\n          isChanged: false,\r\n          isNewAdded: true,\r\n          isDeleted: false,\r\n        }\r\n      );\r\n      state.favoredList = [newItem, ...state.favoredList];\r\n    } else {\r\n      state.favoredList = state.favoredList.filter(\r\n        (f) => f.cid !== current.cid\r\n      );\r\n    }\r\n  }\r\n};\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport * as reducers from \"./reducers\";\r\nimport {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../app/config\";\r\nimport { RootState } from \"../../app/store\";\r\nimport {\r\n  ChannelCardStore,\r\n  FavoredItem,\r\n  VisitItem,\r\n  VisitList,\r\n} from \"../../app/types\";\r\nimport { createVisitItem } from \"./shares\";\r\n\r\nconst initialState: ChannelCardStore = {\r\n  hasFetchChannels: false,\r\n  clusters: [[]],\r\n  group: [],\r\n  favoredList: [],\r\n  tags: [\"live\"],\r\n  current: null,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"channelCardStore\",\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nexport const { setStore, setChannelCard, setFavoredList, setSearchResult } =\r\n  slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const selectChannelCardStore = (state: RootState) =>\r\n  state.channelCardStore;\r\n\r\nexport const selectHasFetchChannels = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.hasFetchChannels\r\n);\r\n\r\nexport const selectChannelsCluster = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.clusters\r\n);\r\n\r\nexport const selectTags = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.tags\r\n);\r\n\r\nexport const selectGroup = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.group\r\n);\r\n\r\nexport const selectFavoredList = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.favoredList\r\n);\r\n\r\nexport const selectCurrent = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.current\r\n);\r\n\r\nexport const selectVisitList = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    const newfavoredList = favoredList\r\n      // 刪除\r\n      .filter((f) => !f.isDeleted)\r\n      // 修正群主名稱 Resident => Favorite\r\n      .map((f) =>\r\n        f.group === CHANNELS_DEFAULT_GROUPNAME\r\n          ? { ...f, group: VISITS_DEFAULT_GROUPNAME }\r\n          : f\r\n      );\r\n\r\n    // 刪除多餘沒被使用到的群組名稱\r\n    const mp = new Map<string, boolean>();\r\n    const newGroup: string[] = [];\r\n    newfavoredList.forEach((f: FavoredItem) => {\r\n      if (!mp.has(f.group)) {\r\n        mp.set(f.group, true);\r\n        newGroup.push(f.group);\r\n      }\r\n    });\r\n\r\n    // 轉成VisitItem表單。\r\n    const list: VisitItem[] = newfavoredList.map((f) => createVisitItem(f));\r\n\r\n    // 輸出結果\r\n    const visit: VisitList = {\r\n      list,\r\n      group: newGroup,\r\n    };\r\n    return visit;\r\n  }\r\n);\r\n\r\nexport const selectFavoredCardsList = createSelector(\r\n  [selectGroup, selectFavoredList],\r\n  (group, favoredList) => {\r\n    if (group.length === 0) {\r\n      return [[]];\r\n    }\r\n\r\n    const result: FavoredItem[][] = group.map((x) => []);\r\n    favoredList.forEach((f: FavoredItem) => {\r\n      const index = group.indexOf(f.group);\r\n      result[index].push(f);\r\n    });\r\n\r\n    return result;\r\n  }\r\n);\r\n\r\nexport const selectIsFavoredCardsListChanged = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var isListChanged = false;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isChanged, isNewAdded, isDeleted } = favoredList[i];\r\n      if (isChanged || isNewAdded || isDeleted) {\r\n        isListChanged = true;\r\n        break;\r\n      }\r\n    }\r\n    return isListChanged;\r\n  }\r\n);\r\n\r\nexport const selectNumOfFavoredCards = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var count = 0;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isNewAdded } = favoredList[i];\r\n      if (isNewAdded) {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n);\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport { NavButtonProps } from \"../../../app/types\";\r\nimport { selectNumOfFavoredCards } from \"../../../features/channelCardStore/slice\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavCollections(props: NavButtonProps) {\r\n  const numOfFavored = useSelector(selectNumOfFavoredCards);\r\n\r\n  return (\r\n    <NavButton {...props}>\r\n      <Counter visible={numOfFavored > 0}>\r\n        <span>{numOfFavored}</span>\r\n      </Counter>\r\n    </NavButton>\r\n  );\r\n}\r\n\r\nconst Counter = styled.div<{ visible: boolean }>`\r\n  --display: ${(props) => [props.visible ? `block` : `none`]};\r\n  display: var(--display);\r\n  text-align: center;\r\n  line-height: 18px;\r\n  position: absolute;\r\n  color: #fff;\r\n  z-index: 2;\r\n  top: 22px;\r\n  right: 95px;\r\n  font-size: 12px;\r\n\r\n  span {\r\n    display: var(--display);\r\n    content: \"\";\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 18px;\r\n    height: 18px;\r\n    color: white;\r\n    background-color: red;\r\n    border-radius: 50%;\r\n    z-index: -1;\r\n  }\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    line-height: 18px;\r\n    top: 19px;\r\n    right: 24px;\r\n    font-size: 14px;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    line-height: 16px;\r\n    font-size: 12px;\r\n    top: 327px;\r\n    left: 102px;\r\n  }\r\n`;\r\n","import { NavButtonProps } from \"../../../app/types\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavTheater(props: NavButtonProps) {\r\n  return <NavButton {...props} />;\r\n}\r\n","// expiration 會乘上1000倍，所以單位是秒\r\nexport function setCookie(ssid: string, username: string, expiration: number) {\r\n  var expires = new Date(Date.now() + expiration * 1000).toUTCString();\r\n  document.cookie = `ssid=${ssid}; expires=${expires}; path=/`;\r\n  document.cookie = `username=${username}; expires=${expires}; path=/`;\r\n}\r\n\r\nexport function getCookie(c_name: string): string {\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + \"=\");\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(\";\", c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n","import { UserState } from \"../../../app/types\";\r\n\r\nexport const setMsg = (\r\n  state: UserState,\r\n  action: { type: string; payload: string | undefined }\r\n) => {\r\n  if (action.payload === undefined) {\r\n    state.msg = \"\";\r\n  } else {\r\n    state.msg = action.payload;\r\n  }\r\n};\r\n","import { UserSession, UserState } from \"../../../app/types\";\r\nimport { setCookie } from \"./cookies\";\r\n\r\nexport const setSession = (state: UserState, session: UserSession) => {\r\n    const { username, ssid, expiration } = session;\r\n    state.username = username;\r\n    state.ssid = ssid;\r\n    setCookie(ssid, username, expiration);\r\n  };","import { UserLoginResponse, UserState } from \"../../../app/types\";\r\nimport { setSession } from \"../shares/setSession\";\r\n\r\nexport const setUserLogin = (\r\n  state: UserState,\r\n  action: { type: string; payload: UserLoginResponse }\r\n) => {\r\n  const { username, ssid, expiration, msg } = action.payload;\r\n  setSession(state, { username, ssid, expiration });\r\n  state.msg = msg;\r\n};\r\n","import { UserLoginResponse, UserState } from \"../../../app/types\";\r\nimport { setSession } from \"../shares/setSession\";\r\n\r\nexport const setUserRegister = (\r\n  state: UserState,\r\n  action: { type: string; payload: UserLoginResponse }\r\n) => {\r\n  const { username, ssid, expiration, msg } = action.payload;\r\n  setSession(state, { username, ssid, expiration });\r\n  state.msg = msg;\r\n};\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { UserState } from \"../../app/types\";\r\nimport { getCookie } from \"./shares/cookies\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst initialState: UserState = {\r\n  username: getCookie(\"username\"),\r\n  ssid: getCookie(\"ssid\"),\r\n  msg: \"\",\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nexport const {setMsg, setUserLogin, setUserRegister}= slice.actions;\r\nexport default slice.reducer;\r\n\r\n\r\n\r\nexport const selectUser = (state: RootState) => state.user;\r\nexport const selectMsg = createSelector([selectUser], (user) => {\r\n  return user.msg;\r\n});\r\nexport const selectIsLogin = createSelector([selectUser], (user) => {\r\n  return user.username !== \"\" && user.username !== \"\";\r\n});\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport { NavButtonProps } from \"../../../app/types\";\r\nimport { selectIsLogin } from \"../../../features/user/slice\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavUser(props: NavButtonProps) {\r\n  const isLogin = useSelector(selectIsLogin);\r\n\r\n  return (\r\n    <NavButton {...props}>\r\n      <Status visible={isLogin}>\r\n        <h3>\r\n          <span>{}</span>\r\n        </h3>\r\n      </Status>\r\n    </NavButton>\r\n  );\r\n}\r\n\r\nconst Status = styled.div<{ visible: boolean }>`\r\n  --display: ${(props) => [props.visible ? `block` : `none`]};\r\n  display: var(--display);\r\n  text-align: center;\r\n  line-height: 18px;\r\n  position: absolute;\r\n  color: #fff;\r\n  z-index: 2;\r\n  top: 22px;\r\n  right: 95px;\r\n  font-size: 12px;\r\n\r\n  h3 {\r\n    display: var(--display);\r\n    content: \"\";\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;\r\n    top: 19px;\r\n    left: -140px;\r\n    width: 10px;\r\n    height: 10px;\r\n    color: white;\r\n    background-color: var(--navColor);\r\n    border-radius: 50%;\r\n\r\n    span {\r\n      display: var(--display);\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 2px;\r\n      left: 2px;\r\n      width: 6px;\r\n      height: 6px;\r\n      background-color: #54f542;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    transition: 0.3s;\r\n  \r\n  }\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    line-height: 18px;\r\n    top: 19px;\r\n    right: 24px;\r\n    font-size: 14px;\r\n\r\n    h3 {\r\n      top: 25px;\r\n      left: -67px;\r\n      width: 14px;\r\n      height: 14px;\r\n      span {\r\n        top: 2px;\r\n        left: 2px;\r\n        width: 10px;\r\n        height: 10px;\r\n      }\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    line-height: 16px;\r\n    font-size: 12px;\r\n    top: 28px;\r\n    left: -265px;\r\n\r\n    h3 {\r\n      top: 242px;\r\n      left: 367px;\r\n      width: 10px;\r\n      height: 10px;\r\n      background-color: var(--menuBgColor);\r\n\r\n      span {\r\n        top: 2px;\r\n        left: 2px;\r\n        width: 6px;\r\n        height: 6px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { ChannelProps, TheaterElement } from \"../../../app/types\";\r\n\r\nexport const createTheaterElement = (\r\n    ch: ChannelProps,\r\n    options: { checked: boolean }\r\n  ): TheaterElement => {\r\n    const { cid, cname, avatar, streamurl, thumbnail, method } = ch;\r\n    const { checked } = options;\r\n    return {\r\n      cid,\r\n      cname,\r\n      avatar,\r\n      streamurl,\r\n      preview: thumbnail,\r\n      method,\r\n      checked,\r\n    };\r\n  };","import { IframeProps } from \"../../../app/types\";\r\n\r\nexport const getListAppendIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  newItem: T\r\n): T[] => {\r\n  const newlist = !list\r\n    ? [newItem]\r\n    : list.filter((o) => o.cid !== newItem.cid).concat(newItem);\r\n\r\n  return newlist;\r\n};\r\n\r\nexport const getListRemoveIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  cid: string\r\n): T[] => {\r\n  const newlist = !list ? [] : list.filter((o) => o.cid !== cid);\r\n\r\n  return newlist;\r\n};\r\n","type ConnectionConfigProps = {\r\n  IsLocal: boolean;\r\n  HostName: string;\r\n};\r\n\r\nexport var ConnectionConfig: ConnectionConfigProps = {\r\n  IsLocal: false,\r\n  HostName: \"\",\r\n};\r\n\r\nexport const decodeUrlToConnectionConfig = () => {\r\n  console.log(\"decodeUrlToConnectionConfig\");\r\n\r\n  const IsLocal =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  const HostName = window.location.hostname;\r\n\r\n  ConnectionConfig = {\r\n    IsLocal,\r\n    HostName,\r\n  };\r\n};\r\n","import { ConnectionConfig } from \"../../../app/connections\";\r\nimport { ChannelProps, PlayerIframe, TheaterElement } from \"../../../app/types\";\r\n\r\nexport const convertToPlayerIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const createPlayerIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nconst getPlayerSrc = (\r\n    method: string,\r\n    streamurl: string,\r\n    cname: string\r\n  ): string => {\r\n    console.log(\"ConnectionConfig.HostName: \", ConnectionConfig.HostName);\r\n  \r\n    let src = \"\";\r\n    switch (method) {\r\n      case \"youtube\":\r\n        let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n        let vedioid = sub ? sub[1] : \"\";\r\n        src = `//www.youtube.com/embed/${vedioid}?enablejsapi=1&origin=${ConnectionConfig.HostName}&widgetid=1`;\r\n        break;\r\n      case \"twitch\":\r\n        src = `//player.twitch.tv?allowfullscreen=false&channel=${cname}&parent=${ConnectionConfig.HostName}&muted=false&autoplay=false`;\r\n        break;\r\n      default:\r\n        console.error(\"缺少對應的處理方式: \", method);\r\n        break;\r\n    }\r\n    return src;\r\n  };\r\n","import { ConnectionConfig } from \"../../../app/connections\";\r\nimport { ChannelProps, ChatboxIframe, TheaterElement } from \"../../../app/types\";\r\n\r\nexport const convertToChatboxIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nexport const createChatboxIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nconst getChatboxSrc = (\r\n    method: string,\r\n    streamurl: string,\r\n    cname: string\r\n  ): string => {\r\n    console.log(\"ConnectionConfig.HostName: \", ConnectionConfig.HostName);\r\n  \r\n    let src = \"\";\r\n    switch (method) {\r\n      case \"youtube\":\r\n        let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n        let vedioid = sub ? sub[1] : \"\";\r\n        src = `//www.youtube.com/live_chat?v=${vedioid}&is_popout=1&embed_domain=${ConnectionConfig.HostName}&dark_theme=1`;\r\n        break;\r\n      case \"twitch\":\r\n        src = `//www.twitch.tv/embed/${cname}/chat?darkpopout=&secret=safe&parent=${ConnectionConfig.HostName}`;\r\n        break;\r\n      default:\r\n        console.error(\"缺少對應的處理方式: \", method);\r\n        break;\r\n    }\r\n    return src;\r\n  };\r\n","export const getIsFullScreen = () => {\r\n  // ## The below if statement seems to work better ## if ((document.fullScreenElement && document.fullScreenElement !== null) || (document.msfullscreenElement && document.msfullscreenElement !== null) || (!document.mozFullScreen && !document.webkitIsFullScreen)) {\r\n  return (\r\n    (document.fullScreenElement !== undefined &&\r\n      document.fullScreenElement === null) ||\r\n    (document.msFullscreenElement !== undefined &&\r\n      document.msFullscreenElement === null) ||\r\n    (document.mozFullScreen !== undefined && !document.mozFullScreen) ||\r\n    (document.webkitIsFullScreen !== undefined && !document.webkitIsFullScreen)\r\n  );\r\n};\r\n\r\nexport const enableFullScreen = (elem) => {\r\n  if (elem.requestFullScreen) {\r\n    elem.requestFullScreen();\r\n  } else if (elem.mozRequestFullScreen) {\r\n    elem.mozRequestFullScreen();\r\n  } else if (elem.webkitRequestFullScreen) {\r\n    elem.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\r\n  } else if (elem.msRequestFullscreen) {\r\n    elem.msRequestFullscreen();\r\n  }\r\n};\r\n\r\nexport const exitFullScreen = () => {\r\n  if (document.cancelFullScreen) {\r\n    document.cancelFullScreen();\r\n  } else if (document.mozCancelFullScreen) {\r\n    document.mozCancelFullScreen();\r\n  } else if (document.webkitCancelFullScreen) {\r\n    document.webkitCancelFullScreen();\r\n  } else if (document.msExitFullscreen) {\r\n    document.msExitFullscreen();\r\n  }\r\n};\r\n\r\nexport const toggleFullScreen = (elem) => {\r\n  const isFullScreen = getIsFullScreen();\r\n  if (isFullScreen) {\r\n    enableFullScreen(elem);\r\n  } else {\r\n    exitFullScreen();\r\n  }\r\n};\r\n","import { ChannelProps, TheaterElement, TheaterState } from \"../../../app/types\";\r\nimport { createTheaterElement } from \"../shares\";\r\n\r\n\r\nexport const setElements = (\r\n  state: TheaterState,\r\n  action: {\r\n    type: string;\r\n    payload: { channels: ChannelProps[] };\r\n  }\r\n) => {\r\n  const { channels } = action.payload;\r\n  if (channels.length === 0) {\r\n    state.elements = [];\r\n    state.slider.sliderIndex = 0;\r\n  }\r\n  const mp = new Map<string, boolean>();\r\n  state.playlist.forEach((p) => mp.set(p.cid, true));\r\n\r\n  // 進入Theater頁面後，會先獲取當前可以\"直播\"的頻道元素。\r\n  // 進入Theater頁面方式有兩種:\r\n  //    1) 透過NAV按鈕直接進入。\r\n  //    2) 透過點擊卡片進入，這種方式會自動播放卡片上的影片。\r\n  // 此處，檢查是否為(2)的方式，即檢查fromChannel，並再檢查後清除。\r\n  var found = 0;\r\n  var cidFromChannel: string = \"\";\r\n  if (state.fromChannel.length > 0) {\r\n    cidFromChannel = state.fromChannel[0].cid;\r\n  }\r\n\r\n  // 透過playlist中的元素，對應elements進行修改\r\n  const elements: TheaterElement[] = channels.map((ch, i) => {\r\n    if (ch.cid === cidFromChannel) {\r\n      found = i;\r\n      console.log(\"由FromChannel存在，NEW_sliderIndex: \", found);\r\n    }\r\n\r\n    // 逐一獲取成 TheaterElement\r\n    if (mp.get(ch.cid)) {\r\n      return createTheaterElement(ch, { checked: true });\r\n    } else {\r\n      return createTheaterElement(ch, { checked: false });\r\n    }\r\n  });\r\n\r\n  state.fromChannel = []; //每次都清空\r\n  state.elements = elements;\r\n  state.slider.sliderIndex = found + 1;\r\n};\r\n","import { TheaterState } from \"../../../app/types\";\r\n\r\nexport const setSlider = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { next: number; isTakenOverAnim: boolean };\r\n    }\r\n  ) => {\r\n    const { next, isTakenOverAnim } = action.payload;\r\n    console.log(\r\n      `[setSlider] next:${next} , isTakenOverAnim:${isTakenOverAnim}`\r\n    );\r\n    state.slider.sliderIndex = next;\r\n    state.slider.isTakenOverAnim = isTakenOverAnim;\r\n  }","import { TheaterState } from \"../../../app/types\";\r\n\r\nexport const setSliderFolded = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: boolean;\r\n    }\r\n  ) => {\r\n    // 主動觸發一次resize\r\n    if (state.playlist.length > 0) {\r\n      console.log(\"resize on after sliderFold\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n\r\n    state.slider.isFolded = action.payload;\r\n    console.log(`slider isFolded : ${action.payload}`);\r\n  }","import { enableFullScreen, exitFullScreen } from \"../shares/toggleFullScreen\";\r\nimport { TheaterState } from \"../../../app/types\";\r\n\r\nexport const setFullScreen = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: boolean;\r\n    }\r\n  ) => {\r\n    if (action.payload) {\r\n      enableFullScreen(document.body);\r\n    } else {\r\n      exitFullScreen();\r\n    }\r\n    state.slider.isFullScreen = action.payload;\r\n    console.log(`slider isFullScreen : ${action.payload}`);\r\n  }","import { history } from \"../../..\";\r\nimport { ChannelCardProps, TheaterState } from \"../../../app/types\";\r\nimport { convertToChatboxIframe, convertToPlayerIframe } from \"../shares\";\r\n\r\n\r\nexport const setFromChannel =(\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { item: ChannelCardProps };\r\n    }\r\n  ) => {\r\n    const { item } = action.payload;\r\n    const newPlayerIframe = convertToPlayerIframe(item, {\r\n      w: 0,\r\n      h: 0,\r\n    });\r\n    const newChatboxIframe = convertToChatboxIframe(item, {\r\n      w: 0,\r\n      h: 0,\r\n      isEnable: item.status === \"live\",\r\n    });\r\n    state.fromChannel = [item];\r\n    state.playlist = [newPlayerIframe];\r\n    state.chatlist = [newChatboxIframe];\r\n    history.push({ pathname: \"/theater\" });\r\n  }","import { ChatboxIframe, PlayerIframe, TheaterState } from \"../../../app/types\";\r\n\r\nexport const resizeGridLayout = (\r\n  state: TheaterState,\r\n  action: {\r\n    type: string;\r\n    payload: {\r\n      clientWidth: number;\r\n      clientHeight: number;\r\n    };\r\n  }\r\n) => {\r\n  const { clientWidth, clientHeight } = action.payload;\r\n  const ratio = state.gridlayout.ratio;\r\n  const numOfIframes = state.playlist.length;\r\n  const { flexType, pw, ph, cw, ch, col, row } = calcNewIframeSizeV2(\r\n    clientWidth,\r\n    clientHeight,\r\n    ratio,\r\n    numOfIframes\r\n  );\r\n  const { w: noChatWidth, h: noChatHeight } = calcSingleIframeSize(\r\n    clientWidth,\r\n    clientHeight,\r\n    row,\r\n    col,\r\n    ratio\r\n  );\r\n\r\n  let newPlayerList: PlayerIframe[] = [];\r\n  let newChatboxList: ChatboxIframe[] = [];\r\n\r\n  state.chatlist.forEach((chatbox, i) => {\r\n    const player = state.playlist[i];\r\n    if (chatbox.isEnable) {\r\n      newPlayerList.push(setIframeSize(player, { w: pw, h: ph }));\r\n      newChatboxList.push(setIframeSize(chatbox, { w: cw, h: ch }));\r\n      // playerSize.push({ w: pw, h: ph });\r\n      // chatboxSize.push({ w: cw, h: ch });\r\n    } else {\r\n      newPlayerList.push(\r\n        setIframeSize(player, { w: noChatWidth, h: noChatHeight })\r\n      );\r\n      newChatboxList.push(setIframeSize(chatbox, { w: 0, h: 0 }));\r\n      // playerSize.push({ w: noChatWidth, h: noChatHeight });\r\n      // chatboxSize.push({ w: 0, h: 0 });\r\n    }\r\n  });\r\n\r\n  state.playlist = newPlayerList;\r\n  state.chatlist = newChatboxList;\r\n\r\n  state.gridlayout = {\r\n    flexType,\r\n    ratio,\r\n    clientWidth,\r\n    clientHeight,\r\n    col,\r\n    row,\r\n  };\r\n};\r\n\r\nconst MIN_CHATBOX_WIDTH = 320;\r\nconst MIN_CHATBOX_HEIGHT = 320;\r\n\r\ntype IframeSizePropsV2 = {\r\n  col: number;\r\n  row: number;\r\n  pw: number;\r\n  ph: number;\r\n  cw: number;\r\n  ch: number;\r\n  flexType: string;\r\n};\r\n\r\nconst calcNewIframeSizeV2 = (\r\n  cW: number,\r\n  cH: number,\r\n  ratio: number,\r\n  size: number\r\n): IframeSizePropsV2 => {\r\n  let result: IframeSizePropsV2 = {\r\n    col: 0,\r\n    row: 0,\r\n    cw: 0,\r\n    ch: 0,\r\n    pw: 0,\r\n    ph: 0,\r\n    flexType: \"column\",\r\n  };\r\n\r\n  let maxArea = 0;\r\n\r\n  for (let i = 1; i < size + 1; i++) {\r\n    const curRow = Math.ceil(size / i);\r\n\r\n    const gridW = cW / i;\r\n    const gridH = cH / curRow;\r\n    var curPlayW = 0;\r\n    var curPlayH = 0;\r\n    var curChatW = 0;\r\n    var curChatH = 0;\r\n\r\n    // TYPE flex-direction: column\r\n    if (gridH > MIN_CHATBOX_HEIGHT) {\r\n      curChatW = gridW;\r\n      curPlayH = Math.min(gridW * ratio, gridH - MIN_CHATBOX_HEIGHT);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n\r\n      curChatH = gridH - curPlayH;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // TYPE flex-direction: row\r\n    if (gridW > MIN_CHATBOX_WIDTH) {\r\n      curChatH = gridH;\r\n      curPlayW = Math.min(gridH * (1 / ratio), gridW - MIN_CHATBOX_WIDTH);\r\n      curPlayH = curPlayW * ratio;\r\n\r\n      curChatW = gridW - curPlayW;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"row\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[row] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // neither\r\n    if (gridH <= MIN_CHATBOX_HEIGHT && gridW <= MIN_CHATBOX_WIDTH) {\r\n      curPlayH = Math.min(gridW * ratio, gridH);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n      curChatW = 0;\r\n      curChatH = 0;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n  }\r\n\r\n  return { ...result };\r\n};\r\n\r\nconst setIframeSize = <T extends {}>(\r\n  item: T,\r\n  options: { ratio?: number; w: number; h: number }\r\n): T => {\r\n  const { ratio, w, h } = options;\r\n  return {\r\n    ...item,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nconst getResult = (\r\n  col: number,\r\n  row: number,\r\n  cw: number,\r\n  ch: number,\r\n  pw: number,\r\n  ph: number,\r\n  flexType: string\r\n): IframeSizePropsV2 => {\r\n  return {\r\n    col,\r\n    row,\r\n    cw,\r\n    ch,\r\n    pw,\r\n    ph,\r\n    flexType,\r\n  };\r\n};\r\n\r\nconst calcSingleIframeSize = (\r\n  cW: number,\r\n  cH: number,\r\n  curRow: number,\r\n  curCol: number,\r\n  ratio: number\r\n): { w: number; h: number } => {\r\n  const gridW = cW / curCol;\r\n  const gridH = gridW * ratio;\r\n  let h = Math.min(gridH, cH / curRow);\r\n  let w = h * (1 / ratio);\r\n  return { w, h };\r\n};\r\n","import { ChatboxIframe, PlayerIframe, TheaterElement, TheaterState } from \"../../../app/types\";\r\nimport { createChatboxIframe, createPlayerIframe, getListAppendIframe } from \"../shares\";\r\n\r\nexport const appendIframeToPlaylist =(\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { item: TheaterElement };\r\n    }\r\n  ) => {\r\n    const { item } = action.payload;\r\n    const newItem: TheaterElement = { ...item, checked: true };\r\n    const newElements: TheaterElement[] = state.elements.map((e) =>\r\n      e.cid === item.cid ? newItem : e\r\n    );\r\n\r\n    const newPlaylist: PlayerIframe[] = getListAppendIframe(\r\n      state.playlist,\r\n      createPlayerIframe(newItem, { w: 0, h: 0 })\r\n    );\r\n\r\n    const newChatlist: ChatboxIframe[] = getListAppendIframe(\r\n      state.chatlist,\r\n      createChatboxIframe(newItem, { w: 0, h: 0, isEnable: true })\r\n    );\r\n\r\n    state.elements = newElements;\r\n    state.playlist = newPlaylist;\r\n    state.chatlist = newChatlist;\r\n\r\n    if (state.playlist.length > 0) {\r\n      console.log(\"resize on after appendIframeToPlaylist\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n  }","import { TheaterElement, TheaterState } from \"../../../app/types\";\r\nimport { getListRemoveIframe } from \"../shares\";\r\n\r\nexport const removeIframeFromPlaylist = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { item: TheaterElement };\r\n    }\r\n  ) => {\r\n    const { item } = action.payload;\r\n    const newItem: TheaterElement = { ...item, checked: false };\r\n    const newElements: TheaterElement[] = state.elements.map((e) =>\r\n      e.cid === item.cid ? newItem : e\r\n    );\r\n    state.elements = newElements;\r\n    state.playlist = getListRemoveIframe(state.playlist, item.cid);\r\n    state.chatlist = getListRemoveIframe(state.chatlist, item.cid);\r\n\r\n    if (state.playlist.length > 0) {\r\n      console.log(\"resize on after removeIframeFromPlaylist\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n  }","import { ChatboxIframe, TheaterState } from \"../../../app/types\";\r\n\r\nexport const switchChatBoxByCid = (\r\n  state: TheaterState,\r\n  action: {\r\n    type: string;\r\n    payload: { cid: string };\r\n  }\r\n) => {\r\n  const { cid } = action.payload;\r\n\r\n  // 透過關閉元素的cid，找出對應在Slider上的元素，連同設置為關閉狀態。\r\n  state.chatlist = state.chatlist.map((c: ChatboxIframe) =>\r\n    c.cid === cid ? { ...c, isEnable: !c.isEnable } : c\r\n  );\r\n\r\n  if (state.playlist.length > 0) {\r\n    console.log(\"resize on after switchChatBoxByCid\");\r\n    window.dispatchEvent(new Event(\"resize\"));\r\n  }\r\n};\r\n","import { TheaterState } from \"../../../app/types\";\r\nimport { getListRemoveIframe } from \"../shares\";\r\n\r\nexport const removeIframeByCid = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { cid: string };\r\n    }\r\n  ) => {\r\n    const { cid } = action.payload;\r\n\r\n    // 透過關閉元素的cid，找出對應在Slider上的元素，連同設置為關閉狀態。\r\n    if (state.elements.length > 0) {\r\n      state.elements = state.elements.map((e) =>\r\n        e.cid === cid ? { ...e, checked: false } : e\r\n      );\r\n    }\r\n\r\n    state.playlist = getListRemoveIframe(state.playlist, cid);\r\n    state.chatlist = getListRemoveIframe(state.chatlist, cid);\r\n\r\n    if (state.playlist.length > 0) {\r\n      console.log(\"resize on after removeIframeByCid\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n  }","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { TheaterState } from \"../../app/types\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst initialState: TheaterState = {\r\n  fromChannel: [],\r\n  elements: [],\r\n  playlist: [],\r\n  chatlist: [],\r\n  slider: {\r\n    sliderIndex: 0,\r\n    isTakenOverAnim: false,\r\n    isFolded: false,\r\n    isFullScreen: false,\r\n  },\r\n  gridlayout: {\r\n    flexType: \"column\",\r\n    ratio: 0.5625,\r\n    clientWidth: 0,\r\n    clientHeight: 0,\r\n    col: 0,\r\n    row: 0,\r\n  },\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"theater\",\r\n  initialState,\r\n  reducers: reducers,\r\n});\r\n\r\nexport const {\r\n  setElements,\r\n  setSlider,\r\n  setSliderFolded,\r\n  setFullScreen,\r\n  setFromChannel,\r\n  resizeGridLayout,\r\n  appendIframeToPlaylist,\r\n  removeIframeFromPlaylist,\r\n  removeIframeByCid,\r\n  switchChatBoxByCid,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const selectTheater = (state: RootState): TheaterState => state.theater;\r\nexport const selectElements = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.elements\r\n);\r\nexport const selectPlaylist = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.playlist\r\n);\r\nexport const selectPlayPairs = createSelector([selectTheater], (theater) => {\r\n  const playlist = theater.playlist;\r\n  const chatlist = theater.chatlist;\r\n  const len = playlist.length;\r\n  const result = [];\r\n  for (let i = 0; i < len; i++) {\r\n    result.push({ player: playlist[i], chatbox: chatlist[i] });\r\n  }\r\n  return result;\r\n});\r\nexport const selectGridLayout = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.gridlayout\r\n);\r\nexport const selectSlider = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.slider\r\n);\r\nexport const selectNumOfElements = createSelector(\r\n  [selectElements],\r\n  (elements) => elements.length\r\n);\r\nexport const selectSliderElements = createSelector(\r\n  [selectElements],\r\n  (elements) =>\r\n    elements.length > 0\r\n      ? [elements[elements.length - 1], ...elements, elements[0]]\r\n      : []\r\n);\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { NavItemProps } from \"../../app/types\";\r\nimport { NavBrowser, NavTheater, NavUser, NavCollections } from \"../NavButtons\";\r\nimport { selectSlider } from \"../../features/theater/slice\";\r\nimport { useSelector } from \"../../app/hooks\";\r\n\r\nexport default function Navbar() {\r\n  const [isEnable, setIsEnable] = useState(false);\r\n  const { isFolded } = useSelector(selectSlider);\r\n\r\n  const closeMenu = () => {\r\n    setIsEnable(!isEnable);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Nav isFolded={isFolded}>\r\n        <Logo>\r\n          <p>LowkeyDD</p>\r\n        </Logo>\r\n        <Menu isEnable={isEnable}>\r\n          <ToogleNavBkg onClick={closeMenu}>\r\n            <div>\r\n              <ai.AiOutlineMenu />\r\n            </div>\r\n          </ToogleNavBkg>\r\n          <ul>\r\n            <ToogleNavBkg onClick={closeMenu}>\r\n              <div>\r\n                <ai.AiOutlineClose />\r\n              </div>\r\n            </ToogleNavBkg>\r\n            <NavBrowser {...NavItemList[0]} closeMenu={closeMenu} />\r\n            <NavTheater {...NavItemList[1]} closeMenu={closeMenu} />\r\n            <NavUser {...NavItemList[2]} closeMenu={closeMenu} />\r\n            <NavCollections {...NavItemList[3]} closeMenu={closeMenu} />\r\n          </ul>\r\n        </Menu>\r\n      </Nav>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst NavItemList: NavItemProps[] = [\r\n  {\r\n    title: \"瀏覽\",\r\n    path: \"/channels/\",\r\n    icon: <ai.AiOutlineHeart />,\r\n  },\r\n  {\r\n    title: \"影院\",\r\n    path: \"/theater/\",\r\n    icon: <ai.AiOutlineVideoCamera />,\r\n  },\r\n  {\r\n    title: \"會員\",\r\n    path: \"/login/\",\r\n    icon: <ai.AiOutlineUser />,\r\n  },\r\n  {\r\n    title: \"收藏\",\r\n    path: \"/visit/\",\r\n    icon: <ai.AiOutlineBook />,\r\n  },\r\n];\r\n\r\nconst Container = styled.div`\r\n  position: fixed; //這樣才能讓NAV固定在畫面上\r\n  width: 100%;\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --logoColor: #fff;\r\n  z-index: 7;\r\n`;\r\n\r\nconst Nav = styled.nav<{isFolded : boolean}>`\r\n  position: relative;\r\n  top: ${p=>p.isFolded ? `-65px`:`0px`};\r\n  background-color: var(--navColor);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  padding: 0 1rem;\r\n  background: none;\r\n  width: 150px; // 由內部logo字體決定寬度\r\n  height: 65px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  z-index: 1;\r\n  p {\r\n    color: var(--logoColor);\r\n    font-size: 25px;\r\n    letter-spacing: 2px;\r\n  }\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.ul<{ isEnable: boolean }>`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  width: 100%; //剩下的部分\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  ul {\r\n    position: relative;\r\n    /* background-color: #0051ff; */\r\n    width: 100%; //剩下的部分\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    ul {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      background-color: var(--menuBgColor);\r\n      width: 380px;\r\n      height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n      padding: 65px 0 0 0;\r\n      transform: ${(props) =>\r\n        props.isEnable ? `translateX(0%)` : `translateX(-100%)`};\r\n      transition: transform 0.2s ease-in;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToogleNavBkg = styled.div`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  color: var(--toogleColor);\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%; //用它來當作NAV的底層\r\n  height: 65px;\r\n  font-size: 40px;\r\n  div {\r\n    display: none;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    div {\r\n      width: 65px;\r\n      height: 65px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      :hover {\r\n        background-color: var(--toogleColor);\r\n        color: var(--logoColor);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport { ReactElement, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"../../app/hooks\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { setFromChannel } from \"../theater/slice\";\r\nimport styled from \"styled-components\";\r\nimport { setChannelCard, setSearchResult } from \"./slice\";\r\nimport { CHANNELS_DEFAULT_GROUPNAME } from \"../../app/config\";\r\n\r\nexport function ChannelCard(props: ChannelCardProps) {\r\n  const {\r\n    avatar,\r\n    // cname,\r\n    cid,\r\n    owner,\r\n    status,\r\n    // streamurl,\r\n    thumbnail,\r\n    title,\r\n    viewcount,\r\n    starttime,\r\n    // method,\r\n    // updatetime,\r\n    group: groupName,\r\n    heart,\r\n  } = props;\r\n  const item = props;\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const avatarStyles = getAvatarStyles(status);\r\n  const heartStyles = getHeartTheme(status, heart);\r\n  const previewStyles = getPreviewImage(cid, status, thumbnail, isVisible);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEnterTheater = () => {\r\n    // 當點選頻道進入Theater。\r\n    if (status !== \"failure\" && status !== \"error\") {\r\n      dispatch(setFromChannel({ item }));\r\n    }\r\n  };\r\n\r\n  const onFavoredHeartBtnClick = () => {\r\n    const card: ChannelCardProps = { ...props, heart: !heart };\r\n    if (groupName === \"Search Result\") {\r\n      dispatch(\r\n        setSearchResult({\r\n          current: { ...props, heart: !heart },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        setChannelCard({\r\n          card,\r\n          options: {\r\n            isChanged: false,\r\n            isNewAdded: groupName === CHANNELS_DEFAULT_GROUPNAME,\r\n            isDeleted: false,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const parentDom = ref.current;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsVisible(entry.isIntersecting);\r\n    });\r\n    if (parentDom) {\r\n      observer.observe(parentDom);\r\n    }\r\n    return () => {\r\n      if (parentDom) {\r\n        observer.unobserve(parentDom);\r\n      }\r\n      observer.disconnect();\r\n    };\r\n  }, [ref, isVisible]);\r\n\r\n  // console.log(\"owner: \", owner, \"status: \", status);\r\n\r\n  return (\r\n    <Container ref={ref}>\r\n      <AvatarBox {...avatarStyles}>\r\n        <img src={isVisible ? avatar : undefined} alt={\"avatar_\" + cid} />\r\n        <div>\r\n          <h1>{status}</h1>\r\n        </div>\r\n      </AvatarBox>\r\n      <FavoredHeartBtn onClick={onFavoredHeartBtnClick} {...heartStyles}>\r\n        {heartStyles.icon}\r\n      </FavoredHeartBtn>\r\n      <CardBody>\r\n        <PreviewBox {...previewStyles} onClick={handleEnterTheater}>\r\n          {previewStyles.image}\r\n        </PreviewBox>\r\n        <Description>\r\n          <Owner>\r\n            <h1>{owner}</h1>\r\n          </Owner>\r\n          <ChTitle>\r\n            <p>{title}</p>\r\n          </ChTitle>\r\n          <Detail>\r\n            <Left>\r\n              <ai.AiOutlineEye />\r\n              <p>{viewcount}</p>\r\n            </Left>\r\n            <Right>\r\n              <ai.AiOutlineCalendar />\r\n              <p>{status === \"live\" ? \"直播中\" : starttime}</p>\r\n            </Right>\r\n          </Detail>\r\n        </Description>\r\n      </CardBody>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --bkgColor: #fff;\r\n\r\n  /* background-color: #999; */\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\ntype AvatarStyle = {\r\n  fontcolor: string;\r\n  fontbgcolor: string;\r\n  bordercolor: string;\r\n  ishidden: boolean;\r\n};\r\n\r\nconst getAvatarStyles = (status: string): AvatarStyle => {\r\n  switch (status) {\r\n    case \"live\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#ee5253\",\r\n        bordercolor: \"#f00\",\r\n        ishidden: false,\r\n      };\r\n    case \"wait\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#34afeb\",\r\n        bordercolor: \"#6a97ad\",\r\n        ishidden: false,\r\n      };\r\n    case \"off\":\r\n      return {\r\n        fontcolor: \"#f9fae6\",\r\n        fontbgcolor: \"#616161\",\r\n        bordercolor: \"#616161\",\r\n        ishidden: false,\r\n      };\r\n    default:\r\n      return {\r\n        fontcolor: \"#f0d8e2\",\r\n        fontbgcolor: \"#cb4ede\",\r\n        bordercolor: \"#6c3075\",\r\n        ishidden: true,\r\n      };\r\n  }\r\n};\r\n\r\nconst AvatarBox = styled.div<AvatarStyle>`\r\n  display: ${(p) => (p.ishidden ? `none` : `static`)};\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: none;\r\n  pointer-events: none;\r\n  img {\r\n    width: 4.8em;\r\n    border: 5px solid ${(p) => p.fontbgcolor};\r\n    border-radius: 50%;\r\n  }\r\n  div {\r\n    position: relative;\r\n    background: none;\r\n    top: -12px;\r\n    left: 0;\r\n    width: 100%;\r\n    padding: 3px 0;\r\n    h1 {\r\n      margin: auto;\r\n      width: 48px;\r\n      padding: 1px 1px;\r\n      color: ${(p) => p.fontcolor};\r\n      background-color: ${(p) => p.fontbgcolor};\r\n      text-align: center;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n`;\r\n\r\ntype HeartThemeType = {\r\n  color: string;\r\n  hoverColor: string;\r\n  icon: any;\r\n  isHidden: boolean;\r\n};\r\nexport const getHeartTheme = (\r\n  status: string,\r\n  heart: boolean\r\n): HeartThemeType => {\r\n  switch (status) {\r\n    case \"failure\":\r\n    case \"error\":\r\n      return {\r\n        color: \"\",\r\n        hoverColor: \"\",\r\n        icon: null,\r\n        isHidden: true,\r\n      };\r\n    default:\r\n      return heart === true\r\n        ? {\r\n            color: \"#ee5253\",\r\n            hoverColor: \"#ee5253\",\r\n            icon: <ai.AiFillHeart />,\r\n            isHidden: false,\r\n          }\r\n        : {\r\n            color: \"#aaa\",\r\n            hoverColor: \"#ee5253\",\r\n            icon: <ai.AiOutlineHeart />,\r\n            isHidden: false,\r\n          };\r\n  }\r\n};\r\n\r\nconst FavoredHeartBtn = styled.div<HeartThemeType>`\r\n  display: ${(p) => (p.isHidden ? `none` : `static`)};\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  right: 0.5em;\r\n  top: 2.5em;\r\n  z-index: 1;\r\n\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: none;\r\n\r\n  svg {\r\n    font-size: 35px;\r\n    color: ${(p) => p.color};\r\n    transition: 0.1s;\r\n  }\r\n\r\n  :hover {\r\n    svg {\r\n      font-size: 38px;\r\n      color: ${(p) => p.hoverColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  background-color: var(--navColor);\r\n  border-radius: 1.2em;\r\n  margin: 10px 10px;\r\n`;\r\n\r\ntype PreviewBoxProps = {\r\n  isEnabled: boolean; // 允許點擊\r\n  image: ReactElement;\r\n};\r\nconst getPreviewImage = (\r\n  cid: string,\r\n  status: string,\r\n  thumbnail: string,\r\n  isVisible: boolean\r\n): PreviewBoxProps => {\r\n  switch (status) {\r\n    case \"failure\":\r\n      return {\r\n        isEnabled: false,\r\n        image: (\r\n          <div>\r\n            <ai.AiFillFrown />\r\n            <h1>獲取頻道訊息發生錯誤</h1>\r\n          </div>\r\n        ),\r\n      };\r\n    case \"error\":\r\n      return {\r\n        isEnabled: false,\r\n        image: (\r\n          <div>\r\n            <ai.AiFillExclamationCircle />\r\n            <h1>輸入的網址格式有誤?</h1>\r\n            <p>可參考下方的網址範例 : </p>\r\n            <p>https://www.twitch.tv/xxxx</p>\r\n            <p>https://www.youtube.com/channel/xxxx</p>\r\n          </div>\r\n        ),\r\n      };\r\n    default:\r\n      return {\r\n        isEnabled: true,\r\n        image: (\r\n          <div>\r\n            <img\r\n              src={isVisible ? thumbnail : undefined}\r\n              alt={\"thumbnail_\" + cid}\r\n            />\r\n          </div>\r\n        ),\r\n      };\r\n  }\r\n};\r\nconst PreviewBox = styled.a<PreviewBoxProps>`\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  //點擊後將跳轉到Theater\r\n  cursor: ${(p) => (p.isEnabled ? `pointer` : `auto`)};\r\n\r\n  div {\r\n    background-color: #000;\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 15rem;\r\n    // 透過hidden把超出範圍的圖片直接剪裁掉\r\n    overflow: hidden;\r\n    border-radius: 1.2em;\r\n    box-sizing: border-box;\r\n\r\n    color: var(--toogleColor);\r\n\r\n    // 頻道正確顯示時\r\n    img {\r\n      width: 99.9%;\r\n      border-radius: 6px;\r\n    }\r\n\r\n    // 錯誤提示訊息\r\n    svg {\r\n      margin: 0 0 10px 0;\r\n      font-size: 150px;\r\n    }\r\n    h1 {\r\n      font-size: 18px;\r\n      margin: 0 0 10px 0;\r\n    }\r\n    p {\r\n      font-size: 1.5vmin;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  /* background-color: royalblue; */\r\n\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 6px auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Owner = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  margin: 0 0 10px;\r\n  height: 56px;\r\n  border-bottom: 1px solid silver;\r\n\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  h1 {\r\n    font-size: 26px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n    letter-spacing: 5px;\r\n  }\r\n`;\r\n\r\nconst ChTitle = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  p {\r\n    /* background-color: royalblue; */\r\n    font-size: 16px;\r\n    line-height: 25px;\r\n    padding: 0 20px;\r\n    height: 50px;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n\r\nconst Detail = styled.div`\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  div {\r\n    height: 40px;\r\n    flex: 1;\r\n    background-color: var(--toogleColor);\r\n    padding: 5px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  margin: 0 2px 0 5px;\r\n  border-radius: 0 0 0 15px;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    letter-spacing: 1px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  margin: 0 5px 0 2px;\r\n  border-radius: 0 0 15px 0;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  groupName: string;\r\n  fontsize: string;\r\n  lineColor?: string;\r\n  bkgColor?: string;\r\n};\r\n\r\nexport default function GroupLine(props: Props) {\r\n  const { groupName } = props;\r\n  return (\r\n    <Container {...props}>\r\n      <span>{groupName}</span>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.h1<Props>`\r\n  --lineColor: ${(p) => p.lineColor || `#000`};\r\n  --bkgColor: ${(p) => p.bkgColor || `#fff`};\r\n\r\n  margin: 50px 0 20px 0;\r\n  position: relative;\r\n  text-align: center;\r\n  font-size: ${(p) => p.fontsize};\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  z-index: 1;\r\n  line-height: 50px;\r\n  ::before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  ::after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    right: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  span {\r\n    padding: 0 10px;\r\n    color: var(--lineColor);\r\n    background-color: var(--bkgColor);\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { ChannelCard } from \"./ChannelCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\n\r\nexport function ChannelCardsGroup(props: {\r\n  cards: ChannelCardProps[];\r\n  groupName: string;\r\n}) {\r\n  const { cards, groupName } = props;\r\n\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"40px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#fff\"}\r\n      />\r\n      <ChannelGridCantainer key={\"ChannelGridCantainer_\" + groupName}>\r\n        {cards.map((ch: ChannelCardProps) => (\r\n          <ChannelCard\r\n            key={`ChannelCard_${ch.cid}`}\r\n            {...ch}\r\n            group={groupName}\r\n          />\r\n        ))}\r\n      </ChannelGridCantainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ChannelGridCantainer = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #fff;\r\n\r\n\r\n  display: grid;\r\n  grid-gap: 4px;\r\n  grid-template-columns: repeat(auto-fill, minmax(310px, 1fr));\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 360px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import { useSelector } from \"../../app/hooks\";\r\nimport { selectChannelCardStore } from \"./slice\";\r\nimport { ChannelCardsGroup } from \"./ChannelCardsGroup\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { Fragment } from \"react\";\r\n\r\n/**\r\n * 瀏覽頻道，顯示當前可被瀏覽頻道內容。\r\n */\r\nexport function ChannelCardsBrowser() {\r\n  const { group, clusters } = useSelector(selectChannelCardStore);\r\n  const view = clusters.filter((cs) => cs !== null);\r\n\r\n  return (\r\n    <>\r\n      {view.map((cards, i) =>\r\n        // 透過group查找出對應的分群\r\n        GetChannelCardsGroup(cards, group[i])\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst GetChannelCardsGroup = (\r\n  cards: ChannelCardProps[],\r\n  groupName: string\r\n): JSX.Element => {\r\n  if (cards.length === 0) {\r\n    return <Fragment key={\"ChannelCardsGroup_\" + groupName} />;\r\n  } else {\r\n    return (\r\n      <ChannelCardsGroup\r\n        key={\"ChannelCardsGroup_\" + groupName}\r\n        cards={cards}\r\n        groupName={groupName}\r\n      />\r\n    );\r\n  }\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function SearchBox(props: SearchBoxProps) {\r\n  // 取得樣式設定參數\r\n  const { theme } = props;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n  const searchInput = useRef<HTMLInputElement>(null);\r\n\r\n  // 輸入查詢功能\r\n  const handleKeyUp = (e: any) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n\r\n    // 按下enter鍵，提交數據\r\n    commit();\r\n  };\r\n\r\n  const commit = () => {\r\n    if (searchInput.current != null) {\r\n      props.onSubmit(searchInput.current.value);\r\n    } else {\r\n      console.error(\"searchInput 不存在\");\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    if (searchInput.current && searchInput.current.value !== \"\") {\r\n      setIsEnable(true);\r\n    } else {\r\n      setIsEnable(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container {...theme} isEnable={isEnable}>\r\n      <input\r\n        onChange={onChange}\r\n        onKeyUp={handleKeyUp}\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n        placeholder=\"(๑•̀ㅂ•́)و✧ 輸入喜歡的頻道網址 !!! \"\r\n        ref={searchInput}\r\n      />\r\n      <button onClick={commit}>\r\n        <ai.AiOutlineSearch style={{ fontSize: \"1.5rem\" }} />\r\n      </button>\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SearchBoxProps = {\r\n  theme?: SearchBoxThemeProps;\r\n  onSubmit: (inputValue: string) => void;\r\n};\r\n\r\ntype SearchBoxThemeProps = {\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n};\r\n\r\nexport const Container = styled.div<{\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n  isEnable: boolean;\r\n}>`\r\n  --height: 2.4rem;\r\n  --width: 2.4rem;\r\n  --bgColor: #2f3640;\r\n  --iconColor: ${(props) => props.iconColor || \"#e84118\"};\r\n  --focusColor: ${(props) => props.focusColor || \"#fff\"};\r\n  background: var(--bgColor);\r\n  width: ${(p) => (p.isEnable ? `100%` : `var(--width)`)};\r\n  height: var(--height);\r\n  border-radius: var(--height);\r\n  padding: calc(var(--height) / 4);\r\n  transition: width 0.4s;\r\n\r\n  input {\r\n    border: none;\r\n    background: none;\r\n    outline: none;\r\n    float: left;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    line-height: var(--height);\r\n    border-radius: var(--height);\r\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n    padding: ${(p) => (p.isEnable ? `0 1rem` : `0px`)};\r\n    width: ${(p) => (p.isEnable ? `80%` : `0%`)};\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  button {\r\n    color: var(--iconColor);\r\n    float: right;\r\n    width: var(--width);\r\n    height: var(--height);\r\n    border-radius: 50%;\r\n    background-color: ${(p) =>\r\n    p.isEnable ? `var(--focusColor)` : `var(--bgColor)`};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    :hover{\r\n\r\n    }\r\n  }\r\n\r\n  :focus-within {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n`;\r\n\r\n// const SearchInput = styled.input`\r\n//     border: none;\r\n//     background: none;\r\n//     outline: none;\r\n//     float: left;\r\n//     color: #fff;\r\n//     font-size: 16px;\r\n//     line-height: var(--height);\r\n//     border-radius: var(--height);\r\n//     box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n//     padding: 0px;\r\n//     width: 0%;\r\n//     transition: all 0.4s;\r\n// `;\r\n\r\n// const SearchButton = styled.a`\r\n//   color: var(--iconColor);\r\n//   float: right;\r\n//   width: var(--width);\r\n//   height: var(--height);\r\n//   border-radius: 50%;\r\n//   background-color: var(--bgColor);\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n// `;\r\n","/**\r\n * 獲取頻道卡片群集(channels)、用戶收藏者清單(list)、頻道分群(group)\r\n */\r\nimport axios from \"axios\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { ChannelProps, VisitItem } from \"../../../app/types\";\r\nimport { setStore } from \"../slice\";\r\n\r\nexport const reqFetchChannels =\r\n  (username: string, ssid: string, tags: string[]) => (dispatch: any) => {\r\n    // 避免tags為空\r\n    if (tags.length === 0) {\r\n      console.error(\"tags不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    // 搜尋內容為空時會被撤回\r\n    if (tags[0] === \"\") {\r\n      console.error(\"搜尋內容不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    const request = new FormData();\r\n    request.append(\"username\", username);\r\n    request.append(\"ssid\", ssid);\r\n    request.append(\"tags\", JSON.stringify(tags));\r\n\r\n    console.log(\"getLetsddV2Channels, tags: \", [tags]);\r\n    axios.post(`${API_SERVER_URL}/letsdd/v2`, request).then(\r\n      (response) => {\r\n        console.log(\"成功了, 回應如下:\\n\", response.data);\r\n        const channels: ChannelProps[][] = response.data[\"channels\"];\r\n        const group: string[] = response.data[\"group\"];\r\n        const list: VisitItem[] = response.data[\"list\"];\r\n \r\n\r\n        // 檢驗收到的資料，如果沒有傳送AUTH或驗證失敗，會收到空的group清單。\r\n\r\n        if (group.length === 0 && channels.length === 1) {\r\n          // 使用預設的群組名稱為此頻道來命名。\r\n          dispatch(\r\n            setStore({\r\n              channels: [[], ...channels],\r\n              group: [VISITS_DEFAULT_GROUPNAME, CHANNELS_DEFAULT_GROUPNAME],\r\n              tags,\r\n              list,\r\n            })\r\n          );\r\n        } else {\r\n          // 使用收到的group清單。\r\n          dispatch(\r\n            setStore({\r\n              channels,\r\n              group: group.concat(CHANNELS_DEFAULT_GROUPNAME),\r\n              tags,\r\n              list,\r\n            })\r\n          );\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", error);\r\n      }\r\n    );\r\n  };\r\n","/**\r\n * 上傳頻道收藏清單\r\n */\r\nimport axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { VisitList } from \"../../../app/types\";\r\nimport { reqFetchChannels } from \"./reqFetchChannels\";\r\n\r\nexport const reqUpdateVisit =\r\n  (username: string, ssid: string, visit: VisitList, tags: string[]) =>\r\n  (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    postform.append(\"visit\", JSON.stringify({ ...visit }));\r\n    axios.post(`${API_SERVER_URL}/visit/update`, postform).then(\r\n      (resp) => {\r\n        console.log(\"更新VisitList, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        // const visit: VisitList = resp.data[\"visit\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          console.log(\"更新VisitList成功了, msg:\\n\", msg);\r\n          // const newList = visit.list || [];\r\n          // const newGroup = visit.group || [];\r\n        } else {\r\n          console.log(\"更新VisitList失敗了, msg:\\n\", msg);\r\n        }\r\n        setTimeout(() =>\r\n          (function (username, ssid, tags) {\r\n            dispatch(reqFetchChannels(username, ssid, tags));\r\n            history.push({ pathname: \"/channels/\" });\r\n          })(username, ssid, tags)\r\n        );\r\n      },\r\n      (err) => {\r\n        console.log(\"更新VisitList失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import SearchBox from \"../../components/SearchBox\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { reqFetchChannels } from \"./api\";\r\nimport { reqSearchChannel } from \"./api\";\r\nimport { selectUser } from \"../user/slice\";\r\n\r\nexport function ChannelSearch() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (keyword: string) => {\r\n    if (keyword === \"\") return;\r\n    if (\r\n      keyword === \"all\" ||\r\n      keyword === \"live\" ||\r\n      keyword === \"wait\" ||\r\n      keyword === \"off\" ||\r\n      keyword === \"failure\"\r\n    ) {\r\n      dispatch(reqFetchChannels(username, ssid, [keyword]));\r\n    } else {\r\n      dispatch(reqSearchChannel(keyword));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchBox\r\n      onSubmit={onSubmit}\r\n      theme={{ focusColor: \"#1985a1\", iconColor: \"#c5c3c6\" }}\r\n    />\r\n  );\r\n}\r\n","/**\r\n * 透過關鍵字搜尋頻道\r\n */\r\nimport axios from \"axios\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { ChannelProps } from \"../../../app/types\";\r\nimport { createChannelCard } from \"../shares\";\r\nimport { setSearchResult } from \"../slice\";\r\n\r\nexport const reqSearchChannel = (url: string) => (dispatch: any) => {\r\n  const postform = new FormData();\r\n  postform.append(\"url\", url);\r\n  axios.post(`${API_SERVER_URL}/channels/search`, postform).then(\r\n    (resp) => {\r\n      console.log(\"[ChanelSearch]成功了, 回應如下:\\n\", resp.data);\r\n      const code: string = resp.data[\"code\"];\r\n      const ch: ChannelProps = resp.data[\"channels\"][0];\r\n\r\n      switch (code) {\r\n        case \"success\":\r\n          console.log(`成功獲取頻道 ${ch.cname} \\n`);\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(ch, {\r\n                group: \"Search Result\",\r\n                heart: false,\r\n              }),\r\n            })\r\n          );\r\n          break;\r\n        case \"failure\":\r\n          console.log(\r\n            `獲取頻道 ${ch.cname} 失敗，請確認該頻道是否已經沒有內容或受到閱覽限制\\n`\r\n          );\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(\r\n                { ...ch, status: \"failure\" },\r\n                {\r\n                  group: \"Search Failed\",\r\n                  heart: false,\r\n                }\r\n              ),\r\n            })\r\n          );\r\n          break;\r\n        default:\r\n          console.log(\"作為搜尋頻道的連結格式有誤，請參考以下: \\n\");\r\n          console.log(\"Youtube : https://www.youtube.com/channel/xxxxxxx\\n\");\r\n          console.log(\"twitch  : https://www.twitch.tv/xxxxxx\\n\");\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(\r\n                { ...ch, status: \"error\" },\r\n                {\r\n                  group: \"Search Error\",\r\n                  heart: false,\r\n                }\r\n              ),\r\n            })\r\n          );\r\n          break;\r\n      }\r\n    },\r\n    (err) => {\r\n      console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n    }\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default function SwitchBtn(props: SwitchButtonProps) {\r\n  const { checked, htmlFor, theme } = props;\r\n\r\n  const handleClick = () => {\r\n    props.handleSwitchClick({ tag: htmlFor, isChecked: !checked });\r\n  };\r\n  \r\n  return (\r\n    <Container {...theme}>\r\n      <HiddenCheckedInput\r\n        type=\"checkbox\"\r\n        id={htmlFor || \"\"}\r\n        onClick={handleClick}\r\n      />\r\n      <ToogleFill checked={checked} />\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SwitchButtonProps = {\r\n  htmlFor: string;\r\n  checked: boolean;\r\n  theme?: SwitchButtonThemeProps;\r\n  handleSwitchClick: (action: { tag: string; isChecked: boolean }) => void;\r\n};\r\n\r\ntype SwitchButtonThemeProps = {\r\n  beforeColor?: string;\r\n  afterColor?: string;\r\n  ballColor?: string;\r\n};\r\n\r\nconst Container = styled.label<SwitchButtonThemeProps>`\r\n  --width: 32px;\r\n  --height: calc(var(--width) / 2);\r\n  --radius: calc(var(--height) / 2);\r\n  --beforeColor: ${(props) => props.beforeColor || \"#ddd\"};\r\n  --afterColor: ${(props) => props.afterColor || \"#34deeb\"};\r\n  --ballColor: ${(props) => props.ballColor || \"#fff\"};\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ToogleFill = styled.div<{ checked: boolean }>`\r\n  /* 底色 */\r\n  position: relative;\r\n  width: var(--width);\r\n  height: var(--height);\r\n  border-radius: var(--radius);\r\n  background: ${(props) =>\r\n    props.checked ? `var(--afterColor)` : `var(--beforeColor)`};\r\n  transition: background 0.2s;\r\n\r\n  /* 球球與陰影效果 */\r\n  ::after {\r\n    /* 透過after實現了相對內部移動的效果 */\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: var(--height);\r\n    width: var(--height);\r\n    background: var(--ballColor);\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\r\n    border-radius: var(--radius);\r\n    transform: ${(props) =>\r\n      props.checked ? `translateX(110%)` : `translateX(0%)`};\r\n    transition: transform 0.5s;\r\n  }\r\n`;\r\n\r\nconst HiddenCheckedInput = styled.input`\r\n  display: none;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport SwitchBtn from \"../../components/SwitchBtn\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { selectUser } from \"../user/slice\";\r\nimport { selectTags } from \"./slice\";\r\nimport { reqFetchChannels } from \"./api\";\r\nimport { Switcher } from \"../../app/types\";\r\n\r\nexport function ChannelTagsSwitchers() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const dispatch = useDispatch();\r\n  console.log({ tags });\r\n\r\n  const handleSwitchClick = (action: { tag: string; isChecked: boolean }) => {\r\n    const { tag, isChecked } = action;\r\n    if (isChecked) {\r\n      if (!tags.includes(tag)) {\r\n        dispatch(reqFetchChannels(username, ssid, [...tags, tag]));\r\n      }\r\n    } else {\r\n      const newtags = tags.filter((_tag) => _tag !== tag);\r\n      dispatch(reqFetchChannels(username, ssid, newtags));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {SwitcherList.map((tag, _) => {\r\n        const { htmlFor, afterColor } = tag;\r\n        const checked = tags.indexOf(htmlFor) > -1;\r\n        return (\r\n          <SwitchBtnBox key={\"SwitchBtnBox_\" + htmlFor}>\r\n            <p>{htmlFor}</p>\r\n            <SwitchBtn\r\n              htmlFor={htmlFor}\r\n              checked={checked}\r\n              theme={{ afterColor }}\r\n              handleSwitchClick={handleSwitchClick}\r\n            />\r\n          </SwitchBtnBox>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst SwitchBtnBox = styled.div`\r\n  margin: 0 0.5rem;\r\n  height: 2.4rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  p {\r\n    margin-right: 6px;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    color: #eee;\r\n  }\r\n`;\r\n\r\nexport const SwitcherList: Array<Switcher> = [\r\n  { checked: false, htmlFor: \"live\", afterColor: \"#f00\" },\r\n  { checked: false, htmlFor: \"wait\", afterColor: \"#0ff\" },\r\n  { checked: false, htmlFor: \"off\", afterColor: \"#856\" },\r\n];","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { setFavoredList, selectChannelCardStore } from \"./slice\";\r\n\r\nexport function FavoredCard(props: FavoredItem) {\r\n  const {\r\n    cid: Cid,\r\n    group: groupName,\r\n    owner,\r\n    cname,\r\n    avatar,\r\n    isDeleted,\r\n    isNewAdded,\r\n  } = props;\r\n  const { favoredList: list, group } = useSelector(selectChannelCardStore);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getEditedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.filter(\r\n      (item: FavoredItem) => item.cid !== newItem.cid\r\n    );\r\n    return [newItem, ...newList];\r\n  };\r\n\r\n  const getDeletedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.map((item: FavoredItem) =>\r\n      item.cid !== newItem.cid ? item : newItem\r\n    );\r\n    return [...newList];\r\n  };\r\n\r\n  const handleGroupEdit = () => {\r\n    // 取得新的狀態\r\n    const newGroupName = window.prompt(\"指定為新的群組? \", groupName);\r\n\r\n    if (newGroupName == null) {\r\n      return;\r\n    }\r\n    if (newGroupName === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n\r\n    // 加入到新的群組\r\n    if (newGroupName !== groupName) {\r\n      // 修改該元素的群組屬性\r\n      const newList: FavoredItem[] = getEditedList({\r\n        ...props,\r\n        isChanged: true, //添加變更紀錄\r\n        group: newGroupName,\r\n      });\r\n\r\n      const newGroup: string[] = [\r\n        newGroupName,\r\n        ...group.filter((g: string) => g !== newGroupName),\r\n      ];\r\n      dispatch(setFavoredList({ group: newGroup, list: newList }));\r\n    }\r\n  };\r\n\r\n  const handleItemEdit = () => {\r\n    var newOwner = window.prompt(\"輸入新的頻道名稱 ? \", owner);\r\n    if (newOwner == null) {\r\n      return;\r\n    }\r\n    if (newOwner === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n    const newList = getEditedList({\r\n      ...props,\r\n      isChanged: true, //添加變更紀錄\r\n      owner: newOwner,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  const handleItemDelete = () => {\r\n    var ok = window.confirm(`確定要停止追隨 ${owner} 嗎 ?`);\r\n    if (ok) {\r\n      const newList = getDeletedList({\r\n        ...props,\r\n        isDeleted: true, //添加變更紀錄\r\n        group: groupName,\r\n      });\r\n      dispatch(setFavoredList({ list: newList, group: null }));\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    const newList = getDeletedList({\r\n      ...props,\r\n      isDeleted: false, //添加變更紀錄\r\n      group: groupName,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Avatar>\r\n        <img src={avatar} alt={`${cname}'s avatar`} />\r\n      </Avatar>\r\n      <OwnerText isDeleted={isDeleted} isNewAdded={isNewAdded}>\r\n        <label htmlFor={Cid}>{owner}</label>\r\n      </OwnerText>\r\n      <ButtonGroup>\r\n        <Button onClick={handleGroupEdit}>\r\n          <ai.AiOutlineGroup />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        <Button onClick={handleItemEdit}>\r\n          <ai.AiOutlineEdit />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        {isDeleted ? (\r\n          <Button onClick={cancelDelete}>\r\n            <ai.AiOutlineRedo />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        ) : (\r\n          <Button onClick={handleItemDelete}>\r\n            <ai.AiTwotoneDelete />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        )}\r\n      </ButtonGroup>\r\n    </Container>\r\n  );\r\n}\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #c5c3c6;\r\n  padding: 16px;\r\n  margin: 6px auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  margin-right: 15px;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  pointer-events: none;\r\n\r\n  img {\r\n    min-width: 50px;\r\n    max-width: 100px;\r\n    background-color: #999;\r\n    border-radius: 15px;\r\n    width: 4rem;\r\n    height: 4rem;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst OwnerText = styled.div<{ isDeleted: boolean; isNewAdded: boolean }>`\r\n  width: 100%;\r\n  padding: 0 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: ${(p) => (p.isNewAdded ? `#f00` : p.isDeleted ? `#888` : `#fff`)};\r\n  label {\r\n    text-decoration: ${(p) => (p.isDeleted ? `line-through` : `none`)};\r\n    font-size: 18px;\r\n  }\r\n`;\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Button = styled.div`\r\n  margin-left: 12px;\r\n  padding: 5px 5px;\r\n  cursor: pointer;\r\n  font-size: 25px;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  p {\r\n    display: none;\r\n  }\r\n  :hover {\r\n    color: var(--btnHoverColor);\r\n    background-color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { VISITS_DEFAULT_GROUPNAME } from \"../../app/config\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { FavoredCard } from \"./FavoredCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\n\r\nexport function FavoredCardsGroup(props: {\r\n  items: FavoredItem[];\r\n  groupName: string;\r\n}) {\r\n  const groupName = props.groupName || VISITS_DEFAULT_GROUPNAME;\r\n\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"30px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#4c4a46\"}\r\n      />\r\n      <Content>\r\n        {props.items.map((item: FavoredItem) => (\r\n          <li key={\"FavoredCard_\" + item.cid}>\r\n            <FavoredCard {...item} />\r\n          </li>\r\n        ))}\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Content = styled.ul`\r\n  max-width: 960px;\r\n  width: 99%;\r\n  margin: auto;\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem, VisitList } from \"../../app/types\";\r\nimport { selectIsLogin, selectUser } from \"../user/slice\";\r\nimport { FavoredCardsGroup } from \"./FavoredCardsGroup\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  selectFavoredCardsList,\r\n  selectGroup,\r\n  selectIsFavoredCardsListChanged,\r\n  selectTags,\r\n  selectVisitList,\r\n} from \"./slice\";\r\nimport { reqUpdateVisit } from \"./api\";\r\nimport { history } from \"../..\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\n/**\r\n * 收藏品，表列出已登入使用者自定義的喜好頻道列表\r\n */\r\nexport function FavoredCardsViewer() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const isLogin: boolean = useSelector(selectIsLogin);\r\n  const isListChanged: boolean = useSelector(selectIsFavoredCardsListChanged);\r\n  const headerTheme: HeaderThemeType = getHeaderIcon(isLogin, isListChanged);\r\n  const favoredlist: FavoredItem[][] = useSelector(selectFavoredCardsList);\r\n  const group = useSelector(selectGroup);\r\n  const visit: VisitList = useSelector(selectVisitList);\r\n  const tags: string[] = useSelector(selectTags);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onHeaderBtnClick = () => {\r\n    if (!isLogin) {\r\n      // 請先登入\r\n      history.push({ pathname: \"/login/\" });\r\n    } else if (isListChanged) {\r\n      // 上傳檔案\r\n      dispatch(reqUpdateVisit(username, ssid, visit, tags));\r\n    }else{\r\n      // 直接關閉\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <ViewerContainer>\r\n      <Header {...headerTheme}>\r\n        <div onClick={onHeaderBtnClick}>\r\n          {headerTheme.icon}\r\n          <p>{headerTheme.text}</p>\r\n        </div>\r\n      </Header>\r\n      <Content>\r\n        {favoredlist.map((items: FavoredItem[], i) => {\r\n          // 驗證groupname\r\n          // 根據分群顯示\r\n          const groupName = group[i];\r\n          return items.length > 0 ? (\r\n            <FavoredCardsGroup\r\n              key={\"GroupVisitItems_\" + groupName}\r\n              items={items}\r\n              groupName={groupName}\r\n            />\r\n          ) : (\r\n            <Fragment key={\"GroupVisitItems_\" + groupName} />\r\n          );\r\n        })}\r\n      </Content>\r\n    </ViewerContainer>\r\n  );\r\n}\r\n\r\nconst ViewerContainer = styled.div`\r\n  --btnTextColor: #fff;\r\n  --btnTextHoverColor: #fff;\r\n  --btnBgColor: rgba(25, 133, 161, 0.5);\r\n  --btnBgHoverColor: rgb(25, 133, 161);\r\n  --groupTextColor: rgb(25, 133, 161);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #4c4a46;\r\n\r\n  position: fixed;\r\n  top: 65px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n  background-color: var(--bkgColor);\r\n  overflow-y: auto;\r\n`;\r\n\r\ntype HeaderThemeType = {\r\n  icon: any;\r\n  text: string;\r\n};\r\nconst getHeaderIcon = (\r\n  isLogin: boolean,\r\n  isChanged: boolean\r\n): HeaderThemeType => {\r\n  // debugger\r\n  if (!isLogin) {\r\n    // login first\r\n    return {\r\n      text: \"請先登入\",\r\n      icon: <ai.AiOutlineUser />,\r\n    };\r\n  }\r\n  if (isChanged) {\r\n    // should update\r\n    return {\r\n      text: \"上傳檔案\",\r\n      icon: <ai.AiOutlineCloudUpload />,\r\n    };\r\n  } else {\r\n    // colsed\r\n    return {\r\n      text: \"直接關閉\",\r\n      icon: <ai.AiOutlineClose />,\r\n    };\r\n  }\r\n};\r\n\r\nconst Header = styled.div<HeaderThemeType>`\r\n  position: relative;\r\n  background-color: var(--navColor);\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  div {\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 10px 20px 0;\r\n    padding: 15px 0;\r\n    border-radius: 30px;\r\n    font-weight: 700px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: var(--btnTextColor);\r\n    background-color: var(--btnBgColor);\r\n    cursor: pointer;\r\n    border: 2px solid;\r\n    transition: 0.5s;\r\n\r\n    svg {\r\n      font-size: 8vmin;\r\n      padding-right: 5px;\r\n      transition: 0.2s;\r\n    }\r\n\r\n    p {\r\n      letter-spacing: 1vmin;\r\n      font-size: 6vmin;\r\n      transition: 0.2s;\r\n    }\r\n\r\n    :hover {\r\n      color: var(--btnTextHoverColor);\r\n      background-color: var(--btnBgHoverColor);\r\n\r\n      svg {\r\n        font-size: 9vmin;\r\n      }\r\n\r\n      p {\r\n        font-size: 8vmin;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"../../app/hooks\";\r\nimport { selectUser } from \"../../features/user/slice\";\r\nimport { Fragment, useLayoutEffect } from \"react\";\r\nimport {\r\n  selectCurrent,\r\n  selectFavoredList,\r\n  selectIsFavoredCardsListChanged,\r\n  selectTags,\r\n} from \"../../features/channelCardStore/slice\";\r\nimport {\r\n  reqFetchChannels,\r\n  reqEditVisit,\r\n} from \"../../features/channelCardStore\";\r\nimport {\r\n  ChannelCardsGroup,\r\n  ChannelSearch,\r\n  ChannelTagsSwitchers,\r\n  ChannelCardsBrowser,\r\n} from \"../../features/channelCardStore\";\r\n\r\nexport default function ChannelsStage() {\r\n\r\n  const user = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const isListChanged = useSelector(selectIsFavoredCardsListChanged);\r\n  const favoredList = useSelector(selectFavoredList);\r\n  const dispatch = useDispatch();\r\n\r\n  useLayoutEffect(() => {\r\n    if (isListChanged) {\r\n      // 檢查收藏表單是否已經被改變，如果已有異動，先發送請求獲取新的收藏表單。\r\n      const { username, ssid } = user;\r\n      dispatch(reqEditVisit(username, ssid, favoredList, tags));\r\n    } else {\r\n      // 獲取當前資料庫中的頻道資訊。\r\n      const { username, ssid } = user;\r\n      dispatch(reqFetchChannels(username, ssid, tags));\r\n    }\r\n    return () => {};\r\n  }, [dispatch, user, tags]);\r\n\r\n  return (\r\n    <Container>\r\n      <ControlPanel>\r\n        <ChannelSearch />\r\n        <ChannelTagsSwitchers />\r\n      </ControlPanel>\r\n      <ChannelSearchCard />\r\n      <ChannelCardsBrowser />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction ChannelSearchCard() {\r\n  const current = useSelector(selectCurrent);\r\n\r\n  return (\r\n    <>\r\n      {current !== null ? (\r\n        current.status === \"failure\" ? (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        ) : (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        )\r\n      ) : (\r\n        <Fragment />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 65px;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: \"auto\";\r\n`;\r\n\r\nconst ControlPanel = styled.div`\r\n  position: relative;\r\n  background-color: #666;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: start;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\n","/**\r\n * 僅用在未登入用戶將頻道設置為最愛時，待登入後，比對存檔與當前紀錄兩者進行合併。\r\n */\r\nimport axios from \"axios\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { FavoredItem, VisitItem, VisitList } from \"../../../app/types\";\r\nimport { createVisitItem } from \"../shares\";\r\nimport { setFavoredList } from \"../slice\";\r\nimport { reqUpdateVisit } from \"./reqUpdateVisit\";\r\n\r\nexport const reqEditVisit =\r\n  (username: string, ssid: string, already: FavoredItem[], tags: string[]) =>\r\n  (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    axios.post(`${API_SERVER_URL}/visit/edit`, postform).then(\r\n      (resp) => {\r\n        console.log(\"開啟VisitList成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const visit: VisitList = resp.data[\"visit\"];\r\n\r\n        // 尚未登入時已有添加喜歡的對象到表單，登入後自動獲取該表單與回應收到的結果進行合併。\r\n\r\n        // 即使success，也可能新的使用者初始清單為空。\r\n        if (code === \"success\" && visit.list) {\r\n          // 安全地添加 \"Favorite\" 分群\r\n          const group = visit.group.includes(VISITS_DEFAULT_GROUPNAME)\r\n            ? visit.group\r\n            : [VISITS_DEFAULT_GROUPNAME, ...visit.group];\r\n\r\n          // 被添加到最愛的頻道都會被標記為 isNewAdded = true，蒐集後並轉換型態成VisitItem[]\r\n          const newAdded: VisitItem[] = already.reduce(\r\n            (result: VisitItem[], cur: FavoredItem) =>\r\n              cur.isNewAdded && !cur.isDeleted\r\n                ? result.concat(createVisitItem(cur))\r\n                : result,\r\n            []\r\n          );\r\n\r\n          // 取出\"新的且沒被刪除的\"被添加到最愛的頻道，並與回應收到的表單頻道比對後去除重複的。\r\n          const mp = new Map<string, boolean>();\r\n          const newlist: VisitItem[] = newAdded\r\n            .concat(visit.list)\r\n            .reduce((result: VisitItem[], cur: VisitItem) => {\r\n              if (!mp.has(cur.cid)) {\r\n                mp.set(cur.cid, true);\r\n                return result.concat(cur);\r\n              } else {\r\n                return result;\r\n              }\r\n            }, []);\r\n          setTimeout(() =>\r\n            (function (group: string[], list: VisitItem[]) {\r\n              dispatch(reqUpdateVisit(username, ssid, { group, list }, tags));\r\n            })(group, newlist)\r\n          );\r\n        } else {\r\n          dispatch(\r\n            setFavoredList({\r\n              list: already,\r\n              group: [VISITS_DEFAULT_GROUPNAME, CHANNELS_DEFAULT_GROUPNAME],\r\n            })\r\n          );\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"開啟VisitList 失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChatboxIframe } from \"../../../app/types\";\r\n\r\nexport function TheaterChatbox(props: ChatboxIframe) {\r\n  const chatbox = props;\r\n  const { w, h } = props;\r\n  return (\r\n    <>\r\n      {chatbox.isEnable ? (\r\n        <ChatboxContainer width={w} height={h}>\r\n          {getChatboxIframe(chatbox)}\r\n        </ChatboxContainer>\r\n      ) : (\r\n        <Fragment />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst getChatboxIframe = (chatbox: ChatboxIframe): any => {\r\n  const { method, cid, src, cname } = chatbox;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          allowFullScreen={false}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\nconst ChatboxContainer = styled.div<{ width: number; height: number }>`\r\n  background-color: #000;\r\n  width: ${(p) => p.width};\r\n  height: ${(p) => p.height};\r\n  iframe {\r\n    width: ${(p) => p.width};\r\n    height: ${(p) => p.height};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { useState } from \"react\";\r\nimport { ChatboxIframe, PlayerIframe } from \"../../../app/types\";\r\nimport { removeIframeByCid, switchChatBoxByCid } from \"../slice\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterChatbox } from \"../TheaterChatbox\";\r\n\r\ntype Props = {\r\n  flexType: string;\r\n  player: PlayerIframe;\r\n  chatbox: ChatboxIframe;\r\n};\r\n\r\nexport function TheaterPlayerItem(props: Props) {\r\n  const { flexType, player, chatbox } = props;\r\n  const { cid, w: pw, h: ph } = player;\r\n  const { w: cw, h: ch } = chatbox;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const showMenu = () => {\r\n    console.log(\"showMenu\");\r\n    setIsEnable(!isEnable);\r\n  };\r\n  const onLeaveMenu = () => {\r\n    setIsEnable(false);\r\n  };\r\n  const onEnterMenu = () => {\r\n    setIsEnable(true);\r\n  };\r\n  const removeIframe = () => {\r\n    dispatch(removeIframeByCid({ cid }));\r\n  };\r\n  const switchChatBox = () => {\r\n    dispatch(switchChatBoxByCid({ cid }));\r\n  };\r\n\r\n  return (\r\n    <IframeGridLocator\r\n      flexType={flexType}\r\n      playerWidth={pw}\r\n      playerHeight={ph}\r\n      chatboxWidth={cw}\r\n      chatboxHeight={ch}\r\n    >\r\n      <IframeContainer>\r\n        {getPlayerIframe(player)}\r\n        <Menu\r\n          onClick={showMenu}\r\n          onMouseEnter={onEnterMenu}\r\n          onMouseLeave={onLeaveMenu}\r\n          isEnable={isEnable}\r\n        >\r\n          <div onClick={removeIframe}>\r\n            <ai.AiOutlineCloseCircle />\r\n          </div>\r\n          &nbsp;\r\n          <div onClick={switchChatBox}>\r\n            <ai.AiOutlineMessage />\r\n          </div>\r\n        </Menu>\r\n      </IframeContainer>\r\n      <TheaterChatbox {...chatbox} />\r\n    </IframeGridLocator>\r\n  );\r\n}\r\n\r\nconst getPlayerIframe = (player: PlayerIframe): any => {\r\n  const { method, cid, src, cname } = player;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-presentation\"\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-presentation\"\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\nconst IframeGridLocator = styled.div<{\r\n  flexType: string;\r\n  playerWidth: number;\r\n  playerHeight: number;\r\n  chatboxWidth: number;\r\n  chatboxHeight: number;\r\n}>`\r\n  --playerWidth: ${(p) => p.playerWidth}px;\r\n  --playerHeight: ${(p) => p.playerHeight}px;\r\n  --chatboxWidth: ${(p) => p.chatboxWidth}px;\r\n  --chatboxHeight: ${(p) => p.chatboxHeight}px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: ${(p) => p.flexType};\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #000;\r\n`;\r\n\r\nconst IframeContainer = styled.div`\r\n  width: var(--playerWidth);\r\n  height: var(--playerHeight);\r\n  position: relative;\r\n  iframe {\r\n    z-index: 1;\r\n    width: var(--playerWidth);\r\n    height: var(--playerHeight);\r\n  }\r\n`;\r\n\r\nconst Menu = styled.h1<{ isEnable: boolean }>`\r\n  top: 0;\r\n  right: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: ${(p) => (p.isEnable ? `200px` : `100px`)};\r\n  max-height: 100vh;\r\n  background-color: #000;\r\n  opacity: ${(p) => (p.isEnable ? `0.8` : `0.02`)};\r\n  transition: 0.6s;\r\n  cursor: pointer;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  // MenuButton\r\n  div {\r\n    font-size: ${(p) => (p.isEnable ? `75px` : `0px`)};\r\n    svg {\r\n      position: relative;\r\n      top: ${(p) => (p.isEnable ? `0%` : `30%`)};\r\n      color: hotpink;\r\n      cursor: pointer;\r\n      border-radius: 50%;\r\n      opacity: ${(p) => (p.isEnable ? `.8` : `0`)};\r\n      transform: ${(p) => (p.isEnable ? `rotate(360deg)` : `none`)};\r\n      transition: 0.4s;\r\n      :hover {\r\n        color: gray;\r\n        background-color: hotpink;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport {\r\n  selectPlayPairs,\r\n  selectGridLayout,\r\n  resizeGridLayout,\r\n} from \"../slice\";\r\nimport { useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { TheaterPlayerItem } from \"../TheaterPlayerItem\";\r\n\r\nexport function TheaterIframesViewer() {\r\n  const dom = useRef<HTMLDivElement>(null);\r\n  const pairs = useSelector(selectPlayPairs);\r\n  const numOfIframes = pairs.length;\r\n  const { col, row, flexType } = useSelector(selectGridLayout);\r\n  const dispatch = useDispatch();\r\n\r\n  const resizeIframes = useCallback(() => {\r\n    if (numOfIframes === 0 || dom.current === null) {\r\n      return;\r\n    }\r\n    console.log(\"[TheaterIframesViewer] Resize All Iframes\");\r\n    const { clientWidth, clientHeight } = dom.current;\r\n    dispatch(resizeGridLayout({ clientWidth, clientHeight }));\r\n  }, [dispatch, dom, numOfIframes]);\r\n\r\n  useLayoutEffect(() => {\r\n    // 添加新的Iframe元素時，要先執行一次\r\n    resizeIframes();\r\n\r\n    // 監聽畫面更新時的resize\r\n    let handler: any = null;\r\n    const resize = () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      handler = setTimeout(resizeIframes, 500);\r\n    };\r\n    window.addEventListener(\"resize\", resize);\r\n\r\n    return () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      window.removeEventListener(\"resize\", resize);\r\n    };\r\n  }, [resizeIframes]);\r\n\r\n  // console.log(`[TheaterIframesViewer] render, numOfIframes: ${numOfIframes}`);\r\n  return (\r\n    <Container ref={dom} col={col} row={row}>\r\n      {pairs.map(({ player, chatbox }) => (\r\n        <TheaterPlayerItem\r\n        key={\"TheaterPlayerItem_\" + player.cid}\r\n          flexType={flexType}\r\n          player={player}\r\n          chatbox={chatbox}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div<{ col: number; row: number }>`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 100px;\r\n  width: 100%;\r\n  height: calc(100% - 100px);\r\n  box-sizing: border-box;\r\n  background-color: gray;\r\n  z-index: 1;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => props.col}, 1fr);\r\n  grid-template-rows: repeat(${(props) => props.row}, 1fr);\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport { appendIframeToPlaylist, removeIframeFromPlaylist } from \"../slice\";\r\n\r\ntype TheaterSliderItemProps = {\r\n  item: TheaterElement;\r\n  index: number;\r\n  isStopTrans: boolean;\r\n};\r\n\r\nexport function TheaterSliderItem(props: TheaterSliderItemProps) {\r\n  const { index, isStopTrans, item } = props;\r\n  const { preview, cname, avatar, checked } = item;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    if (item.checked) {\r\n      dispatch(removeIframeFromPlaylist({ item }));\r\n    } else {\r\n      dispatch(appendIframeToPlaylist({ item }));\r\n    }\r\n  };\r\n  // console.log(\"[TheaterSliderItem] render\")\r\n  return (\r\n    <Section index={index} isStopTrans={isStopTrans}>\r\n      <SliderPreview>\r\n        <img src={preview} alt={`${cname}_preview`} />\r\n        <p>{`${cname}`}</p>\r\n      </SliderPreview>\r\n      <Avatar\r\n        src={avatar}\r\n        alt={`${cname}_avatar`}\r\n        onClick={handleClick}\r\n        checked={checked}\r\n      />\r\n    </Section>\r\n  );\r\n}\r\nconst Section = styled.div<{ index: number; isStopTrans: boolean }>`\r\n  position: relative;\r\n  left: ${(props) => -100 * props.index}%;\r\n  min-width: 100%;\r\n  height: 100px;\r\n\r\n  background-color: var(--navColor);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  transition: ${(props) => (props.isStopTrans ? `none` : `.5s`)};\r\n`;\r\n\r\nconst SliderPreview = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  img {\r\n    width: auto;\r\n    height: auto;\r\n    filter: blur(2px);\r\n    opacity: 0.3;\r\n  }\r\n\r\n  p {\r\n    position: absolute;\r\n    top: 100px;\r\n    padding: 4px;\r\n    color: hotpink;\r\n    background-color: var(--navColor);\r\n    opacity: 0.8;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    transition: top 0.5s;\r\n    z-index: 1;\r\n\r\n    min-width: 100%;\r\n    border-radius: 70% 70% 0 0;\r\n  }\r\n\r\n  :hover {\r\n    p {\r\n      top: 78px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.img<{ checked: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 85px;\r\n  border-radius: 50%;\r\n  border: ${(props) => (props.checked ? `solid 5px hotpink` : `none`)};\r\n  cursor: pointer;\r\n  transition: width 0.2s ease-in-out;\r\n  transition: border 0.5s;\r\n  opacity: 0.9;\r\n\r\n  :hover {\r\n    width: 90px;\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport {\r\n  selectNumOfElements,\r\n  selectSliderElements,\r\n  selectSlider,\r\n} from \"../slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { TheaterSliderItem } from \"../TheaterSliderItem\";\r\nimport { playSliderLeft, playSliderRight } from \"../api\";\r\n\r\n\r\nexport function TheaterSlider() {\r\n  const { sliderIndex, isTakenOverAnim } = useSelector(selectSlider);\r\n  const numOfElements = useSelector(selectNumOfElements);\r\n  const sliderElements = useSelector(selectSliderElements);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderLeft = () => {\r\n    dispatch(playSliderLeft(sliderIndex, numOfElements));\r\n  };\r\n\r\n  const sliderRight = () => {\r\n    dispatch(playSliderRight(sliderIndex, numOfElements));\r\n  };\r\n\r\n  // console.log(\r\n  //   `[TheaterSlider] render, numOfElements: ${numOfElements}, sliderIndex: ${sliderIndex}`\r\n  // );\r\n  return (\r\n    <SliderWrap>\r\n      <SliderContainer>\r\n        <Control onClick={sliderLeft}>\r\n          <ai.AiOutlineLeftCircle />\r\n        </Control>\r\n        <Control onClick={sliderRight}>\r\n          <ai.AiOutlineRightCircle />\r\n        </Control>\r\n        <Content>\r\n          {sliderElements.map((e: TheaterElement, i: number) => (\r\n            <TheaterSliderItem\r\n              key={`slider_${i}_cid_${e.cid}_content`}\r\n              item={e}\r\n              index={sliderIndex}\r\n              isStopTrans={isTakenOverAnim}\r\n            />\r\n          ))}\r\n        </Content>\r\n      </SliderContainer>\r\n    </SliderWrap>\r\n  );\r\n}\r\n\r\nconst SliderWrap = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: auto;\r\n  z-index: 1;\r\n`;\r\n\r\nconst SliderContainer = styled.div`\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  background-color: var(--navColor);\r\n  box-sizing: border-box;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n\r\n  background-color: gray;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: left;\r\n  overflow: hidden;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nconst Control = styled.span`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n\r\n  font-size: 50px;\r\n  background-color: none;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 1;\r\n  border-radius: 50%;\r\n  :nth-of-type(1) {\r\n    left: 30px;\r\n    text-align: right;\r\n  }\r\n  :nth-of-type(2) {\r\n    left: calc(100% - 100px);\r\n    text-align: right;\r\n  }\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n","import { setSlider } from \"../slice\";\r\n\r\nexport const playSliderLeft =\r\n  (sliderIndex: number, numOfElements: number) => (dispatch: any) => {\r\n    let next = sliderIndex - 1;\r\n    if (next === 0) {\r\n      dispatch(setSlider({ next: numOfElements + 1, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: numOfElements, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n\r\nexport const playSliderRight =\r\n  (sliderIndex: number, numOfElements: number) => (dispatch: any) => {\r\n    let next = sliderIndex + 1;\r\n    if (next === numOfElements + 1) {\r\n      dispatch(setSlider({ next: 0, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: 1, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n","import { useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { TheaterSlider, TheaterIframesViewer, reqTheaterChannels } from \"../../features/theater\";\r\n\r\nimport {\r\n  selectSlider,\r\n  setFullScreen,\r\n  setSliderFolded,\r\n} from \"../../features/theater/slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { selectHasFetchChannels } from \"../../features/channelCardStore/slice\";\r\nimport { history } from \"../..\";\r\n\r\ntype Props = {\r\n  setNavbarFolded: (isFolded: boolean) => void;\r\n};\r\n\r\nexport default function TheaterPage(props: Props) {\r\n  const hasfetchChannels = useSelector(selectHasFetchChannels);\r\n  const { isFolded,isFullScreen } = useSelector(selectSlider);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderFold = () => {\r\n    dispatch(setSliderFolded(!isFolded));\r\n  };\r\n\r\n  const fullScreen = ()=>{\r\n    dispatch(setFullScreen(!isFullScreen));\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    // 進入Theater前，必須先至少取得一次完整的頻道資訊避免異常。\r\n    if (!hasfetchChannels) {\r\n      history.push({ pathname: \"/channels\" });\r\n      return;\r\n    }\r\n    // 進入頁面時，先獲取Theater清單(目前為取出所有live頻道)\r\n    dispatch(reqTheaterChannels(\"live\"));\r\n    return () => {};\r\n  }, [hasfetchChannels, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <HideNavBarBtn onClick={sliderFold} isFolded={isFolded}>\r\n        {isFolded ? (\r\n          <ai.AiOutlineVerticalAlignBottom />\r\n        ) : (\r\n          <ai.AiOutlineVerticalAlignTop />\r\n        )}\r\n      </HideNavBarBtn>\r\n      <FullScreenBtn onClick={fullScreen} isFolded={isFolded}>\r\n        {isFullScreen ? (\r\n          <ai.AiOutlineFullscreenExit />\r\n          ) : (\r\n          <ai.AiOutlineFullscreen />\r\n        )}\r\n      </FullScreenBtn>\r\n      <Wrap isFolded={isFolded}>\r\n        <TheaterSlider />\r\n        <TheaterIframesViewer />\r\n      </Wrap>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div<{ isFolded: boolean }>`\r\n  --topOffset: ${(props) => (props.isFolded ? `-100px` : `65px`)};\r\n\r\n  position: absolute;\r\n  left: 0;\r\n  top: var(--topOffset);\r\n\r\n  width: 100%;\r\n  height: calc(100vh - var(--topOffset));\r\n  z-index: 5;\r\n`;\r\n\r\nconst HideNavBarBtn = styled.span<{ isFolded: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: ${(p) => (p.isFolded ? `85px` : `135px`)};\r\n  left: calc(100% - 35px);\r\n  text-align: right;\r\n\r\n  font-size: 35px;\r\n  background-color: #eee;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 10;\r\n  border-radius: 50%;\r\n\r\n  transition: 0.3s;\r\n\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nconst FullScreenBtn = styled.span<{ isFolded: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: ${(p) => (p.isFolded ? `35px` : `85px`)};\r\n  left: calc(100% - 35px);\r\n  text-align: right;\r\n\r\n  font-size: 35px;\r\n  background-color: #eee;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 10;\r\n  border-radius: 50%;\r\n\r\n  transition: 0.3s;\r\n\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { ChannelProps } from \"../../../app/types\";\r\nimport { setElements } from \"../slice\";\r\n\r\nexport const reqTheaterChannels =\r\n  (tag: string) => (dispatch: any) => {\r\n    axios.get(`${API_SERVER_URL}/channels/${tag}`).then(\r\n      (resp) => {\r\n        console.log(\"Theater請求成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const channels: ChannelProps[] = resp.data[\"channels\"];\r\n        if (code === \"success\") {\r\n          dispatch(setElements({ channels }));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"Theater請求失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { useEffect } from 'react'\r\nimport { history } from '../..';\r\nimport { useSelector } from '../../app/hooks';\r\nimport { selectUser } from '../../features/user/slice';\r\n\r\n\r\nexport default function HomePage() {\r\n    const user = useSelector(selectUser);\r\n\r\n    useEffect(() => {\r\n    const { ssid, username } = user;\r\n    console.log({ ssid });\r\n    if (ssid !== \"\" && username !== \"\") {\r\n        history.push({ pathname: \"/channels\" });\r\n    } else{\r\n        history.push({ pathname: \"/login\" });\r\n    }\r\n    return () => {};\r\n  }, [user]);\r\n\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    )\r\n}\r\n","import { IoMdRocket } from \"react-icons/io\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function RocketLoading() {\r\n  return (\r\n    <Loader>\r\n      {Array(20)\r\n        .fill(0)\r\n        .map((_, i) => {\r\n          return <Dot key={`dot_${i}`} index={i} />;\r\n        })}\r\n      <Rocket>\r\n        <IoMdRocket />\r\n      </Rocket>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nconst Loader = styled.div`\r\n\r\n  --speed: 1;\r\n  --scale: 2;\r\n  --dotColor: #fff;\r\n  --rocketColor: #fff;\r\n\r\n  position: relative;\r\n  width: calc(120px * var(--scale));\r\n  height: calc(120px * var(--scale));\r\n`;\r\n\r\ntype DotProps = {\r\n  index: number;\r\n};\r\nconst Dot = styled.div<DotProps>`\r\n  --i: ${(p) => p.index};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: rotate(calc(180deg + 18deg * var(--i)));\r\n\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(15px * var(--scale));\r\n    height: calc(15px * var(--scale));\r\n    background-color: var(--dotColor);\r\n    border-radius: 50%;\r\n    transform: scale(0);\r\n    animation: animate calc(2s / var(--speed)) linear infinite;\r\n    animation-delay: calc(0.1s / var(--speed) * var(--i));\r\n  }\r\n\r\n  @keyframes animate {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    10% {\r\n      transform: scale(1.2);\r\n    }\r\n    80%,\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Rocket = styled.div`\r\n  /* background-color: brown; */\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: var(--rocketColor);\r\n  font-size: calc(50px * var(--scale));\r\n  animation: rotating calc(2s / var(--speed)) linear infinite;\r\n  animation-delay: calc(-1s / var(--speed));\r\n\r\n  svg{\r\n      transform: rotate(45deg);\r\n      position: relative;\r\n      top: calc(-15px * var(--scale));\r\n      left: calc(-15px * var(--scale));\r\n  }\r\n\r\n  @keyframes rotating{\r\n    0%{\r\n        transform: rotate(10deg)\r\n    }\r\n    100%{\r\n        transform: rotate(370deg)\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\"\r\nimport RocketLoading from \"../../components/RocketLoading\"\r\n\r\nexport default function LoadingPage() {\r\n    return (\r\n        <Container>\r\n            <RocketLoading/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    top: 65px;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: grey;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: none;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #fff;\r\n\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  box-sizing: border-box;\r\n  border: 5px solid;\r\n  border-radius: 1.5em 1.5em 1.5em 1.5em;\r\n  border-color: var(--navColor);\r\n  background-color: var(--bkgColor);\r\n\r\n  max-width: 480px;\r\n  min-width: 250px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  /* background-color: red; */\r\n`;\r\n\r\nexport const MsgBox = styled.div`\r\n  position: relative;\r\n  left: 0%;\r\n  top: 0%;\r\n\r\n  padding: 20px 0;\r\n  border-radius: 20px;\r\n\r\n  border: 2px solid var(--btnHoverBgColor);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  :after {\r\n    position: absolute;\r\n    margin-top: 58px;\r\n    background-color: #fff;\r\n    /* top: 20px; */\r\n    content: \"\";\r\n    width: 25px;\r\n    height: 25px;\r\n    border-bottom: 2px solid var(--btnHoverBgColor);\r\n    border-right: 2px solid var(--btnHoverBgColor);\r\n    /* border-top: 2px solid var(--btnHoverBgColor); */\r\n    /* border-left: 2px solid var(--btnHoverBgColor); */\r\n    transform: rotate(45deg);\r\n    z-index: 1;\r\n  }\r\n\r\n  h1 {\r\n    position: relative;\r\n    display: block;\r\n    color: var(--btnHoverBgColor);\r\n    z-index: 2;\r\n\r\n    animation: animate .8s linear infinite;\r\n\r\n    @keyframes animate {\r\n      0% {\r\n        transform: translateX(-3px);\r\n      }\r\n      50% {\r\n        transform: translateX(3px);\r\n      }\r\n      100% {\r\n        transform: translateX(-3px);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  padding: 20px 0 0 0;\r\n  h1 {\r\n    letter-spacing: 5px;\r\n    text-align: center;\r\n    padding: 0 0 20px 0;\r\n    border-bottom: 1px solid silver;\r\n    font-size: 28px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px 40px 0 40px;\r\n  background-color: none;\r\n  div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    input {\r\n      width: 100%;\r\n      padding: 0 5px;\r\n      height: 40px;\r\n      font-size: 16px;\r\n      border: none;\r\n      outline: none;\r\n      color: var(--btnHoverColor);\r\n\r\n      :focus ~ label {\r\n        top: -5px;\r\n        color: var(--btnHoverColor);\r\n      }\r\n      :valid ~ label {\r\n        top: -5px;\r\n        color: var(--btnHoverColor);\r\n      }\r\n      :focus ~ span::before {\r\n        width: 100%;\r\n      }\r\n    }\r\n    label {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 5px;\r\n      color: #adadad;\r\n      transform: translateY(-50%);\r\n      font-size: 16px;\r\n      pointer-events: none;\r\n      transition: 0.3s;\r\n    }\r\n    span {\r\n      ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 40px;\r\n        left: 0;\r\n        width: 0%;\r\n        height: 2px;\r\n        background-color: var(--btnHoverColor);\r\n        transition: 0.3s;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UsernameField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #adadad;\r\n  margin: 30px 0;\r\n`;\r\n\r\nexport const PasswordField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #adadad;\r\n  margin: 30px 0;\r\n`;\r\n\r\nexport const MainButton = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  border-radius: 25px;\r\n  font-size: 18px;\r\n  font-weight: 700px;\r\n  color: #fff;\r\n  background-color: var(--btnHoverColor);\r\n  letter-spacing: 2px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: 2px solid;\r\n  p {\r\n    /* background-color: red; */\r\n    width: 100%;\r\n    text-align: center;\r\n    pointer-events: none;\r\n  }\r\n  :hover {\r\n    border-color: var(--btnHoverColor);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nexport const SwitchField = styled.div`\r\n  position: relative;\r\n  margin: 30px 0;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  p {\r\n    /* background-color: red; */\r\n    text-align: center;\r\n    pointer-events: none;\r\n  }\r\n  div {\r\n    padding: 0px 10px;\r\n    color: var(--btnHoverColor);\r\n    cursor: pointer;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n","import { Fragment, useLayoutEffect, useRef } from \"react\";\r\nimport { reqLogin } from \"./api\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { history } from \"../../index\";\r\nimport { selectUser, setMsg } from \"./slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"./styles\";\r\n\r\nexport function LoginPage() {\r\n  const { username, msg } = useSelector(selectUser);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n  const dispatch = useDispatch();\r\n  \r\n  const routeToRegister = () => {\r\n    history.push({ pathname: \"/register\" });\r\n  };\r\n\r\n  const onLogin = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      // console.log(\"用戶名不可為空\");\r\n      dispatch(setMsg(\"用戶名不可為空\"));\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      // console.log(\"密碼不可為空\");\r\n      dispatch(setMsg(\"密碼不可為空\"));\r\n      return;\r\n    }\r\n\r\n    dispatch(reqLogin(username, password));\r\n  };\r\n\r\n  \r\n  useLayoutEffect(() => {\r\n    if (usernameInput.current) {\r\n      usernameInput.current.value = username;\r\n    }\r\n    return () => {\r\n      dispatch(setMsg());\r\n    };\r\n  }, [dispatch, usernameInput, username]);\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員登入</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment />\r\n          )}\r\n          <UsernameField>\r\n            <input\r\n              type=\"text\"\r\n              // placeholder=\"請輸入用戶名?\"\r\n              ref={usernameInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input\r\n              type=\"password\"\r\n              // placeholder=\"請輸入密碼?\"\r\n              ref={passwordInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onLogin}>\r\n            <p>登 入</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>還不是會員?</p>\r\n            <div onClick={routeToRegister}>註冊</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserLoginResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserLogin } from \"../slice\";\r\n\r\nexport const reqLogin =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    // 產生登入的postform資料\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n\r\n    // 發送Post請求\r\n    axios.post(`${API_SERVER_URL}/auth/login`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userLoginRes: UserLoginResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserLogin(userLoginRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"登入成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { useLayoutEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { reqRegister } from \"./api\";\r\nimport { history } from \"../../index\";\r\nimport { useSelector } from \"../../app/hooks\";\r\nimport { selectUser, setMsg } from \"./slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"./styles\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport function RegisterPage() {\r\n  const {username, msg} = useSelector(selectUser);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput2 = useRef<HTMLInputElement>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const routeToLogin = () => {\r\n    history.push({ pathname: \"/login\" });\r\n  };\r\n\r\n  const onRegister = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n    const password2 = passwordInput2.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      // console.log(\"用戶名不可為空\");\r\n      dispatch(setMsg(\"用戶名不可為空\"));\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      // console.log(\"密碼不可為空\");\r\n      dispatch(setMsg(\"密碼不可為空\"));\r\n      return;\r\n    }\r\n    if (password !== password2) {\r\n      // console.log(\"輸入的密碼不一致\");\r\n      dispatch(setMsg(\"輸入的密碼不一致\"));\r\n      return;\r\n    }\r\n\r\n    dispatch(reqRegister(username, password));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if(usernameInput.current){\r\n      usernameInput.current.value = username;\r\n    }\r\n    return () => {\r\n      dispatch(setMsg());\r\n    };\r\n  }, [dispatch, usernameInput, username])\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員註冊</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment/>\r\n          )}\r\n          <UsernameField>\r\n            <input type=\"text\" ref={usernameInput} required />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput} required />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput2} required />\r\n            <span />\r\n            <label>{\"密碼確認\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onRegister}>\r\n            <p>註 冊</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>註冊過了?</p>\r\n            <div onClick={routeToLogin}>登入</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserRegisterResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserRegister } from \"../slice\";\r\n\r\nexport const reqRegister =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n    axios.post(`${API_SERVER_URL}/auth/register`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userRegisterRes: UserRegisterResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserRegister(userRegisterRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"註冊成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport ChannelsStage from \"./pages/ChannelsStage\";\r\nimport TheaterPage from \"./pages/TheaterPage\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport LoadingPage from \"./pages/LoadingPage\";\r\nimport { FavoredCardsViewer } from \"./features/channelCardStore\";\r\nimport { LoginPage, RegisterPage } from \"./features/user\";\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/channels/\" component={ChannelsStage} />\r\n        <Route path=\"/theater/\" component={TheaterPage} />\r\n        <Route path=\"/visit/\" component={FavoredCardsViewer} />\r\n        <Route path=\"/login/\" component={LoginPage} />\r\n        <Route path=\"/register/\" component={RegisterPage} />\r\n        <Route path=\"/loading/\" component={LoadingPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport channelCardStoreReducer from \"../features/channelCardStore/slice\";\r\nimport userReducer from \"../features/user/slice\";\r\nimport theaterReducer from \"../features/theater/slice\";\r\nimport { decodeUrlToConnectionConfig } from \"./connections\";\r\n\r\nconst reducer = combineReducers({\r\n  channelCardStore: channelCardStoreReducer,\r\n  user: userReducer,\r\n  theater: theaterReducer,\r\n});\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n});\r\n\r\n// 透過Url取得連線參數。\r\ndecodeUrlToConnectionConfig();\r\n\r\n// const preloadedState = {\r\n//   channels:{\r\n//     favored:[],\r\n//     resident:[],\r\n//   },\r\n//   visit:{\r\n//     list:[],\r\n//   },\r\n//   user:{\r\n//     username: \"\",\r\n//     ssid: \"\",\r\n//   }\r\n// }\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  middleware,\r\n  // preloadedState,\r\n});\r\n\r\n// 透過其回傳值自行推斷出 Store 的形態\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\nimport { Router } from \"react-router\";\r\nimport {createHashHistory} from 'history'\r\n\r\nexport const history = createHashHistory()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}