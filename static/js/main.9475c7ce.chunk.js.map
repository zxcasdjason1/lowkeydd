{"version":3,"sources":["components/NavButtons/NavButton.tsx","components/NavButtons/Browser/index.tsx","app/hooks.ts","app/config.tsx","features/channelCardStore/share.tsx","features/channelCardStore/slice.tsx","components/NavButtons/Collections/index.tsx","components/NavButtons/Theater/index.tsx","features/user/slice.tsx","components/NavButtons/User/index.tsx","app/toggleFullScreen.js","app/share.ts","features/theater/share.tsx","features/theater/slice.tsx","components/Navbar/index.tsx","features/channelCardStore/ChannelCard.tsx","components/GroupLine/index.tsx","features/channelCardStore/ChannelCardsGroup.tsx","features/channelCardStore/ChannelCardsBrowser.tsx","components/SearchBox/index.tsx","features/channelCardStore/api/reqFetchChannels.tsx","features/channelCardStore/api/reqUpdateVisit.tsx","features/channelCardStore/ChannelSearch.tsx","features/channelCardStore/api/reqSearchChannel.tsx","components/SwitchBtn/index.tsx","features/channelCardStore/ChannelTagsSwitchers.tsx","features/channelCardStore/FavoredCard.tsx","features/channelCardStore/FavoredCardsGroup.tsx","features/channelCardStore/FavoredCardsViewer.tsx","pages/ChannelsStage/index.tsx","features/channelCardStore/api/reqEditVisit.tsx","features/theater/TheaterChatbox/index.tsx","features/theater/TheaterPlayerItem/index.tsx","features/theater/TheaterIframesViewer/index.tsx","features/theater/TheaterSliderItem/index.tsx","features/theater/TheaterSlider/index.tsx","pages/TheaterPage/index.tsx","features/theater/api/reqTheaterChannels.tsx","pages/HomePage/index.tsx","components/RocketLoading/index.tsx","pages/LoadingPage/index.tsx","features/user/styles.tsx","features/user/Login/index.tsx","features/user/api/reqLogin.tsx","features/user/Register/index.tsx","features/user/api/reqRegister.tsx","App.tsx","app/store.ts","index.tsx"],"names":["NavButton","props","title","path","icon","closeMenu","Wrap","Container","onClick","history","push","pathname","children","styled","div","NavBrowser","useSelector","hook_useSelector","useDispatch","hook_useDispatch","API_SERVER_URL","VISITS_DEFAULT_GROUPNAME","CHANNELS_DEFAULT_GROUPNAME","SwitcherList","checked","htmlFor","afterColor","createChannelCard","ch","options","group","heart","createFavoredItem","card","isChanged","isNewAdded","isDeleted","cid","cname","owner","avatar","method","createVisitItem","slice","createSlice","name","initialState","hasFetchChannels","clusters","favoredList","tags","current","reducers","setStore","state","action","payload","channels","list","map","v","chgroups","i","console","log","setCluster","setChannelCard","prelist","filter","p","newItem","cards","length","setFavoredList","setSearchResult","f","actions","selectChannelCardStore","channelCardStore","selectHasFetchChannels","createSelector","store","selectTags","selectGroup","selectFavoredList","selectCurrent","selectVisitList","newfavoredList","mp","Map","newGroup","forEach","has","set","selectFavoredCardsList","result","x","index","indexOf","selectIsFavoredCardsListChanged","isListChanged","len","selectNumOfFavoredCards","count","NavCollections","numOfFavored","Counter","visible","NavTheater","setSession","session","username","ssid","expiration","expires","Date","now","toUTCString","document","cookie","setCookie","getCookie","msg","setUserLogin","setUserRegiser","setMsg","undefined","c_name","c_start","c_end","unescape","substring","selectUser","user","selectIsLogin","NavUser","isLogin","Status","enableFullScreen","elem","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","exitFullScreen","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","ConnectionConfig","IsLocal","HostName","createTheaterElement","streamurl","preview","thumbnail","getPlayerSrc","src","sub","match","vedioid","error","getChatboxSrc","getListAppendIframe","o","concat","getListRemoveIframe","setIframeSize","item","ratio","w","h","getResult","col","row","cw","pw","ph","flexType","fromChannel","elements","playlist","chatlist","slider","sliderIndex","isTakenOverAnim","isFolded","isFullScreen","gridlayout","clientWidth","clientHeight","setElements","found","cidFromChannel","get","setSlider","next","setSliderFolded","window","dispatchEvent","Event","setFullScreen","body","resizeGridLayout","cW","cH","size","maxArea","curRow","Math","ceil","gridW","gridH","curPlayW","curPlayH","curChatW","curChatH","min","area","calcNewIframeSizeV2","curCol","calcSingleIframeSize","noChatWidth","noChatHeight","newPlayerList","newChatboxList","chatbox","player","isEnable","setFromChannel","newPlayerIframe","convertToPlayerIframe","newChatboxIframe","convertToChatboxIframe","status","appendIframeToPlaylist","newElements","e","newPlaylist","createPlayerIframe","newChatlist","createChatboxIframe","removeIframeFromPlaylist","removeIframeByCid","switchChatBoxByCid","c","selectTheater","theater","selectElements","selectPlayPairs","selectGridLayout","selectSlider","selectNumOfElements","selectSliderElements","Navbar","useState","setIsEnable","Nav","Logo","Menu","ToogleNavBkg","NavItemList","nav","ul","ChannelCard","viewcount","starttime","groupName","isVisible","setIsVisible","ref","useRef","avatarStyles","getAvatarStyles","heartStyles","getHeartTheme","previewStyles","getPreviewImage","dispatch","useEffect","parentDom","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","disconnect","AvatarBox","alt","FavoredHeartBtn","CardBody","PreviewBox","image","Description","Owner","ChTitle","Detail","Left","Right","fontcolor","fontbgcolor","bordercolor","ishidden","color","hoverColor","isHidden","isEnabled","a","GroupLine","h1","lineColor","bkgColor","fontsize","ChannelCardsGroup","ChannelGridCantainer","ChannelCardsBrowser","view","cs","GetChannelCardsGroup","SearchBox","theme","searchInput","commit","onSubmit","value","onChange","onKeyUp","keyCode","type","id","placeholder","style","fontSize","iconColor","focusColor","reqFetchChannels","request","FormData","append","JSON","stringify","axios","post","then","response","data","reqUpdateVisit","visit","postform","resp","code","setTimeout","err","ChannelSearch","keyword","url","SwitchBtn","HiddenCheckedInput","handleSwitchClick","tag","isChecked","ToogleFill","label","beforeColor","ballColor","input","ChannelTagsSwitchers","includes","newtags","_tag","_","SwitchBtnBox","FavoredCard","Cid","getEditedList","newList","getDeletedList","Avatar","OwnerText","ButtonGroup","Button","newGroupName","prompt","g","alert","newOwner","confirm","FavoredCardsGroup","Content","items","FavoredCardsViewer","headerTheme","getHeaderIcon","favoredlist","useLayoutEffect","ViewerContainer","Header","goBack","text","ChannelsStage","already","newAdded","reduce","cur","newlist","reqEditVisit","ControlPanel","ChannelSearchCard","TheaterChatbox","ChatboxContainer","width","height","getChatboxIframe","scrolling","allowFullScreen","seamless","frameBorder","TheaterPlayerItem","IframeGridLocator","playerWidth","playerHeight","chatboxWidth","chatboxHeight","IframeContainer","getPlayerIframe","onMouseEnter","onMouseLeave","sandbox","TheaterIframesViewer","dom","pairs","numOfIframes","resizeIframes","useCallback","handler","resize","clearTimeout","addEventListener","removeEventListener","TheaterSliderItem","isStopTrans","Section","SliderPreview","img","TheaterSlider","numOfElements","sliderElements","SliderWrap","SliderContainer","Control","playSliderLeft","playSliderRight","span","TheaterPage","hasfetchChannels","HideNavBarBtn","FullScreenBtn","HomePage","RocketLoading","Loader","Array","fill","Dot","Rocket","LoadingPage","MsgBox","Title","UsernameField","PasswordField","MainButton","SwitchField","Login","usernameInput","passwordInput","required","password","reqLogin","Register","passwordInput2","password2","reqRegister","App","exact","component","reducer","combineReducers","channelCardStoreReducer","userReducer","theaterReducer","middleware","getDefaultMiddleware","serializableCheck","location","hostname","decodeUrlToConnectionConfig","configureStore","createHashHistory","ReactDOM","render","getElementById"],"mappings":"mRAIe,SAASA,EAAUC,GAChC,IAAQC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAS3B,OACE,eAACC,EAAD,WACE,eAACC,EAAD,CAAWC,QATC,WACD,KAATL,GACFM,GAAQC,KAAK,CAAEC,SAAS,GAAD,OAAKR,KAE9BE,KAKE,UACGD,EACD,4BAAIF,OAGLD,EAAMW,YAKb,IAAMN,EAAOO,IAAOC,IAAV,kaA0BJP,EAAYM,IAAOC,IAAV,0oCCjDR,SAASC,EAAWd,GACzB,OAAO,cAACD,EAAD,eAAeC,I,cCOXe,EAA+CC,IAG/CC,EAAc,kBAAMC,e,uBCXpBC,EAAc,gCAEdC,EAA2B,WAE3BC,EAA6B,WAE7BC,EAAgC,CAC3C,CAAEC,SAAS,EAAOC,QAAS,OAAQC,WAAY,QAC/C,CAAEF,SAAS,EAAOC,QAAS,OAAQC,WAAY,QAC/C,CAAEF,SAAS,EAAOC,QAAS,MAAOC,WAAY,SCDnCC,EAAoB,SAC/BC,EACAC,GAOA,IAAQC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MAEf,OAAO,2BACFH,GADL,IAEEE,QACAC,WAISC,EAAoB,SAC/BC,EACAJ,GAEA,IAAQK,EAAqCL,EAArCK,UAAWC,EAA0BN,EAA1BM,WAAYC,EAAcP,EAAdO,UACvBC,EAA6CJ,EAA7CI,IAAKC,EAAwCL,EAAxCK,MAAOC,EAAiCN,EAAjCM,MAAOC,EAA0BP,EAA1BO,OAAQC,EAAkBR,EAAlBQ,OAAQX,EAAUG,EAAVH,MAG3C,MAAO,CACLO,MACAC,QACAC,QACAC,SACAC,SACAX,MAPAA,IAAUR,EAA6BD,EAA2BS,EAQlEI,YACAC,aACAC,cAISM,EAAkB,SAC7BT,GAEA,IAAQI,EAA6CJ,EAA7CI,IAAKC,EAAwCL,EAAxCK,MAAOC,EAAiCN,EAAjCM,MAAOC,EAA0BP,EAA1BO,OAAQC,EAAkBR,EAAlBQ,OAAQX,EAAUG,EAAVH,MAG3C,MAAO,CACLO,MACAC,QACAC,QACAC,SACAC,SACAX,MAPAA,IAAUR,EAA6BD,EAA2BS,ICFhEa,EAAQC,YAAY,CACxBC,KAAM,UACNC,aA/BqC,CACrCC,kBAAkB,EAClBC,SAAU,CAAC,IACXlB,MAAO,GACPmB,YAAa,GACbC,KAAM,CAAC,QACPC,QAAS,MA0BTC,SAAU,CACRC,SAAU,SACRC,EACAC,GAUA,MAAwCA,EAAOC,QAAvCC,EAAR,EAAQA,SAAU3B,EAAlB,EAAkBA,MAAO4B,EAAzB,EAAyBA,KAAMR,EAA/B,EAA+BA,KAC/BI,EAAMxB,MAAQA,EACdwB,EAAMJ,KAAmB,QAAZA,EAAK,GAAe,CAAC,OAAQ,OAAQ,OAASA,EAIvDQ,IACFJ,EAAML,YAAcS,EAAKC,KAAI,SAACC,GAAD,OAC3B5B,EAAkB4B,EAAG,CACnB1B,WAAW,EACXC,YAAY,EACZC,WAAW,QA/CJ,SACjBkB,EACAG,EACA3B,GAEA,IAAMkB,EAAWS,EAASE,KAAI,SAACE,EAAUC,GAAX,OACf,OAAbD,EACIA,EAASF,KAAI,SAAC/B,GAAD,OACXD,EAAkBC,EAAI,CACpBE,MAAOA,EAAMgC,GACb/B,MAAOD,EAAMgC,KAAOxC,OAGxB,MAENyC,QAAQC,IAAI,iCACZV,EAAMN,SAAWA,EACjBM,EAAMP,kBAAmB,EAoCrBkB,CAAWX,EAAOG,EAAU3B,IAE9BoC,eAAgB,SACdZ,EACAC,GAYA,MAA0BA,EAAOC,QAAzBvB,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,QACNK,EAAqCL,EAArCK,UAAWC,EAA0BN,EAA1BM,WAAYC,EAAcP,EAAdO,UACzB+B,EAAUb,EAAML,YAEtB,GAAIhB,EAAKF,MACPuB,EAAML,YAAN,CACEjB,EAAkBC,EAAM,CACtBC,YACAC,aACAC,eAJJ,mBAMK+B,EAAQC,QAAO,SAACC,GAAD,OAAOA,EAAEhC,MAAQJ,EAAKI,cAG1C,GAAIF,EAEFmB,EAAML,YAAN,YAAwBkB,EAAQC,QAAO,SAACC,GAAD,OAAOA,EAAEhC,MAAQJ,EAAKI,YACxD,CAEL,IAAMiC,EAAUtC,EAAkBC,EAAM,CACtCC,YACAC,aACAC,WAAW,IAEbkB,EAAML,YAAckB,EAAQR,KAAI,SAACU,GAAD,OAC9BA,EAAEhC,MAAQiC,EAAQjC,IAAMgC,EAAIC,KAMlChB,EAAMN,SAAWM,EAAMN,SAASW,KAAI,SAACY,GAAD,OACjB,IAAjBA,EAAMC,OACFD,EAAMZ,KAAI,SAAC/B,GAAD,OACRA,EAAGS,MAAQJ,EAAKI,IAAMT,EAAKK,KAE7B,OAGRwC,eAAgB,SACdnB,EACAC,GAQA,MAAwBA,EAAOC,QAAvB1B,EAAR,EAAQA,MAAO4B,EAAf,EAAeA,KACD,OAAV5B,IACFwB,EAAMxB,MAAQA,GAEhBwB,EAAML,YAAcS,GAKtBgB,gBAAiB,SACfpB,EACAC,GAKA,IAAQJ,EAAYI,EAAOC,QAAnBL,QACR,GAAgB,OAAZA,EAGF,GAFAG,EAAMH,QAAUA,GAEM,IAAlBA,EAAQpB,MAAgB,CAC1B,IAAMuC,EAAUtC,EAAkB,2BAC3BmB,GAD0B,IACjBrB,MAAOT,IACrB,CACEa,WAAW,EACXC,YAAY,EACZC,WAAW,IAGfkB,EAAML,YAAN,CAAqBqB,GAArB,mBAAiChB,EAAML,mBAEvCK,EAAML,YAAcK,EAAML,YAAYmB,QACpC,SAACO,GAAD,OAAOA,EAAEtC,MAAQc,EAAQd,WAQ9B,EAKHM,EAAMiC,QAJRvB,EADK,EACLA,SACAa,EAFK,EAELA,eACAO,EAHK,EAGLA,eACAC,EAJK,EAILA,gBAEa/B,IAAf,QAEakC,EAAyB,SAACvB,GAAD,OACpCA,EAAMwB,kBAEKC,EAAyBC,YACpC,CAACH,IACD,SAACI,GAAD,OAAWA,EAAMlC,oBAQNmC,GALwBF,YACnC,CAACH,IACD,SAACI,GAAD,OAAWA,EAAMjC,YAGOgC,YACxB,CAACH,IACD,SAACI,GAAD,OAAWA,EAAM/B,SAGNiC,EAAcH,YACzB,CAACH,IACD,SAACI,GAAD,OAAWA,EAAMnD,SAGNsD,EAAoBJ,YAC/B,CAACH,IACD,SAACI,GAAD,OAAWA,EAAMhC,eAGNoC,EAAgBL,YAC3B,CAACH,IACD,SAACI,GAAD,OAAWA,EAAM9B,WAGNmC,EAAkBN,YAC7B,CAACI,IACD,SAACnC,GACC,IAAMsC,EAAiBtC,EAEpBmB,QAAO,SAACO,GAAD,OAAQA,EAAEvC,aAEjBuB,KAAI,SAACgB,GAAD,OACHA,EAAE7C,QAAUR,EAAZ,2BACSqD,GADT,IACY7C,MAAOT,IACfsD,KAIFa,EAAK,IAAIC,IACTC,EAAqB,GAgB3B,OAfAH,EAAeI,SAAQ,SAAChB,GACjBa,EAAGI,IAAIjB,EAAE7C,SACZ0D,EAAGK,IAAIlB,EAAE7C,OAAO,GAChB4D,EAAShF,KAAKiE,EAAE7C,WAQK,CACvB4B,KAJwB6B,EAAe5B,KAAI,SAACgB,GAAD,OAAOjC,EAAgBiC,MAKlE7C,MAAO4D,MAMAI,EAAyBd,YACpC,CAACG,EAAaC,IACd,SAACtD,EAAOmB,GACN,GAAqB,IAAjBnB,EAAM0C,OACR,MAAO,CAAC,IAGV,IAAMuB,EAA0BjE,EAAM6B,KAAI,SAACqC,GAAD,MAAO,MAMjD,OALA/C,EAAY0C,SAAQ,SAAChB,GACnB,IAAMsB,EAAQnE,EAAMoE,QAAQvB,EAAE7C,OAC9BiE,EAAOE,GAAOvF,KAAKiE,MAGdoB,KAIEI,EAAkCnB,YAC7C,CAACI,IACD,SAACnC,GAGC,IAFA,IAAImD,GAAgB,EACdC,EAAMpD,EAAYuB,OACfV,EAAI,EAAGA,EAAIuC,EAAKvC,IAAK,CAC5B,MAA6Cb,EAAYa,GAAjD5B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,UAC/B,GAAIF,GAAaC,GAAcC,EAAW,CACxCgE,GAAgB,EAChB,OAGJ,OAAOA,KAIEE,EAA0BtB,YACrC,CAACI,IACD,SAACnC,GAGC,IAFA,IAAIsD,EAAQ,EACNF,EAAMpD,EAAYuB,OACfV,EAAI,EAAGA,EAAIuC,EAAKvC,IAAK,CACLb,EAAYa,GAA3B3B,aAENoE,GAAS,GAGb,OAAOA,KCjTJ,SAASC,EAAevG,GAC7B,IAAMwG,EAAezF,EAAYsF,GAEjC,OACE,cAACtG,EAAD,2BAAeC,GAAf,aACE,cAACyG,EAAD,CAASC,QAASF,EAAe,EAAjC,SACE,+BAAOA,SAMf,IAAMC,EAAU7F,IAAOC,IAAV,qxBACE,SAACb,GAAD,MAAW,CAACA,EAAM0G,QAAN,mBChBpB,SAASC,EAAW3G,GACzB,OAAO,cAACD,EAAD,eAAeC,ICAxB,IAAM4G,EAAa,SAACvD,EAAkBwD,GACpC,IAAQC,EAA+BD,EAA/BC,SAAUC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,WACxB3D,EAAMyD,SAAWA,EACjBzD,EAAM0D,KAAOA,EA4Cf,SAAmBA,EAAcD,EAAkBE,GACjD,IAAIC,EAAU,IAAIC,KAAKA,KAAKC,MAAqB,IAAbH,GAAmBI,cACvDC,SAASC,OAAT,eAA0BP,EAA1B,qBAA2CE,EAA3C,YACAI,SAASC,OAAT,mBAA8BR,EAA9B,qBAAmDG,EAAnD,YA9CAM,CAAUR,EAAMD,EAAUE,IAGtBnE,GAA0B,CAC9BiE,SAAUU,GAAU,YACpBT,KAAMS,GAAU,QAChBC,IAAK,IAGD/E,GAAQC,YAAY,CACxBC,KAAM,QACNC,gBACAM,SAAU,CACRuE,aAAc,SACZrE,EACAC,GAEA,MAA4CA,EAAOC,QAA3CuD,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,WAAYS,EAApC,EAAoCA,IACpCb,EAAWvD,EAAO,CAAEyD,WAAUC,OAAMC,eACpC3D,EAAMoE,IAAMA,GAEdE,eAAgB,SACdtE,EACAC,GAEA,MAA4CA,EAAOC,QAA3CuD,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,WAAYS,EAApC,EAAoCA,IACpCb,EAAWvD,EAAO,CAAEyD,WAAUC,OAAMC,eACpC3D,EAAMoE,IAAMA,GAEdG,OAAQ,SAACvE,EAAOC,QACSuE,IAAnBvE,EAAOC,QACTF,EAAMoE,IAAM,GAEZpE,EAAMoE,IAAMnE,EAAOC,YAMpB,GAAiDb,GAAMiC,QAA/C+C,GAAR,GAAQA,aAAcC,GAAtB,GAAsBA,eAAgBC,GAAtC,GAAsCA,OAC9BlF,MAAf,QASA,SAAS8E,GAAUM,GACjB,GAAIT,SAASC,OAAO/C,OAAS,EAAG,CAC9B,IAAIwD,EAAUV,SAASC,OAAOrB,QAAQ6B,EAAS,KAC/C,IAAiB,IAAbC,EAAgB,CAClBA,EAAUA,EAAUD,EAAOvD,OAAS,EACpC,IAAIyD,EAAQX,SAASC,OAAOrB,QAAQ,IAAK8B,GAIzC,OAHe,IAAXC,IACFA,EAAQX,SAASC,OAAO/C,QAEnB0D,SAASZ,SAASC,OAAOY,UAAUH,EAASC,KAGvD,MAAO,GAGF,I,GAAMG,GAAa,SAAC9E,GAAD,OAAsBA,EAAM+E,MAIzCC,IAHYtD,YAAe,CAACoD,KAAa,SAACC,GACrD,OAAOA,EAAKX,OAEe1C,YAAe,CAACoD,KAAa,SAACC,GACzD,MAAyB,KAAlBA,EAAKtB,UAAqC,KAAlBsB,EAAKtB,aCvE/B,SAASwB,GAAQtI,GACtB,IAAMuI,EAAUxH,EAAYsH,IAE5B,OACE,cAACtI,EAAD,2BAAeC,GAAf,aACE,cAACwI,GAAD,CAAQ9B,QAAS6B,EAAjB,SACE,6BACE,gCAOV,I,eAAMC,GAAS5H,IAAOC,IAAV,m+CACG,SAACb,GAAD,MAAW,CAACA,EAAM0G,QAAN,mBCTd+B,GAAmB,SAACC,GAC3BA,EAAKC,kBACPD,EAAKC,oBACID,EAAKE,qBACdF,EAAKE,uBACIF,EAAKG,wBACdH,EAAKG,wBAAwBC,QAAQC,sBAC5BL,EAAKM,qBACdN,EAAKM,uBAIIC,GAAiB,WACxB5B,SAAS6B,iBACX7B,SAAS6B,mBACA7B,SAAS8B,oBAClB9B,SAAS8B,sBACA9B,SAAS+B,uBAClB/B,SAAS+B,yBACA/B,SAASgC,kBAClBhC,SAASgC,oBCiCFC,GAA0C,CACnDC,SAAS,EACTC,SAAU,ICxDCC,GAAuB,SAClC9H,EACAC,GAIA,MAAO,CACLQ,IAH2DT,EAArDS,IAINC,MAJ2DV,EAAhDU,MAKXE,OAL2DZ,EAAzCY,OAMlBmH,UAN2D/H,EAAjC+H,UAO1BC,QAP2DhI,EAAtBiI,UAQrCpH,OAR2Db,EAAXa,OAShDjB,QARkBK,EAAZL,UAYJsI,GAAe,SACnBrH,EACAkH,EACArH,GAEAyB,QAAQC,IAAI,8BAA+BuF,GAAiBE,UAE5D,IAAIM,EAAM,GACV,OAAQtH,GACN,IAAK,UACH,IAAIuH,EAAML,EAAUM,MAAM,8CACtBC,EAAUF,EAAMA,EAAI,GAAK,GAC7BD,EAAG,kCAA8BG,EAA9B,iCAA8DX,GAAiBE,SAA/E,eACH,MACF,IAAK,SACHM,EAAG,2DAAuDzH,EAAvD,mBAAuEiH,GAAiBE,SAAxF,+BACH,MACF,QACE1F,QAAQoG,MAAM,2DAAe1H,GAGjC,OAAOsH,GAGHK,GAAgB,SACpB3H,EACAkH,EACArH,GAEAyB,QAAQC,IAAI,8BAA+BuF,GAAiBE,UAE5D,IAAIM,EAAM,GACV,OAAQtH,GACN,IAAK,UACH,IAAIuH,EAAML,EAAUM,MAAM,8CACtBC,EAAUF,EAAMA,EAAI,GAAK,GAC7BD,EAAG,wCAAoCG,EAApC,qCAAwEX,GAAiBE,SAAzF,iBACH,MACF,IAAK,SACHM,EAAG,gCAA4BzH,EAA5B,gDAAyEiH,GAAiBE,UAC7F,MACF,QACE1F,QAAQoG,MAAM,2DAAe1H,GAGjC,OAAOsH,GAyFIM,GAAsB,SACjC3G,EACAY,GAMA,OAJiBZ,EAEbA,EAAKU,QAAO,SAACkG,GAAD,OAAOA,EAAEjI,MAAQiC,EAAQjC,OAAKkI,OAAOjG,GADjD,CAACA,IAMMkG,GAAsB,SACjC9G,EACArB,GAIA,OAFiBqB,EAAYA,EAAKU,QAAO,SAACkG,GAAD,OAAOA,EAAEjI,MAAQA,KAAlC,IAKboI,GAAgB,SAC3BC,EACA7I,GAEA,IAAQ8I,EAAgB9I,EAAhB8I,MAAOC,EAAS/I,EAAT+I,EAAGC,EAAMhJ,EAANgJ,EAClB,OAAO,2BACFH,GADL,IAEEC,MAAOA,GAAS,MAChBC,IACAC,OAsEEC,GAAY,SAChBC,EACAC,EACAC,EACArJ,EACAsJ,EACAC,EACAC,GAEA,MAAO,CACLL,MACAC,MACAC,KACArJ,KACAsJ,KACAC,KACAC,aCvOEzI,GAAQC,YAAY,CACxBC,KAAM,UACNC,aAvBiC,CACjCuI,YAAa,GACbC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,OAAQ,CACNC,YAAa,EACbC,iBAAiB,EACjBC,UAAU,EACVC,cAAc,GAEhBC,WAAY,CACVV,SAAU,SACVT,MAAO,MACPoB,YAAa,EACbC,aAAc,EACdjB,IAAK,EACLC,IAAK,IAOP5H,SAAU,CACR6I,YAAa,SACX3I,EACAC,GAKA,IAAQE,EAAaF,EAAOC,QAApBC,SACgB,IAApBA,EAASe,SACXlB,EAAMgI,SAAW,GACjBhI,EAAMmI,OAAOC,YAAc,GAE7B,IAAMlG,EAAK,IAAIC,IACfnC,EAAMiI,SAAS5F,SAAQ,SAACtB,GAAD,OAAOmB,EAAGK,IAAIxB,EAAEhC,KAAK,MAO5C,IAAI6J,EAAQ,EACRC,EAAyB,GACzB7I,EAAM+H,YAAY7G,OAAS,IAC7B2H,EAAiB7I,EAAM+H,YAAY,GAAGhJ,KAIxC,IAAMiJ,EAA6B7H,EAASE,KAAI,SAAC/B,EAAIkC,GAOnD,OANIlC,EAAGS,MAAQ8J,IACbD,EAAQpI,EACRC,QAAQC,IAAI,uDAAoCkI,IAI9C1G,EAAG4G,IAAIxK,EAAGS,KACLqH,GAAqB9H,EAAI,CAAEJ,SAAS,IAEpCkI,GAAqB9H,EAAI,CAAEJ,SAAS,OAI/C8B,EAAM+H,YAAc,GACpB/H,EAAMgI,SAAWA,EACjBhI,EAAMmI,OAAOC,YAAcQ,EAAQ,GAErCG,UAAW,SACT/I,EACAC,GAKA,MAAkCA,EAAOC,QAAjC8I,EAAR,EAAQA,KAAMX,EAAd,EAAcA,gBACd5H,QAAQC,IAAR,2BACsBsI,EADtB,8BACgDX,IAEhDrI,EAAMmI,OAAOC,YAAcY,EAC3BhJ,EAAMmI,OAAOE,gBAAkBA,GAEjCY,gBAAiB,SACfjJ,EACAC,GAMID,EAAMiI,SAAS/G,OAAS,IAC1BT,QAAQC,IAAI,8BACZwI,OAAOC,cAAc,IAAIC,MAAM,YAGjCpJ,EAAMmI,OAAOG,SAAWrI,EAAOC,QAC/BO,QAAQC,IAAR,4BAAiCT,EAAOC,WAE1CmJ,cAAe,SACbrJ,EACAC,GAKIA,EAAOC,QACTkF,GAAiBpB,SAASsF,MAE1B1D,KAEF5F,EAAMmI,OAAOI,aAAetI,EAAOC,QACnCO,QAAQC,IAAR,gCAAqCT,EAAOC,WAE9CqJ,iBAAkB,SAChBvJ,EACAC,GAQA,MAAsCA,EAAOC,QAArCuI,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,aACfrB,EAAQrH,EAAMwI,WAAWnB,MAE/B,EDgI6B,SACjCmC,EACAC,EACApC,EACAqC,GAcA,IAZA,IAAIjH,EAA4B,CAC9BgF,IAAK,EACLC,IAAK,EACLC,GAAI,EACJrJ,GAAI,EACJsJ,GAAI,EACJC,GAAI,EACJC,SAAU,UAGR6B,EAAU,EAELnJ,EAAI,EAAGA,EAAIkJ,EAAO,EAAGlJ,IAAK,CACjC,IAAMoJ,EAASC,KAAKC,KAAKJ,EAAOlJ,GAE1BuJ,EAAQP,EAAKhJ,EACbwJ,EAAQP,EAAKG,EACfK,EAAW,EACXC,EAAW,EACXC,EAAW,EACXC,EAAW,EAGf,GAAIJ,EAnDmB,IAmDS,CAC9BG,EAAWJ,EAIXK,EAAWJ,GAHXE,EAAWL,KAAKQ,IAAIN,EAAQ1C,EAAO2C,EArDd,MA0DrB,IAAIM,EAAOJ,GAJXD,EAAWC,GAAY,EAAI7C,IAKvBiD,EAAOX,IACTA,EAAUW,EACV7H,EAAS+E,GACPhH,EACAoJ,EACAO,EACAC,EACAH,EACAC,EACA,WAGJzJ,QAAQC,IAAR,2BACsBF,EADtB,kBACiCoJ,EADjC,iBACgDK,EADhD,iBACiEC,EADjE,iBACkFC,EADlF,iBACmGC,EADnG,oBACuHE,EADvH,kBACqIX,IAKvI,GAAII,EA9EkB,IA8ES,CAC7BK,EAAWJ,EAIXG,EAAWJ,GAHXE,EAAWJ,KAAKQ,IAAIL,GAAS,EAAI3C,GAAQ0C,EAhFrB,MAqFpB,IAAIO,GAJJJ,EAAWD,EAAW5C,GAIA4C,EAClBK,EAAOX,IACTA,EAAUW,EACV7H,EAAS+E,GACPhH,EACAoJ,EACAO,EACAC,EACAH,EACAC,EACA,QAGJzJ,QAAQC,IAAR,wBACmBF,EADnB,kBAC8BoJ,EAD9B,iBAC6CK,EAD7C,iBAC8DC,EAD9D,iBAC+EC,EAD/E,iBACgGC,EADhG,oBACoHE,EADpH,kBACkIX,IAKpI,GAAIK,GAvGmB,KAuGYD,GAxGb,IAwGyC,CAG7DI,EAAW,EACXC,EAAW,EAEX,IAAIE,GALJJ,EAAWL,KAAKQ,IAAIN,EAAQ1C,EAAO2C,KACnCC,EAAWC,GAAY,EAAI7C,IAKvBiD,EAAOX,IACTA,EAAUW,EACV7H,EAAS+E,GACPhH,EACAoJ,EACAO,EACAC,EACAH,EACAC,EACA,WAGJzJ,QAAQC,IAAR,2BACsBF,EADtB,kBACiCoJ,EADjC,iBACgDK,EADhD,iBACiEC,EADjE,iBACkFC,EADlF,iBACmGC,EADnG,oBACuHE,EADvH,kBACqIX,KAKzI,OAAO,eAAKlH,GC1OuC8H,CAC7C9B,EACAC,EACArB,EAJmBrH,EAAMiI,SAAS/G,QAC5B4G,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,GAAIC,EAAtB,EAAsBA,GAAIF,EAA1B,EAA0BA,GAAIrJ,EAA9B,EAA8BA,GAAImJ,EAAlC,EAAkCA,IAAKC,EAAvC,EAAuCA,IAMvC,ED2E8B,SAClC8B,EACAC,EACAG,EACAY,EACAnD,GAEA,IACM2C,EADQR,EAAKgB,EACGnD,EAClBE,EAAIsC,KAAKQ,IAAIL,EAAOP,EAAKG,GAE7B,MAAO,CAAEtC,EADDC,GAAK,EAAIF,GACLE,KCtFoCkD,CAC1ChC,EACAC,EACAhB,EACAD,EACAJ,GALSqD,EAAX,EAAQpD,EAAmBqD,EAA3B,EAAwBpD,EAQpBqD,EAAgC,GAChCC,EAAkC,GAEtC7K,EAAMkI,SAAS7F,SAAQ,SAACyI,EAAStK,GAC/B,IAAMuK,EAAS/K,EAAMiI,SAASzH,GAC1BsK,EAAQE,UACVJ,EAAcxN,KAAK+J,GAAc4D,EAAQ,CAAEzD,EAAGM,EAAIL,EAAGM,KACrDgD,EAAezN,KAAK+J,GAAc2D,EAAS,CAAExD,EAAGK,EAAIJ,EAAGjJ,OAIvDsM,EAAcxN,KACZ+J,GAAc4D,EAAQ,CAAEzD,EAAGoD,EAAanD,EAAGoD,KAE7CE,EAAezN,KAAK+J,GAAc2D,EAAS,CAAExD,EAAG,EAAGC,EAAG,SAM1DvH,EAAMiI,SAAW2C,EACjB5K,EAAMkI,SAAW2C,EAEjB7K,EAAMwI,WAAa,CACjBV,WACAT,QACAoB,cACAC,eACAjB,MACAC,QAGJuD,eAAgB,SACdjL,EACAC,GAKA,IAAQmH,EAASnH,EAAOC,QAAhBkH,KACF8D,EDnIyB,SACnC5M,EACAC,GAEA,IAAQQ,EAAqDT,EAArDS,IAAKC,EAAgDV,EAAhDU,MAAOE,EAAyCZ,EAAzCY,OAAQqH,EAAiCjI,EAAjCiI,UAAWpH,EAAsBb,EAAtBa,OAAQkH,EAAc/H,EAAd+H,UACvCgB,EAAgB9I,EAAhB8I,MAAOC,EAAS/I,EAAT+I,EAAGC,EAAMhJ,EAANgJ,EAElB,MAAO,CACLxI,MACAsH,YACAI,IAAKD,GAAarH,EAAQkH,EAAWrH,GACrCA,QACAE,SACAoH,QAASC,EACTpH,SACAkI,MAAOA,GAAS,MAChBC,IACAC,KCkH0B4D,CAAsB/D,EAAM,CAClDE,EAAG,EACHC,EAAG,IAEC6D,EDlH0B,SACpC9M,EACAC,GAEA,IAAQQ,EAAqDT,EAArDS,IAAKC,EAAgDV,EAAhDU,MAAOE,EAAyCZ,EAAzCY,OAAQqH,EAAiCjI,EAAjCiI,UAAWpH,EAAsBb,EAAtBa,OAAQkH,EAAc/H,EAAd+H,UACvCgB,EAA0B9I,EAA1B8I,MAAOC,EAAmB/I,EAAnB+I,EAAGC,EAAgBhJ,EAAhBgJ,EAAGyD,EAAazM,EAAbyM,SAErB,MAAO,CACLjM,MACAsH,YACAI,IAAKK,GAAc3H,EAAQkH,EAAWrH,GACtCA,QACAE,SACAoH,QAASC,EACTpH,SACAkI,MAAOA,GAAS,MAChBC,IACAC,IACAyD,YCgG2BK,CAAuBjE,EAAM,CACpDE,EAAG,EACHC,EAAG,EACHyD,SAA0B,SAAhB5D,EAAKkE,SAEjBtL,EAAM+H,YAAc,CAACX,GACrBpH,EAAMiI,SAAW,CAACiD,GAClBlL,EAAMkI,SAAW,CAACkD,GAClBjO,GAAQC,KAAK,CAAEC,SAAU,cAE3BkO,uBAAwB,SACtBvL,EACAC,GAKA,IAAQmH,EAASnH,EAAOC,QAAhBkH,KACFpG,EAAuB,2BAAQoG,GAAR,IAAclJ,SAAS,IAC9CsN,EAAgCxL,EAAMgI,SAAS3H,KAAI,SAACoL,GAAD,OACvDA,EAAE1M,MAAQqI,EAAKrI,IAAMiC,EAAUyK,KAG3BC,EAA8B3E,GAClC/G,EAAMiI,SDpHoB,SAChCb,EACA7I,GAEA,IAAQQ,EAAmDqI,EAAnDrI,IAAKC,EAA8CoI,EAA9CpI,MAAOE,EAAuCkI,EAAvClI,OAAQoH,EAA+Bc,EAA/Bd,QAASnH,EAAsBiI,EAAtBjI,OAAQkH,EAAce,EAAdf,UACrCgB,EAAgB9I,EAAhB8I,MAAOC,EAAS/I,EAAT+I,EAAGC,EAAMhJ,EAANgJ,EAElB,MAAO,CACLxI,MACAsH,YACAI,IAAKD,GAAarH,EAAQkH,EAAWrH,GACrCA,QACAE,SACAoH,UACAnH,SACAkI,MAAOA,GAAS,MAChBC,IACAC,KCoGIoE,CAAmB3K,EAAS,CAAEsG,EAAG,EAAGC,EAAG,KAGnCqE,EAA+B7E,GACnC/G,EAAMkI,SDpGqB,SACjCd,EACA7I,GAEA,IAAQQ,EAAmDqI,EAAnDrI,IAAKC,EAA8CoI,EAA9CpI,MAAOE,EAAuCkI,EAAvClI,OAAQoH,EAA+Bc,EAA/Bd,QAASnH,EAAsBiI,EAAtBjI,OAAQkH,EAAce,EAAdf,UACrCgB,EAA0B9I,EAA1B8I,MAAOC,EAAmB/I,EAAnB+I,EAAGC,EAAgBhJ,EAAhBgJ,EAAGyD,EAAazM,EAAbyM,SAErB,MAAO,CACLjM,MACAsH,YACAI,IAAKK,GAAc3H,EAAQkH,EAAWrH,GACtCA,QACAE,SACAoH,UACAnH,SACAkI,MAAOA,GAAS,MAChBC,IACAC,IACAyD,YCmFIa,CAAoB7K,EAAS,CAAEsG,EAAG,EAAGC,EAAG,EAAGyD,UAAU,KAGvDhL,EAAMgI,SAAWwD,EACjBxL,EAAMiI,SAAWyD,EACjB1L,EAAMkI,SAAW0D,EAEb5L,EAAMiI,SAAS/G,OAAS,IAC1BT,QAAQC,IAAI,0CACZwI,OAAOC,cAAc,IAAIC,MAAM,aAGnC0C,yBAA0B,SACxB9L,EACAC,GAKA,IAAQmH,EAASnH,EAAOC,QAAhBkH,KACFpG,EAAuB,2BAAQoG,GAAR,IAAclJ,SAAS,IAC9CsN,EAAgCxL,EAAMgI,SAAS3H,KAAI,SAACoL,GAAD,OACvDA,EAAE1M,MAAQqI,EAAKrI,IAAMiC,EAAUyK,KAEjCzL,EAAMgI,SAAWwD,EACjBxL,EAAMiI,SAAWf,GAAoBlH,EAAMiI,SAAUb,EAAKrI,KAC1DiB,EAAMkI,SAAWhB,GAAoBlH,EAAMkI,SAAUd,EAAKrI,KAEtDiB,EAAMiI,SAAS/G,OAAS,IAC1BT,QAAQC,IAAI,4CACZwI,OAAOC,cAAc,IAAIC,MAAM,aAGnC2C,kBAAmB,SACjB/L,EACAC,GAKA,IAAQlB,EAAQkB,EAAOC,QAAfnB,IAGJiB,EAAMgI,SAAS9G,OAAS,IAC1BlB,EAAMgI,SAAWhI,EAAMgI,SAAS3H,KAAI,SAACoL,GAAD,OAClCA,EAAE1M,MAAQA,EAAV,2BAAqB0M,GAArB,IAAwBvN,SAAS,IAAUuN,MAI/CzL,EAAMiI,SAAWf,GAAoBlH,EAAMiI,SAAUlJ,GACrDiB,EAAMkI,SAAWhB,GAAoBlH,EAAMkI,SAAUnJ,GAEjDiB,EAAMiI,SAAS/G,OAAS,IAC1BT,QAAQC,IAAI,qCACZwI,OAAOC,cAAc,IAAIC,MAAM,aAGnC4C,mBAAoB,SAClBhM,EACAC,GAKA,IAAQlB,EAAQkB,EAAOC,QAAfnB,IAGRiB,EAAMkI,SAAWlI,EAAMkI,SAAS7H,KAAI,SAAC4L,GAAD,OAClCA,EAAElN,MAAQA,EAAV,2BAAqBkN,GAArB,IAAwBjB,UAAWiB,EAAEjB,WAAaiB,KAGhDjM,EAAMiI,SAAS/G,OAAS,IAC1BT,QAAQC,IAAI,sCACZwI,OAAOC,cAAc,IAAIC,MAAM,gBAMhC,GAWH/J,GAAMiC,QAVRqH,GADK,GACLA,YACAI,GAFK,GAELA,UACAE,GAHK,GAGLA,gBACAI,GAJK,GAILA,cACAE,GALK,GAKLA,iBACA0B,GANK,GAMLA,eACAM,GAPK,GAOLA,uBACAO,GARK,GAQLA,yBACAC,GATK,GASLA,kBACAC,GAVK,GAULA,mBAEa3M,MAAf,QAEa6M,GAAgB,SAAClM,GAAD,OAAoCA,EAAMmM,SAC1DC,GAAiB1K,YAC5B,CAACwK,KACD,SAACC,GAAD,OAAaA,EAAQnE,YAMVqE,IAJiB3K,YAC5B,CAACwK,KACD,SAACC,GAAD,OAAaA,EAAQlE,YAEQvG,YAAe,CAACwK,KAAgB,SAACC,GAK9D,IAJA,IAAMlE,EAAWkE,EAAQlE,SACnBC,EAAWiE,EAAQjE,SACnBnF,EAAMkF,EAAS/G,OACfuB,EAAS,GACNjC,EAAI,EAAGA,EAAIuC,EAAKvC,IACvBiC,EAAOrF,KAAK,CAAE2N,OAAQ9C,EAASzH,GAAIsK,QAAS5C,EAAS1H,KAEvD,OAAOiC,MAEI6J,GAAmB5K,YAC9B,CAACwK,KACD,SAACC,GAAD,OAAaA,EAAQ3D,cAEV+D,GAAe7K,YAC1B,CAACwK,KACD,SAACC,GAAD,OAAaA,EAAQhE,UAEVqE,GAAsB9K,YACjC,CAAC0K,KACD,SAACpE,GAAD,OAAcA,EAAS9G,UAEZuL,GAAuB/K,YAClC,CAAC0K,KACD,SAACpE,GAAD,OACEA,EAAS9G,OAAS,EAAlB,CACK8G,EAASA,EAAS9G,OAAS,IADhC,mBACuC8G,GADvC,CACiDA,EAAS,KACtD,MC1WO,SAAS0E,KACtB,MAAgCC,oBAAS,GAAzC,mBAAO3B,EAAP,KAAiB4B,EAAjB,KACQtE,EAAa5K,EAAY6O,IAAzBjE,SAEFvL,EAAY,WAChB6P,GAAa5B,IAGf,OACE,cAAC,GAAD,UACE,eAAC6B,GAAD,CAAKvE,SAAUA,EAAf,UACE,cAACwE,GAAD,UACE,2CAEF,eAACC,GAAD,CAAM/B,SAAUA,EAAhB,UACE,cAACgC,GAAD,CAAc9P,QAASH,EAAvB,SACE,8BACE,cAAC,IAAD,QAGJ,+BACE,cAACiQ,GAAD,CAAc9P,QAASH,EAAvB,SACE,8BACE,cAAC,IAAD,QAGJ,cAACU,EAAD,2BAAgBwP,GAAY,IAA5B,IAAgClQ,UAAWA,KAC3C,cAACuG,EAAD,2BAAgB2J,GAAY,IAA5B,IAAgClQ,UAAWA,KAC3C,cAACkI,GAAD,2BAAagI,GAAY,IAAzB,IAA6BlQ,UAAWA,KACxC,cAACmG,EAAD,2BAAoB+J,GAAY,IAAhC,IAAoClQ,UAAWA,gBAQ3D,I,iCAAMkQ,GAA8B,CAClC,CACErQ,MAAO,eACPC,KAAM,aACNC,KAAM,cAAC,IAAD,KAER,CACEF,MAAO,eACPC,KAAM,YACNC,KAAM,cAAC,IAAD,KAER,CACEF,MAAO,eACPC,KAAM,UACNC,KAAM,cAAC,IAAD,KAER,CACEF,MAAO,eACPC,KAAM,UACNC,KAAM,cAAC,IAAD,MAIJG,GAAYM,IAAOC,IAAV,mTAYTqP,GAAMtP,IAAO2P,IAAV,kLAEA,SAAAnM,GAAC,OAAEA,EAAEuH,SAAF,iBAONwE,GAAOvP,IAAOC,IAAV,ygBAuBJuP,GAAOxP,IAAO4P,GAAV,80BA6BS,SAACxQ,GAAD,OACXA,EAAMqO,SAAN,wCAMFgC,GAAezP,IAAOC,IAAV,ukBC3IX,SAAS4P,GAAYzQ,GAC1B,IACEuC,EAcEvC,EAdFuC,OAEAH,EAYEpC,EAZFoC,IACAE,EAWEtC,EAXFsC,MACAqM,EAUE3O,EAVF2O,OAEA/E,EAQE5J,EARF4J,UACA3J,EAOED,EAPFC,MACAyQ,EAME1Q,EANF0Q,UACAC,EAKE3Q,EALF2Q,UAGOC,EAEL5Q,EAFF6B,MACAC,EACE9B,EADF8B,MAEI2I,EAAOzK,EACb,EAAkCgQ,oBAAS,GAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACMC,EAAMC,iBAAuB,MAE7BC,EAAeC,GAAgBvC,GAC/BwC,EAAcC,GAAczC,EAAQ7M,GACpCuP,EAAgBC,GAAgBlP,EAAKuM,EAAQ/E,EAAWiH,GAExDU,EAAWtQ,IAiDjB,OAlBAuQ,qBAAU,WACR,IAAMC,EAAYV,EAAI7N,QAChBwO,EAAW,IAAIC,sBAAqB,YAAc,IAAZC,EAAW,oBACrDd,EAAac,EAAMC,mBAKrB,OAHIJ,GACFC,EAASI,QAAQL,GAEZ,WACDA,GACFC,EAASK,UAAUN,GAErBC,EAASM,gBAEV,CAACjB,EAAKF,IAKP,eAAC,GAAD,CAAWE,IAAKA,EAAhB,UACE,eAACkB,GAAD,2BAAehB,GAAf,cACE,qBAAKnH,IAAK+G,EAAYtO,OAASsF,EAAWqK,IAAK,UAAY9P,IAC3D,8BACE,6BAAKuM,UAGT,cAACwD,GAAD,yBAAiB5R,QAhDU,WAC7B,IAAMyB,EAAsB,2BAAQhC,GAAR,IAAe8B,OAAQA,IAEjDyP,EADgB,kBAAdX,EAEAnM,EAAgB,CACdvB,QAAQ,2BAAMlD,GAAP,IAAc8B,OAAQA,MAK/BmC,EAAe,CACbjC,OACAJ,QAAS,CACPK,WAAW,EACXC,WAAY0O,IAAcvP,EAC1Bc,WAAW,QAiCqCgP,GAAtD,aACGA,EAAYhR,QAEf,eAACiS,GAAD,WACE,cAACC,GAAD,2BAAgBhB,GAAhB,IAA+B9Q,QA3DV,WAEV,YAAXoO,GAAmC,UAAXA,GAC1B4C,EAASjD,GAAe,CAAE7D,WAwDxB,SACG4G,EAAciB,SAEjB,eAACC,GAAD,WACE,cAACC,GAAD,UACE,6BAAKlQ,MAEP,cAACmQ,GAAD,UACE,4BAAIxS,MAEN,eAACyS,GAAD,WACE,eAACC,GAAD,WACE,cAAC,IAAD,IACA,4BAAIjC,OAEN,eAACkC,GAAD,WACE,cAAC,IAAD,IACA,4BAAe,SAAXjE,EAAoB,qBAAQgC,mBAS9C,I,GAAMrQ,GAAYM,IAAOC,IAAV,6SAsBTqQ,GAAkB,SAACvC,GACvB,OAAQA,GACN,IAAK,OACH,MAAO,CACLkE,UAAW,OACXC,YAAa,UACbC,YAAa,OACbC,UAAU,GAEd,IAAK,OACH,MAAO,CACLH,UAAW,OACXC,YAAa,UACbC,YAAa,UACbC,UAAU,GAEd,IAAK,MACH,MAAO,CACLH,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,UAAU,GAEd,QACE,MAAO,CACLH,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,UAAU,KAKZf,GAAYrR,IAAOC,IAAV,ilBACF,SAACuD,GAAD,OAAQA,EAAE4O,SAAF,mBAOG,SAAC5O,GAAD,OAAOA,EAAE0O,eAclB,SAAC1O,GAAD,OAAOA,EAAEyO,aACE,SAACzO,GAAD,OAAOA,EAAE0O,eAetB1B,GAAgB,SAC3BzC,EACA7M,GAEA,OAAQ6M,GACN,IAAK,UACL,IAAK,QACH,MAAO,CACLsE,MAAO,GACPC,WAAY,GACZ/S,KAAM,KACNgT,UAAU,GAEd,QACE,OAAiB,IAAVrR,EACH,CACEmR,MAAO,UACPC,WAAY,UACZ/S,KAAM,cAAC,IAAD,IACNgT,UAAU,GAEZ,CACEF,MAAO,OACPC,WAAY,UACZ/S,KAAM,cAAC,IAAD,IACNgT,UAAU,KAKhBhB,GAAkBvR,IAAOC,IAAV,maACR,SAACuD,GAAD,OAAQA,EAAE+O,SAAF,mBAgBR,SAAC/O,GAAD,OAAOA,EAAE6O,SAOP,SAAC7O,GAAD,OAAOA,EAAE8O,cAKlBd,GAAWxR,IAAOC,IAAV,mHAURyQ,GAAkB,SACtBlP,EACAuM,EACA/E,EACAiH,GAEA,OAAQlC,GACN,IAAK,UACH,MAAO,CACLyE,WAAW,EACXd,MACE,gCACE,cAAC,IAAD,IACA,kGAIR,IAAK,QACH,MAAO,CACLc,WAAW,EACXd,MACE,gCACE,cAAC,IAAD,IACA,yFACA,gGACA,2DACA,yEAIR,QACE,MAAO,CACLc,WAAW,EACXd,MACE,8BACE,qBACExI,IAAK+G,EAAYjH,OAAY/B,EAC7BqK,IAAK,aAAe9P,SAO5BiQ,GAAazR,IAAOyS,EAAV,66BAKJ,SAACjP,GAAD,OAAQA,EAAEgP,UAAF,oBAwCdb,GAAc3R,IAAOC,IAAV,sPAYX2R,GAAQ5R,IAAOC,IAAV,maAqBL4R,GAAU7R,IAAOC,IAAV,8YAmBP6R,GAAS9R,IAAOC,IAAV,ibAsBN8R,GAAO/R,IAAOC,IAAV,4NAgBJ+R,GAAQhS,IAAOC,IAAV,kMCrcI,SAASyS,GAAUtT,GAChC,IAAQ4Q,EAAc5Q,EAAd4Q,UACR,OACE,cAAC,GAAD,2BAAe5Q,GAAf,aACE,+BAAO4Q,OAKb,I,GAAMtQ,GAAYM,IAAO2S,GAAV,+xBACE,SAACnP,GAAD,OAAOA,EAAEoP,WAAF,UACR,SAACpP,GAAD,OAAOA,EAAEqP,UAAF,UAKR,SAACrP,GAAD,OAAOA,EAAEsP,YCpBjB,SAASC,GAAkB3T,GAIhC,IAAQsE,EAAqBtE,EAArBsE,MAAOsM,EAAc5Q,EAAd4Q,UAEf,OACE,qCACE,cAAC0C,GAAD,CACE1C,UAAWA,EACX8C,SAAU,OACVF,UAAW,oBACXC,SAAU,SAEZ,cAACG,GAAD,UACGtP,EAAMZ,KAAI,SAAC/B,GAAD,OACT,cAAC8O,GAAD,2BAEM9O,GAFN,IAGEE,MAAO+O,IAHT,sBACsBjP,EAAGS,UAHF,wBAA0BwO,MAa3D,IAAMgD,GAAuBhT,IAAOC,IAAV,+bCvBnB,SAASgT,KACd,MAA4B9S,EAAY6D,GAAhC/C,EAAR,EAAQA,MACFiS,EADN,EAAe/Q,SACOoB,QAAO,SAAC4P,GAAD,OAAe,OAAPA,KAErC,OACE,mCACGD,EAAKpQ,KAAI,SAACY,EAAOT,GAAR,OAERmQ,GAAqB1P,EAAOzC,EAAMgC,SAM1C,I,GAAMmQ,GAAuB,SAC3B1P,EACAsM,GAOA,OAAqB,IAAjBtM,EAAMC,OACD,cAAC,WAAD,GAAe,qBAAuBqM,GAG3C,cAAC+C,GAAD,CAEErP,MAAOA,EACPsM,UAAWA,GAFN,qBAAuBA,ICjCrB,SAASqD,GAAUjU,GAEhC,IAAQkU,EAAUlU,EAAVkU,MACR,EAAgClE,oBAAS,GAAzC,mBAAO3B,EAAP,KAAiB4B,EAAjB,KACMkE,EAAcnD,iBAAyB,MAYvCoD,EAAS,WACc,MAAvBD,EAAYjR,QACdlD,EAAMqU,SAASF,EAAYjR,QAAQoR,OAEnCxQ,QAAQoG,MAAM,mCAYlB,OACE,eAAC,GAAD,2BAAegK,GAAf,IAAsB7F,SAAUA,EAAhC,UACE,uBACEkG,SAXW,WACXJ,EAAYjR,SAAyC,KAA9BiR,EAAYjR,QAAQoR,MAC7CrE,GAAY,GAEZA,GAAY,IAQVuE,QA7Bc,SAAC1F,GACD,KAAdA,EAAE2F,SAKNL,KAwBIM,KAAK,OACL9R,KAAK,GACL+R,GAAG,GACHC,YAAY,iHACZ7D,IAAKoD,IAEP,wBAAQ5T,QAAS6T,EAAjB,SACE,cAAC,IAAD,CAAoBS,MAAO,CAAEC,SAAU,kBAgBxC,I,SAAMxU,GAAYM,IAAOC,IAAV,stCAQL,SAACb,GAAD,OAAWA,EAAM+U,WAAa,aAC7B,SAAC/U,GAAD,OAAWA,EAAMgV,YAAc,UAEtC,SAAC5Q,GAAD,OAAQA,EAAEiK,SAAF,yBAgBJ,SAACjK,GAAD,OAAQA,EAAEiK,SAAF,kBACV,SAACjK,GAAD,OAAQA,EAAEiK,SAAF,cAUG,SAACjK,GAAD,OACpBA,EAAEiK,SAAF,wC,mBC9FS4G,GACX,SAACnO,EAAkBC,EAAc9D,GAAjC,OAAoD,SAACsO,GAEnD,GAAoB,IAAhBtO,EAAKsB,OAMT,GAAgB,KAAZtB,EAAK,GAAT,CAKA,IAAMiS,EAAU,IAAIC,SACpBD,EAAQE,OAAO,WAAYtO,GAC3BoO,EAAQE,OAAO,OAAQrO,GACvBmO,EAAQE,OAAO,OAAQC,KAAKC,UAAUrS,IAEtCa,QAAQC,IAAI,8BAA+B,CAACd,IAC5CsS,KAAMC,KAAN,UAAcrU,EAAd,cAA0C+T,GAASO,MACjD,SAACC,GACC5R,QAAQC,IAAI,kDAAgB2R,EAASC,MACrC,IAAMnS,EAA6BkS,EAASC,KAAT,SAC7B9T,EAAkB6T,EAASC,KAAT,MAClBlS,EAAoBiS,EAASC,KAAT,KAKL,IAAjB9T,EAAM0C,QAAoC,IAApBf,EAASe,OAEjCgN,EACEnO,EAAS,CACPI,SAAS,CAAE,IAAH,mBAAUA,IAClB3B,MAAO,CAACT,EAA0BC,GAClC4B,OACAQ,UAKJ8N,EACEnO,EAAS,CACPI,WACA3B,MAAOA,EAAMyI,OAAOjJ,GACpB4B,OACAQ,aAKR,SAACyG,GACCpG,QAAQC,IAAI,kDAAgBmG,WA3C9BpG,QAAQoG,MAAM,yGANdpG,QAAQoG,MAAM,kFCPP0L,GACX,SAAC9O,EAAkBC,EAAc8O,EAAkB5S,GAAnD,OACA,SAACsO,GACC,IAAMuE,EAAW,IAAIX,SACrBW,EAASV,OAAO,WAAYtO,GAC5BgP,EAASV,OAAO,OAAQrO,GACxB+O,EAASV,OAAO,QAASC,KAAKC,UAAL,eAAoBO,KAC7CN,KAAMC,KAAN,UAAcrU,EAAd,iBAA6C2U,GAAUL,MACrD,SAACM,GACCjS,QAAQC,IAAI,qDAAwBgS,EAAKJ,MACzC,IAAMK,EAAeD,EAAKJ,KAAL,KAEflO,EAAcsO,EAAKJ,KAAL,IACP,YAATK,EACFlS,QAAQC,IAAI,kDAA0B0D,GAItC3D,QAAQC,IAAI,kDAA0B0D,GAExCwO,YAAW,kBACR,SAAUnP,EAAUC,EAAM9D,GACzBsO,EAAS0D,GAAiBnO,EAAUC,EAAM9D,IAC1CzC,GAAQC,KAAK,CAAEC,SAAU,eAF1B,CAGEoG,EAAUC,EAAM9D,SAGvB,SAACiT,GACCpS,QAAQC,IAAI,uEAA2BmS,QC5BxC,SAASC,KACd,MAA2BpV,EAAYoH,IAA/BrB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KACZwK,EAAWtQ,IAiBjB,OACE,cAACgT,GAAD,CACEI,SAjBa,SAAC+B,GCJY,IAACC,EDKb,KAAZD,GAQF7E,EANY,QAAZ6E,GACY,SAAZA,GACY,SAAZA,GACY,QAAZA,GACY,YAAZA,EAESnB,GAAiBnO,EAAUC,EAAM,CAACqP,KCbhBC,EDeDD,ECfiB,SAAC7E,GAChD,IAAMuE,EAAW,IAAIX,SACrBW,EAASV,OAAO,MAAOiB,GACvBd,KAAMC,KAAN,UAAcrU,EAAd,oBAAgD2U,GAAUL,MACxD,SAACM,GACCjS,QAAQC,IAAI,gEAA8BgS,EAAKJ,MAC/C,IAAMK,EAAeD,EAAKJ,KAAL,KACfhU,EAAmBoU,EAAKJ,KAAL,SAAsB,GAE/C,OAAQK,GACN,IAAK,UACHlS,QAAQC,IAAR,+CAAsBpC,EAAGU,MAAzB,QACAkP,EACE9M,EAAgB,CACdvB,QAASxB,EAAkBC,EAAI,CAC7BE,MAAO,gBACPC,OAAO,OAIb,MACF,IAAK,UACHgC,QAAQC,IAAR,mCACUpC,EAAGU,MADb,wJAGAkP,EACE9M,EAAgB,CACdvB,QAASxB,EAAkB,2BACpBC,GADmB,IACfgN,OAAQ,YACjB,CACE9M,MAAO,gBACPC,OAAO,OAKf,MACF,QACEgC,QAAQC,IAAI,0HACZD,QAAQC,IAAI,uDACZD,QAAQC,IAAI,4CACZwN,EACE9M,EAAgB,CACdvB,QAASxB,EAAkB,2BACpBC,GADmB,IACfgN,OAAQ,UACjB,CACE9M,MAAO,eACPC,OAAO,WAQrB,SAACoU,GACCpS,QAAQC,IAAI,kDAAgBmS,UDlC5BhC,MAAO,CAAEc,WAAY,UAAWD,UAAW,aE1BlC,SAASuB,GAAUtW,GAChC,IAAQuB,EAA4BvB,EAA5BuB,QAASC,EAAmBxB,EAAnBwB,QAAS0S,EAAUlU,EAAVkU,MAM1B,OACE,eAAC,GAAD,2BAAeA,GAAf,cACE,cAACqC,GAAD,CACE7B,KAAK,WACLC,GAAInT,GAAW,GACfjB,QATc,WAClBP,EAAMwW,kBAAkB,CAAEC,IAAKjV,EAASkV,WAAYnV,OAUlD,cAACoV,GAAD,CAAYpV,QAASA,QAkB3B,I,GAAMjB,GAAYM,IAAOgW,MAAV,2OAII,SAAC5W,GAAD,OAAWA,EAAM6W,aAAe,UACjC,SAAC7W,GAAD,OAAWA,EAAMyB,YAAc,aAChC,SAACzB,GAAD,OAAWA,EAAM8W,WAAa,UAKzCH,GAAa/V,IAAOC,IAAV,uqBAMA,SAACb,GAAD,OACZA,EAAMuB,QAAN,4CAea,SAACvB,GAAD,OACXA,EAAMuB,QAAN,uCAKAgV,GAAqB3V,IAAOmW,MAAV,gDCjEjB,SAASC,KACd,MAA2BjW,EAAYoH,IAA/BrB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KACZ9D,EAAOlC,EAAYkE,GACnBsM,EAAWtQ,IACjB6C,QAAQC,IAAI,CAAEd,SAEd,IAAMuT,EAAoB,SAAClT,GACzB,IAAQmT,EAAmBnT,EAAnBmT,IACR,GAD2BnT,EAAdoT,UAENzT,EAAKgU,SAASR,IACjBlF,EAAS0D,GAAiBnO,EAAUC,EAAX,sBAAqB9D,GAArB,CAA2BwT,UAEjD,CACL,IAAMS,EAAUjU,EAAKkB,QAAO,SAACgT,GAAD,OAAUA,IAASV,KAC/ClF,EAAS0D,GAAiBnO,EAAUC,EAAMmQ,MAI9C,OACE,mCACG5V,EAAaoC,KAAI,SAAC+S,EAAKW,GACtB,IAAQ5V,EAAwBiV,EAAxBjV,QAASC,EAAegV,EAAfhV,WACXF,EAAU0B,EAAKgD,QAAQzE,IAAY,EACzC,OACE,eAAC6V,GAAD,WACE,4BAAI7V,IACJ,cAAC8U,GAAD,CACE9U,QAASA,EACTD,QAASA,EACT2S,MAAO,CAAEzS,cACT+U,kBAAmBA,MANJ,gBAAkBhV,QAe/C,I,eAAM6V,GAAezW,IAAOC,IAAV,kPCzCX,SAASyW,GAAYtX,GAC1B,IACOuX,EAOHvX,EAPFoC,IACOwO,EAML5Q,EANF6B,MACAS,EAKEtC,EALFsC,MACAD,EAIErC,EAJFqC,MACAE,EAGEvC,EAHFuC,OACAJ,EAEEnC,EAFFmC,UACAD,EACElC,EADFkC,WAEF,EAAqCnB,EAAY6D,GAA5BnB,EAArB,EAAQT,YAAmBnB,EAA3B,EAA2BA,MAErB0P,EAAWtQ,IAEXuW,EAAgB,SAACnT,GACrB,IAAMoT,EAAUhU,EAAKU,QACnB,SAACsG,GAAD,OAAuBA,EAAKrI,MAAQiC,EAAQjC,OAE9C,MAAM,CAAEiC,GAAR,mBAAoBoT,KAGhBC,EAAiB,SAACrT,GACtB,IAAMoT,EAAUhU,EAAKC,KAAI,SAAC+G,GAAD,OACvBA,EAAKrI,MAAQiC,EAAQjC,IAAMqI,EAAOpG,KAEpC,OAAO,YAAIoT,IAwEb,OACE,eAAC,GAAD,WACE,cAACE,GAAD,UACE,qBAAK7N,IAAKvH,EAAQ2P,IAAG,UAAK7P,EAAL,iBAEvB,cAACuV,GAAD,CAAWzV,UAAWA,EAAWD,WAAYA,EAA7C,SACE,uBAAOV,QAAS+V,EAAhB,SAAsBjV,MAExB,eAACuV,GAAD,WACE,eAACC,GAAD,CAAQvX,QA9EU,WAEtB,IAAMwX,EAAexL,OAAOyL,OAAO,+CAAapH,GAEhD,GAAoB,MAAhBmH,EAGJ,GAAqB,KAAjBA,GAMJ,GAAIA,IAAiBnH,EAAW,CAE9B,IAAM6G,EAAyBD,EAAc,2BACxCxX,GADuC,IAE1CiC,WAAW,EACXJ,MAAOkW,KAGHtS,EAAkB,CACtBsS,GADsB,mBAEnBlW,EAAMsC,QAAO,SAAC8T,GAAD,OAAeA,IAAMF,OAEvCxG,EAAS/M,EAAe,CAAE3C,MAAO4D,EAAUhC,KAAMgU,WAjBjDS,MAAM,yCAsEJ,UACE,cAAC,IAAD,IACA,4BAAI5V,OAEN,eAACwV,GAAD,CAAQvX,QArDS,WACrB,IAAI4X,EAAW5L,OAAOyL,OAAO,sDAAe1V,GAC5C,GAAgB,MAAZ6V,EAGJ,GAAiB,KAAbA,EAAJ,CAIA,IAAMV,EAAUD,EAAc,2BACzBxX,GADwB,IAE3BiC,WAAW,EACXK,MAAO6V,KAET5G,EAAS/M,EAAe,CAAEf,KAAMgU,EAAS5V,MAAO,aAR9CqW,MAAM,yCA+CJ,UACE,cAAC,IAAD,IACA,4BAAI5V,OAELH,EACC,eAAC2V,GAAD,CAAQvX,QA3BK,WACnB,IAAMkX,EAAUC,EAAe,2BAC1B1X,GADyB,IAE5BmC,WAAW,EACXN,MAAO+O,KAETW,EAAS/M,EAAe,CAAEf,KAAMgU,EAAS5V,MAAO,SAqB1C,UACE,cAAC,IAAD,IACA,4BAAIS,OAGN,eAACwV,GAAD,CAAQvX,QA9CS,WAEvB,GADSgM,OAAO6L,QAAP,qDAA0B9V,EAA1B,cACT,CACE,IAAMmV,EAAUC,EAAe,2BAC1B1X,GADyB,IAE5BmC,WAAW,EACXN,MAAO+O,KAETW,EAAS/M,EAAe,CAAEf,KAAMgU,EAAS5V,MAAO,UAsC5C,UACE,cAAC,IAAD,IACA,4BAAIS,aAOhB,I,GAAMhC,GAAYM,IAAOC,IAAV,kSAaT8W,GAAS/W,IAAOC,IAAV,wVAmBN+W,GAAYhX,IAAOC,IAAV,wNAMJ,SAACuD,GAAD,OAAQA,EAAElC,WAAF,OAAwBkC,EAAEjC,UAAF,iBAEpB,SAACiC,GAAD,OAAQA,EAAEjC,UAAF,yBAIzB0V,GAAcjX,IAAOC,IAAV,wEAIXiX,GAASlX,IAAOC,IAAV,wQC9KL,SAASwX,GAAkBrY,GAIhC,IAAM4Q,EAAY5Q,EAAM4Q,WAAaxP,EAkBrC,OACE,qCACE,cAACkS,GAAD,CACE1C,UAAWA,EACX8C,SAAU,OACVF,UAAW,oBACXC,SAAU,YAEZ,cAAC6E,GAAD,UACGtY,EAAMuY,MAAM7U,KAAI,SAAC+G,GAAD,OACf,6BACE,cAAC6M,GAAD,eAAiB7M,KADV,eAAiBA,EAAKrI,aASzC,I,SAAMkW,GAAU1X,IAAO4P,GAAV,mFC7BN,SAASgI,KACd,MAA2BzX,EAAYoH,IAA/BrB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KACZwB,EAAmBxH,EAAYsH,IAC/BlC,EAAyBpF,EAAYmF,GACrCuS,EAA+BC,GAAcnQ,EAASpC,GACtDwS,EAA+B5X,EAAY8E,GAC3ChE,EAAQd,EAAYmE,GACpB2Q,EAAmB9U,EAAYsE,GAC/BpC,EAAiBlC,EAAYkE,GAE7BsM,EAAWtQ,IAmBjB,OAJA2X,2BAAgB,WACd,OAAO,eACN,IAGD,eAACC,GAAD,WACE,cAACC,GAAD,2BAAYL,GAAZ,aACE,sBAAKlY,QApBc,WAClBgI,EAGMpC,EAEToL,EAASqE,GAAe9O,EAAUC,EAAM8O,EAAO5S,IAG/CzC,GAAQuY,SANRvY,GAAQC,KAAK,CAAEC,SAAU,aAiBvB,UACG+X,EAAYtY,KACb,4BAAIsY,EAAYO,aAGpB,cAAC,GAAD,UACGL,EAAYjV,KAAI,SAAC6U,EAAsB1U,GAGtC,IAAM+M,EAAY/O,EAAMgC,GACxB,OAAO0U,EAAMhU,OAAS,EACpB,cAAC8T,GAAD,CAEEE,MAAOA,EACP3H,UAAWA,GAFN,mBAAqBA,GAK5B,cAAC,WAAD,GAAe,mBAAqBA,WAQhD,I,MAAMiI,GAAkBjY,IAAOC,IAAV,8bAuBf6X,GAAgB,SACpBnQ,EACAtG,GAGA,OAAKsG,EAODtG,EAEK,CACL+W,KAAM,2BACN7Y,KAAM,cAAC,IAAD,KAID,CACL6Y,KAAM,2BACN7Y,KAAM,cAAC,IAAD,KAfD,CACL6Y,KAAM,2BACN7Y,KAAM,cAAC,IAAD,MAkBN2Y,GAASlY,IAAOC,IAAV,49BAoDNyX,GAAU1X,IAAOC,IAAV,qDC/JE,SAASoY,KAEtB,IAAM7Q,EAAOrH,EAAYoH,IACnBlF,EAAOlC,EAAYkE,GACnBkB,EAAgBpF,EAAYmF,GAC5BlD,EAAcjC,EAAYoE,GAC1BoM,EAAWtQ,IAejB,OAbA2X,2BAAgB,WACd,GAAIzS,EAAe,CAEjB,IAAQW,EAAmBsB,EAAnBtB,SAAUC,EAASqB,EAATrB,KAClBwK,ECrBJ,SAACzK,EAAkBC,EAAcmS,EAAwBjW,GAAzD,OACA,SAACsO,GACC,IAAMuE,EAAW,IAAIX,SACrBW,EAASV,OAAO,WAAYtO,GAC5BgP,EAASV,OAAO,OAAQrO,GACxBwO,KAAMC,KAAN,UAAcrU,EAAd,eAA2C2U,GAAUL,MACnD,SAACM,GACCjS,QAAQC,IAAI,uEAA2BgS,EAAKJ,MAC5C,IAAMK,EAAeD,EAAKJ,KAAL,KACfE,EAAmBE,EAAKJ,KAAL,MAKzB,GAAa,YAATK,GAAsBH,EAAMpS,KAAM,CAEpC,IAAM5B,EAAQgU,EAAMhU,MAAMoV,SAAS7V,GAC/ByU,EAAMhU,MADI,CAETT,GAFS,mBAEoByU,EAAMhU,QAGlCsX,EAAwBD,EAAQE,QACpC,SAACtT,EAAqBuT,GAAtB,OACEA,EAAInX,aAAemX,EAAIlX,UACnB2D,EAAOwE,OAAO7H,EAAgB4W,IAC9BvT,IACN,IAIIP,EAAK,IAAIC,IACT8T,EAAuBH,EAC1B7O,OAAOuL,EAAMpS,MACb2V,QAAO,SAACtT,EAAqBuT,GAC5B,OAAK9T,EAAGI,IAAI0T,EAAIjX,KAIP0D,GAHPP,EAAGK,IAAIyT,EAAIjX,KAAK,GACT0D,EAAOwE,OAAO+O,MAItB,IACLpD,YAAW,kBACR,SAAUpU,EAAiB4B,GAC1B8N,EAASqE,GAAe9O,EAAUC,EAAM,CAAElF,QAAO4B,QAAQR,IAD1D,CAEEpB,EAAOyX,WAGZ/H,EACE/M,EAAe,CACbf,KAAMyV,EACNrX,MAAO,CAACT,EAA0BC,SAK1C,SAAC6U,GACCpS,QAAQC,IAAI,wEAA4BmS,ODnCjCqD,CAAazS,EAAUC,EAAM/D,EAAaC,QAC9C,CAEL,IAAQ6D,EAAmBsB,EAAnBtB,SAAUC,EAASqB,EAATrB,KAClBwK,EAAS0D,GAAiBnO,EAAUC,EAAM9D,IAE5C,OAAO,eACN,CAACsO,EAAUnJ,EAAMnF,IAGlB,eAAC,GAAD,WACE,eAACuW,GAAD,WACE,cAACrD,GAAD,IACA,cAACa,GAAD,OAEF,cAACyC,GAAD,IACA,cAAC5F,GAAD,OAKN,SAAS4F,KACP,IAAMvW,EAAUnC,EAAYqE,GAE5B,OACE,mCACe,OAAZlC,GACCA,EAAQyL,OACN,cAACgF,GAAD,CAEErP,MAAO,CAACpB,GACR0N,UAAW1N,EAAQrB,OAFd,qBAAuBqB,EAAQrB,QAYxC,cAAC,WAAD,MAMR,I,GAAMvB,GAAYM,IAAOC,IAAV,oMAaT2Y,GAAe5Y,IAAOC,IAAV,qMEzFX,SAAS6Y,GAAe1Z,GAC7B,IAAMmO,EAAUnO,EACR2K,EAAS3K,EAAT2K,EAAGC,EAAM5K,EAAN4K,EACX,OACE,mCACGuD,EAAQE,SACP,cAACsL,GAAD,CAAkBC,MAAOjP,EAAGkP,OAAQjP,EAApC,SAAwCkP,GAAiB3L,KAEzD,cAAC,WAAD,MAMR,I,SAAM2L,GAAmB,SAAC3L,GACxB,IAAQ3L,EAA4B2L,EAA5B3L,OAAQJ,EAAoB+L,EAApB/L,IAAK0H,EAAeqE,EAAfrE,IAAKzH,EAAU8L,EAAV9L,MAC1B,OAAQG,GACN,IAAK,UACH,OACE,wBAEEsH,IAAKA,EACL7J,MAAK,UAAKoC,EAAL,cACL0X,UAAU,KACVC,iBAAiB,EACjBC,UAAU,GANZ,gCACgC7X,IAQpC,IAAK,SACH,OACE,wBAEE0H,IAAKA,EACL7J,MAAK,UAAKoC,EAAL,cACL0X,UAAU,KACVG,YAAY,IACZF,iBAAiB,EACjBC,UAAU,GAPZ,+BAC+B7X,IASnC,QACE0B,QAAQoG,MAAM,2DAAe1H,KAK7BmX,GAAmB/Y,IAAOC,IAAV,4IAEX,SAACuD,GAAD,OAAOA,EAAEwV,SACR,SAACxV,GAAD,OAAOA,EAAEyV,UAER,SAACzV,GAAD,OAAOA,EAAEwV,SACR,SAACxV,GAAD,OAAOA,EAAEyV,UC1ChB,SAASM,GAAkBna,GAChC,IAAQmL,EAA8BnL,EAA9BmL,SAAUiD,EAAoBpO,EAApBoO,OAAQD,EAAYnO,EAAZmO,QAClB/L,EAAsBgM,EAAtBhM,IAAQ6I,EAAcmD,EAAjBzD,EAAUO,EAAOkD,EAAVxD,EACTI,EAAcmD,EAAjBxD,EAAUhJ,EAAOwM,EAAVvD,EACf,EAAgCoF,oBAAS,GAAzC,mBAAO3B,EAAP,KAAiB4B,EAAjB,KAEMsB,EAAWtQ,IAkBjB,OACE,eAACmZ,GAAD,CACEjP,SAAUA,EACVkP,YAAapP,EACbqP,aAAcpP,EACdqP,aAAcvP,EACdwP,cAAe7Y,EALjB,UAOE,eAAC8Y,GAAD,WACGC,GAAgBtM,GACjB,eAAC,GAAD,CACE7N,QA5BS,WACfuD,QAAQC,IAAI,YACZkM,GAAa5B,IA2BPsM,aAtBY,WAClB1K,GAAY,IAsBN2K,aA1BY,WAClB3K,GAAY,IA0BN5B,SAAUA,EAJZ,UAME,qBAAK9N,QAvBQ,WACnBgR,EAASnC,GAAkB,CAAEhN,UAsBvB,SACE,cAAC,IAAD,MAPJ,OAUE,qBAAK7B,QAxBS,WACpBgR,EAASlC,GAAmB,CAAEjN,UAuBxB,SACE,cAAC,IAAD,YAIN,cAACsX,GAAD,eAAoBvL,OAK1B,I,GAAMuM,GAAkB,SAACtM,GACvB,IAAQ5L,EAA4B4L,EAA5B5L,OAAQJ,EAAoBgM,EAApBhM,IAAK0H,EAAesE,EAAftE,IAAKzH,EAAU+L,EAAV/L,MAC1B,OAAQG,GACN,IAAK,UACH,OACE,wBAEEsH,IAAKA,EACL7J,MAAK,UAAKoC,EAAL,cACL0X,UAAU,KACVG,YAAY,IACZF,iBAAiB,EACjBa,QAAQ,+GAPV,+BAC+BzY,IASnC,IAAK,SACH,OACE,wBAEE0H,IAAKA,EACL7J,MAAK,UAAKoC,EAAL,cACL0X,UAAU,KACVG,YAAY,IACZF,iBAAiB,EACjBa,QAAQ,+GAPV,8BAC8BzY,IASlC,QACE0B,QAAQoG,MAAM,2DAAe1H,KAK7B4X,GAAoBxZ,IAAOC,IAAV,sRAOJ,SAACuD,GAAD,OAAOA,EAAEiW,eACR,SAACjW,GAAD,OAAOA,EAAEkW,gBACT,SAAClW,GAAD,OAAOA,EAAEmW,gBACR,SAACnW,GAAD,OAAOA,EAAEoW,iBAGV,SAACpW,GAAD,OAAOA,EAAE+G,YAMvBsP,GAAkB7Z,IAAOC,IAAV,uNAWfuP,GAAOxP,IAAO2S,GAAV,snBAKE,SAACnP,GAAD,OAAQA,EAAEiK,SAAF,mBAGP,SAACjK,GAAD,OAAQA,EAAEiK,SAAF,gBAUJ,SAACjK,GAAD,OAAQA,EAAEiK,SAAF,gBAGZ,SAACjK,GAAD,OAAQA,EAAEiK,SAAF,cAIJ,SAACjK,GAAD,OAAQA,EAAEiK,SAAF,YACN,SAACjK,GAAD,OAAQA,EAAEiK,SAAF,2BCnJpB,SAASyM,KACd,IAAMC,EAAM/J,iBAAuB,MAC7BgK,EAAQja,EAAY2O,IACpBuL,EAAeD,EAAMzW,OAC3B,EAA+BxD,EAAY4O,IAAnC7E,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAAKI,EAAlB,EAAkBA,SACZoG,EAAWtQ,IAEXia,EAAgBC,uBAAY,WAChC,GAAqB,IAAjBF,GAAsC,OAAhBF,EAAI7X,QAA9B,CAGAY,QAAQC,IAAI,6CACZ,MAAsCgX,EAAI7X,QAAlC4I,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,aACrBwF,EAAS3E,GAAiB,CAAEd,cAAaC,qBACxC,CAACwF,EAAUwJ,EAAKE,IAyBnB,OAvBArC,2BAAgB,WAEdsC,IAGA,IAAIE,EAAe,KACbC,EAAS,WACTD,GACFE,aAAaF,GAEfA,EAAUnF,WAAWiF,EAAe,MAItC,OAFA3O,OAAOgP,iBAAiB,SAAUF,GAE3B,WACDD,GACFE,aAAaF,GAEf7O,OAAOiP,oBAAoB,SAAUH,MAEtC,CAACH,IAIF,cAAC,GAAD,CAAWnK,IAAKgK,EAAKjQ,IAAKA,EAAKC,IAAKA,EAApC,SACGiQ,EAAMtX,KAAI,gBAAG0K,EAAH,EAAGA,OAAQD,EAAX,EAAWA,QAAX,OACT,cAACgM,GAAD,CAEEhP,SAAUA,EACViD,OAAQA,EACRD,QAASA,GAHN,qBAAuBC,EAAOhM,UAU3C,I,SAAM9B,GAAYM,IAAOC,IAAV,6SAWmB,SAACb,GAAD,OAAWA,EAAM8K,OACpB,SAAC9K,GAAD,OAAWA,EAAM+K,OChEzC,SAAS0Q,GAAkBzb,GAChC,IAAQgG,EAA6BhG,EAA7BgG,MAAO0V,EAAsB1b,EAAtB0b,YAAajR,EAASzK,EAATyK,KACpBd,EAAoCc,EAApCd,QAAStH,EAA2BoI,EAA3BpI,MAAOE,EAAoBkI,EAApBlI,OAAQhB,EAAYkJ,EAAZlJ,QAC1BgQ,EAAWtQ,IAUjB,OACE,eAAC0a,GAAD,CAAS3V,MAAOA,EAAO0V,YAAaA,EAApC,UACE,eAACE,GAAD,WACE,qBAAK9R,IAAKH,EAASuI,IAAG,UAAK7P,EAAL,cACtB,sCAAOA,QAET,cAAC,GAAD,CACEyH,IAAKvH,EACL2P,IAAG,UAAK7P,EAAL,WACH9B,QAjBc,WACdkK,EAAKlJ,QACPgQ,EAASpC,GAAyB,CAAE1E,UAEpC8G,EAAS3C,GAAuB,CAAEnE,WAchClJ,QAASA,OAKjB,I,YAAMoa,GAAU/a,IAAOC,IAAV,iRAEH,SAACb,GAAD,OAAY,IAAMA,EAAMgG,SAWlB,SAAChG,GAAD,OAAYA,EAAM0b,YAAN,gBAGtBE,GAAgBhb,IAAOC,IAAV,sqBA2Cb8W,GAAS/W,IAAOib,IAAV,0UAOA,SAAC7b,GAAD,OAAYA,EAAMuB,QAAN,8BC7FjB,SAASua,KACd,MAAyC/a,EAAY6O,IAA7CnE,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,gBACfqQ,EAAgBhb,EAAY8O,IAC5BmM,EAAiBjb,EAAY+O,IAC7ByB,EAAWtQ,IAajB,OACE,cAACgb,GAAD,UACE,eAACC,GAAD,WACE,cAACC,GAAD,CAAS5b,QAdI,WACjBgR,EvBoXF,SAAC9F,EAAqBsQ,GAAtB,OAAgD,SAACxK,GAC/C,IAAIlF,EAAOZ,EAAc,EACZ,IAATY,GACFkF,EAASnF,GAAU,CAAEC,KAAM0P,EAAgB,EAAGrQ,iBAAiB,KAC/DuK,YAAW,WACT1E,EAASnF,GAAU,CAAEC,KAAM0P,EAAerQ,iBAAiB,SAG7D6F,EAASnF,GAAU,CAAEC,OAAMX,iBAAiB,MuB5XrC0Q,CAAe3Q,EAAasQ,KAajC,SACE,cAAC,IAAD,MAEF,cAACI,GAAD,CAAS5b,QAbK,WAClBgR,EvB6XF,SAAC9F,EAAqBsQ,GAAtB,OAAgD,SAACxK,GAC/C,IAAIlF,EAAOZ,EAAc,EACrBY,IAAS0P,EAAgB,GAC3BxK,EAASnF,GAAU,CAAEC,KAAM,EAAGX,iBAAiB,KAC/CuK,YAAW,WACT1E,EAASnF,GAAU,CAAEC,KAAM,EAAGX,iBAAiB,SAGjD6F,EAASnF,GAAU,CAAEC,OAAMX,iBAAiB,MuBrYrC2Q,CAAgB5Q,EAAasQ,KAYlC,SACE,cAAC,IAAD,MAEF,cAAC,GAAD,UACGC,EAAetY,KAAI,SAACoL,EAAmBjL,GAApB,OAClB,cAAC4X,GAAD,CAEEhR,KAAMqE,EACN9I,MAAOyF,EACPiQ,YAAahQ,GAJf,iBACiB7H,EADjB,gBAC0BiL,EAAE1M,IAD5B,uBAaZ,I,SAAM6Z,GAAarb,IAAOC,IAAV,qGAOVqb,GAAkBtb,IAAOC,IAAV,iRAgBfyX,GAAU1X,IAAOC,IAAV,yLAYPsb,GAAUvb,IAAO0b,KAAV,seCtEE,SAASC,GAAYvc,GAClC,IAAMwc,EAAmBzb,EAAY+D,GACrC,EAAkC/D,EAAY6O,IAAtCjE,EAAR,EAAQA,SAASC,EAAjB,EAAiBA,aACX2F,EAAWtQ,IAqBjB,OAXA2X,2BAAgB,WCzBhB,IAACnC,ED2BC,GAAK+F,EAML,OADAjL,GChCDkF,EDgC6B,OChCb,SAAClF,GAChBgE,KAAMpJ,IAAN,UAAahL,EAAb,qBAAwCsV,IAAOhB,MAC7C,SAACM,GACCjS,QAAQC,IAAI,qEAAyBgS,EAAKJ,MAC1C,IAAMK,EAAeD,EAAKJ,KAAL,KACfnS,EAA2BuS,EAAKJ,KAAL,SACpB,YAATK,GACFzE,EAASvF,GAAY,CAAExI,iBAG3B,SAAC0S,GACCpS,QAAQC,IAAI,qEAAyBmS,SDsBlC,aALL1V,GAAQC,KAAK,CAAEC,SAAU,gBAM1B,CAAC8b,EAAkBjL,IAGpB,qCACE,cAACkL,GAAD,CAAelc,QArBA,WACjBgR,EAASjF,IAAiBX,KAoBYA,SAAUA,EAA9C,SACGA,EACC,cAAC,IAAD,IAEA,cAAC,IAAD,MAGJ,cAAC+Q,GAAD,CAAenc,QAxBA,WACjBgR,EAAS7E,IAAed,KAuBcD,SAAUA,EAA9C,SACGC,EACC,cAAC,IAAD,IAEA,cAAC,IAAD,MAGJ,eAAC,GAAD,CAAMD,SAAUA,EAAhB,UACE,cAACmQ,GAAD,IACA,cAAChB,GAAD,UAMR,IAAMza,GAAOO,IAAOC,IAAV,8LACO,SAACb,GAAD,OAAYA,EAAM2L,SAAN,mBAWvB8Q,GAAgB7b,IAAO0b,KAAV,uYAGV,SAAClY,GAAD,OAAQA,EAAEuH,SAAF,kBAqBX+Q,GAAgB9b,IAAO0b,KAAV,uYAGV,SAAClY,GAAD,OAAQA,EAAEuH,SAAF,iBEnGF,SAASgR,KACpB,IAAMvU,EAAOrH,EAAYoH,IAazB,OAXAqJ,qBAAU,WACV,IAAQzK,EAAmBqB,EAAnBrB,KAAMD,EAAasB,EAAbtB,SAOd,OANAhD,QAAQC,IAAI,CAAEgD,SACD,KAATA,GAA4B,KAAbD,EACftG,GAAQC,KAAK,CAAEC,SAAU,cAEzBF,GAAQC,KAAK,CAAEC,SAAU,WAEtB,eACN,CAAC0H,IAGE,uC,sBClBO,SAASwU,KACtB,OACE,eAACC,GAAD,WACGC,MAAM,IACJC,KAAK,GACLrZ,KAAI,SAAC0T,EAAGvT,GACP,OAAO,cAACmZ,GAAD,CAAsBhX,MAAOnC,GAA7B,cAAiBA,OAE5B,cAACoZ,GAAD,UACE,cAAC,KAAD,SAMR,I,GAAMJ,GAASjc,IAAOC,IAAV,iNAeNmc,GAAMpc,IAAOC,IAAV,uuBACA,SAACuD,GAAD,OAAOA,EAAE4B,SAoCZiX,GAASrc,IAAOC,IAAV,0mBCnEG,SAASqc,KACpB,OACI,cAAC,GAAD,UACI,cAACN,GAAD,MAKZ,I,2BAAMtc,GAAYM,IAAOC,IAAV,wNCTFR,GAAOO,IAAOC,IAAV,2JAUJP,GAAYM,IAAOC,IAAV,+kBA2BTsc,GAASvc,IAAOC,IAAV,6gCAmDNuc,GAAQxc,IAAOC,IAAV,8NAYLyX,GAAU1X,IAAOC,IAAV,wjCAsDPwc,GAAgBzc,IAAOC,IAAV,6GAKbyc,GAAgB1c,IAAOC,IAAV,6GAKb0c,GAAa3c,IAAOC,IAAV,ydAwBV2c,GAAc5c,IAAOC,IAAV,wYC7KjB,SAAS4c,KACd,IAAMlM,EAAWtQ,IACjB,EAA0BF,EAAYoH,IAA9BrB,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,IACZiW,EAAgB1M,iBAAyB,MACzC2M,EAAgB3M,iBAAyB,MAiC/C,OATA4H,2BAAgB,WAId,OAHI8E,EAAcxa,UAChBwa,EAAcxa,QAAQoR,MAAQxN,GAEzB,WACLyK,EAAS3J,SAEV,CAAC2J,EAAUmM,EAAe5W,IAG3B,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAACsW,GAAD,UACE,4DAEF,eAAC,GAAD,WACW,KAAR3V,EACC,cAAC0V,GAAD,UACE,6BAAK1V,MAGP,cAAC,WAAD,IAEF,eAAC4V,GAAD,WACE,uBACE3I,KAAK,OAEL3D,IAAK2M,EACLE,UAAQ,IAEV,yBACA,gCAAQ,gCAEV,eAACN,GAAD,WACE,uBACE5I,KAAK,WAEL3D,IAAK4M,EACLC,UAAQ,IAEV,yBACA,gCAAQ,gCAEV,cAACL,GAAD,CAAYhd,QA9DJ,WAAO,IAAD,IACduG,GAAW,UAAA4W,EAAcxa,eAAd,eAAuBoR,OAAQ,GAC1CuJ,GAAW,UAAAF,EAAcza,eAAd,eAAuBoR,OAAQ,GAahD/C,EAXiB,KAAbzK,EAKa,KAAb+W,EC5BN,SAAC/W,EAAkB+W,GAAnB,OAAwC,SAACtM,GAEvC,IAAMuE,EAAW,IAAIX,SACrBW,EAASV,OAAO,WAAYtO,GAC5BgP,EAASV,OAAO,WAAYyI,GAG5BtI,KAAMC,KAAN,UAAcrU,EAAd,eAA2C2U,GAAUL,MACnD,SAACM,GACCjS,QAAQC,IAAI,kDAAgBgS,EAAKJ,MACjC,IAAMK,EAAeD,EAAKJ,KAAL,KACflO,EAAcsO,EAAKJ,KAAL,IACpB,GAAa,YAATK,EAAoB,CACtB,MAA6BD,EAAKJ,KAAL,QAArB5O,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAOduK,EAAS7J,GAN+B,CACtCZ,WACAC,OACAC,aACAS,SAGFwO,YAAW,WACTzV,GAAQC,KAAK,CAAEC,SAAU,cACzBoD,QAAQC,IAAI,2EACX,UAEHwN,EAAS3J,GAAOH,OAGpB,SAACyO,GACCpS,QAAQC,IAAI,kDAAgBmS,ODIvB4H,CAAShX,EAAU+W,GAJjBjW,GAAO,wCALPA,GAAO,gDAwDZ,SACE,gDACY,IACd,eAAC4V,GAAD,WACE,gEACA,qBAAKjd,QAvES,WACtBC,GAAQC,KAAK,CAAEC,SAAU,eAsEjB,qCEzEL,SAASqd,KACd,IAAMxM,EAAWtQ,cAGjB,EAAwBF,EAAYoH,IAA7BrB,EAAP,EAAOA,SAAUW,EAAjB,EAAiBA,IACXiW,EAAgB1M,iBAAyB,MACzC2M,EAAgB3M,iBAAyB,MACzCgN,EAAiBhN,iBAAyB,MAwChD,OATA4H,2BAAgB,WAId,OAHG8E,EAAcxa,UACfwa,EAAcxa,QAAQoR,MAAQxN,GAEzB,WACLyK,EAAS3J,SAEV,CAAC2J,EAAUmM,EAAe5W,IAG3B,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAACsW,GAAD,UACE,4DAEF,eAAC,GAAD,WACW,KAAR3V,EACC,cAAC0V,GAAD,UACE,6BAAK1V,MAGP,cAAC,WAAD,IAEF,eAAC4V,GAAD,WACE,uBAAO3I,KAAK,OAAO3D,IAAK2M,EAAeE,UAAQ,IAC/C,yBACA,gCAAQ,gCAEV,eAACN,GAAD,WACE,uBAAO5I,KAAK,WAAW3D,IAAK4M,EAAeC,UAAQ,IACnD,yBACA,gCAAQ,gCAEV,eAACN,GAAD,WACE,uBAAO5I,KAAK,WAAW3D,IAAKiN,EAAgBJ,UAAQ,IACpD,yBACA,gCAAQ,gCAEV,cAACL,GAAD,CAAYhd,QA9DD,WAAO,IAAD,MACjBuG,GAAW,UAAA4W,EAAcxa,eAAd,eAAuBoR,OAAQ,GAC1CuJ,GAAW,UAAAF,EAAcza,eAAd,eAAuBoR,OAAQ,GAC1C2J,GAAY,UAAAD,EAAe9a,eAAf,eAAwBoR,OAAQ,GAElD,MAAiB,KAAbxN,GACFhD,QAAQC,IAAI,mDACZwN,EAAS3J,GAAO,gDAGD,KAAbiW,GACF/Z,QAAQC,IAAI,6CACZwN,EAAS3J,GAAO,0CAGdiW,IAAaI,GACfna,QAAQC,IAAI,yDACZwN,EAAS3J,GAAO,2DAIlB2J,EChDF,SAACzK,EAAkB+W,GAAnB,OAAwC,SAACtM,GACvC,IAAMuE,EAAW,IAAIX,SACrBW,EAASV,OAAO,WAAYtO,GAC5BgP,EAASV,OAAO,WAAYyI,GAC5BtI,KAAMC,KAAN,UAAcrU,EAAd,kBAA8C2U,GAAUL,MACtD,SAACM,GACCjS,QAAQC,IAAI,kDAAgBgS,EAAKJ,MACjC,IAAMK,EAAeD,EAAKJ,KAAL,KACflO,EAAcsO,EAAKJ,KAAL,IACpB,GAAa,YAATK,EAAoB,CACtB,MAA6BD,EAAKJ,KAAL,QAArB5O,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAOduK,EAAS5J,GANqC,CAC5Cb,WACAC,OACAC,aACAS,SAGFwO,YAAW,WACTzV,GAAQC,KAAK,CAAEC,SAAU,cACzBoD,QAAQC,IAAI,2EACX,UAEHwN,EAAS3J,GAAOH,OAGpB,SAACyO,GACCpS,QAAQC,IAAI,kDAAgBmS,ODqBvBgI,CAAYpX,EAAU+W,KAyCzB,SACE,gDACY,IACd,eAACL,GAAD,WACE,0DACA,qBAAKjd,QAvEM,WACnBC,GAAQC,KAAK,CAAEC,SAAU,YAsEjB,qCE5FG,SAASyd,KAEtB,OACE,gCACE,cAACpO,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqO,OAAK,EAACle,KAAK,IAAIme,UAAW1B,KACjC,cAAC,IAAD,CAAOzc,KAAK,aAAame,UAAWpF,KACpC,cAAC,IAAD,CAAO/Y,KAAK,YAAYme,UAAW9B,KACnC,cAAC,IAAD,CAAOrc,KAAK,UAAUme,UAAW7F,KACjC,cAAC,IAAD,CAAOtY,KAAK,UAAUme,UAAWZ,KACjC,cAAC,IAAD,CAAOvd,KAAK,aAAame,UAAWN,KACpC,cAAC,IAAD,CAAO7d,KAAK,YAAYme,UAAWnB,W,aCXrCoB,GAAUC,aAAgB,CAC9B1Z,iBAAkB2Z,EAClBpW,KAAMqW,GACNjP,QAASkP,KAGLC,GAAaC,YAAqB,CACtCC,mBAAmB,KpCqDsB,WACzC/a,QAAQC,IAAI,+BAEZ,IAAMwF,EACyB,cAA7BgD,OAAOuS,SAASC,UACa,cAA7BxS,OAAOuS,SAASC,SAEZvV,EAAW+C,OAAOuS,SAASC,SAEjCzV,GAAmB,CACjBC,UACAC,YoC5DJwV,GAgBO,IAUQha,GAVMia,YAAe,CAClCX,WACAK,gB,SC/BWne,GAAU0e,eAEvBC,IAASC,OACP,cAAC,IAAD,CAAUpa,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAQxE,QAASA,GAAjB,SACE,cAAC2d,GAAD,QAGJ9W,SAASgY,eAAe,W","file":"static/js/main.9475c7ce.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { history } from \"../..\";\r\nimport { NavButtonProps } from \"../../app/types\";\r\n\r\nexport default function NavButton(props: NavButtonProps) {\r\n  const { title, path, icon, closeMenu } = props;\r\n\r\n  const onClick = () => {\r\n    if (path !== \"\") {\r\n      history.push({ pathname: `${path}` });\r\n    }\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container onClick={onClick}>\r\n        {icon}\r\n        <p>{title}</p>\r\n      </Container>\r\n      {/* 附加物 */}\r\n      {props.children}\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  :hover {\r\n    div {\r\n      // Container\r\n      background-color: var(--menuText_Hover);\r\n\r\n      p {\r\n        // NavItemTextColor\r\n        color: #fff;\r\n      }\r\n      svg {\r\n        // NavItemIconColor\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    div {\r\n      h3 {\r\n        // NavUser-Backaground\r\n        background-color: var(--menuText_Hover);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 1.5em;\r\n  cursor: pointer;\r\n  div {\r\n    width: 80%;\r\n    p {\r\n      margin: 0px;\r\n    }\r\n  }\r\n\r\n  svg {\r\n    color: var(--menuText);\r\n    margin-right: 10px;\r\n    font-size: 26px;\r\n  }\r\n  p {\r\n    color: var(--menuText);\r\n    text-decoration: none;\r\n    font-size: 23px;\r\n    letter-spacing: 5px;\r\n  }\r\n\r\n  transition: 0.3s;\r\n\r\n  // 螢幕寬度小於768px時\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    margin: 0 0;\r\n    padding: 0 0;\r\n    svg {\r\n      margin: 0px 0px;\r\n      padding: 0 16px;\r\n      font-size: 35px;\r\n    }\r\n    p {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    width: 80%;\r\n    margin: 0px 10px 0px 15px;\r\n    padding: 25px;\r\n    /* background-color: orange; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n\r\n    svg {\r\n      font-size: 28px;\r\n    }\r\n    p {\r\n      margin: 0px;\r\n      display: block;\r\n      letter-spacing: 10px;\r\n      font-size: 25px;\r\n      width: 50%;\r\n    }\r\n  }\r\n`;\r\n","import { NavButtonProps } from \"../../../app/types\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavBrowser(props: NavButtonProps) {\r\n  return <NavButton {...props} />;\r\n}\r\n","import type { RootState, AppDispatch } from \"./store\";\r\n// hooks\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as hook_useDispatch,\r\n  useSelector as hook_useSelector,\r\n} from \"react-redux\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n\r\n// 不要直接用store.getState(),useSelector會在你store發生改變時重新渲染，省掉\"訂閱\"部分\r\nexport const useSelector: TypedUseSelectorHook<RootState> = hook_useSelector;\r\n\r\n// redux會自動幫我們創建context\r\nexport const useDispatch = () => hook_useDispatch<AppDispatch>();\r\n\r\n","import { Switcher } from \"./types\";\r\n\r\n// export const API_SERVER_URL = \"http://192.168.50.240:8000\";\r\nexport const API_SERVER_URL = `https://lowkeydd.ddnsking.com`;\r\n\r\nexport const VISITS_DEFAULT_GROUPNAME = \"Favorite\";\r\n\r\nexport const CHANNELS_DEFAULT_GROUPNAME = \"Resident\";\r\n\r\nexport const SwitcherList: Array<Switcher> = [\r\n  { checked: false, htmlFor: \"live\", afterColor: \"#f00\" },\r\n  { checked: false, htmlFor: \"wait\", afterColor: \"#0ff\" },\r\n  { checked: false, htmlFor: \"off\", afterColor: \"#856\" },\r\n];\r\n\r\n","import {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../app/config\";\r\nimport {\r\n  ChannelCardProps,\r\n  ChannelProps,\r\n  FavoredItem,\r\n  VisitItem,\r\n} from \"../../app/types\";\r\n\r\nexport const createChannelCard = (\r\n  ch: ChannelProps,\r\n  options: {\r\n    group: string,\r\n    heart: boolean;\r\n  }\r\n): ChannelCardProps => {\r\n  // 表示為自動添加的預設名稱\r\n\r\n  const { group, heart } = options;\r\n\r\n  return {\r\n    ...ch,\r\n    group,\r\n    heart,\r\n  };\r\n};\r\n\r\nexport const createFavoredItem = (\r\n  card: ChannelCardProps | VisitItem,\r\n  options: { isChanged: boolean; isNewAdded: boolean; isDeleted: boolean }\r\n): FavoredItem => {\r\n  const { isChanged, isNewAdded, isDeleted } = options;\r\n  const { cid, cname, owner, avatar, method, group } = card;\r\n  const groupName =\r\n    group === CHANNELS_DEFAULT_GROUPNAME ? VISITS_DEFAULT_GROUPNAME : group;\r\n  return {\r\n    cid,\r\n    cname,\r\n    owner,\r\n    avatar,\r\n    method,\r\n    group: groupName,\r\n    isChanged,\r\n    isNewAdded,\r\n    isDeleted,\r\n  };\r\n};\r\n\r\nexport const createVisitItem = (\r\n  card: ChannelCardProps | FavoredItem\r\n): VisitItem => {\r\n  const { cid, cname, owner, avatar, method, group } = card;\r\n  const groupName =\r\n    group === CHANNELS_DEFAULT_GROUPNAME ? VISITS_DEFAULT_GROUPNAME : group;\r\n  return {\r\n    cid,\r\n    cname,\r\n    owner,\r\n    avatar,\r\n    method,\r\n    group: groupName,\r\n  };\r\n};\r\n\r\nexport const createVMap = <T extends { cid: string }>(\r\n  list: T[]\r\n): Map<string, T> => {\r\n  const mp = new Map<string, T>();\r\n  list.forEach((o) => {\r\n    mp.set(o.cid, o);\r\n  });\r\n  return mp;\r\n};\r\n\r\nexport const createMap = <T extends { cid: string }>(\r\n  list: T[]\r\n): Map<string, boolean> => {\r\n  const mp = new Map<string, boolean>();\r\n  list.forEach((o) => {\r\n    mp.set(o.cid, true);\r\n  });\r\n  return mp;\r\n};\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../app/config\";\r\nimport { RootState } from \"../../app/store\";\r\nimport {\r\n  ChannelCardProps,\r\n  ChannelProps,\r\n  FavoredItem,\r\n  VisitItem,\r\n  VisitList,\r\n} from \"../../app/types\";\r\nimport { createChannelCard, createFavoredItem, createVisitItem } from \"./share\";\r\n\r\ntype ChannelCardStore = {\r\n  hasFetchChannels: boolean;\r\n  clusters: ChannelCardProps[][];\r\n  group: string[];\r\n  favoredList: FavoredItem[];\r\n  tags: string[];\r\n  current: ChannelCardProps | null;\r\n};\r\n\r\nconst initialState: ChannelCardStore = {\r\n  hasFetchChannels: false,\r\n  clusters: [[]],\r\n  group: [],\r\n  favoredList: [],\r\n  tags: [\"live\"],\r\n  current: null,\r\n};\r\n\r\nconst setCluster = (\r\n  state: ChannelCardStore,\r\n  channels: ChannelProps[][],\r\n  group: string[]\r\n) => {\r\n  const clusters = channels.map((chgroups, i) =>\r\n    chgroups !== null\r\n      ? chgroups.map((ch) =>\r\n          createChannelCard(ch, {\r\n            group: group[i],\r\n            heart: group[i] !== CHANNELS_DEFAULT_GROUPNAME,\r\n          })\r\n        )\r\n      : []\r\n  );\r\n  console.log(\"[ChannelCardStore] setCluster\");\r\n  state.clusters = clusters;\r\n  state.hasFetchChannels = true;\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"browser\",\r\n  initialState,\r\n  reducers: {\r\n    setStore: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          channels: ChannelProps[][];\r\n          group: string[];\r\n          list: VisitItem[];\r\n          tags: string[];\r\n        };\r\n      }\r\n    ) => {\r\n      const { channels, group, list, tags } = action.payload;\r\n      state.group = group;\r\n      state.tags = tags[0] === \"all\" ? [\"live\", \"wait\", \"off\"] : tags;\r\n      // state.current = null;\r\n\r\n      // list\r\n      if (list) {\r\n        state.favoredList = list.map((v: VisitItem) =>\r\n          createFavoredItem(v, {\r\n            isChanged: false,\r\n            isNewAdded: false,\r\n            isDeleted: false,\r\n          })\r\n        );\r\n      }\r\n\r\n      // cluster\r\n      setCluster(state, channels, group);\r\n    },\r\n    setChannelCard: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          card: ChannelCardProps;\r\n          options: {\r\n            isChanged: boolean;\r\n            isNewAdded: boolean;\r\n            isDeleted: boolean;\r\n          };\r\n        };\r\n      }\r\n    ) => {\r\n      const { card, options } = action.payload;\r\n      const { isChanged, isNewAdded, isDeleted } = options;\r\n      const prelist = state.favoredList;\r\n\r\n      if (card.heart) {\r\n        state.favoredList = [\r\n          createFavoredItem(card, {\r\n            isChanged,\r\n            isNewAdded,\r\n            isDeleted,\r\n          }),\r\n          ...prelist.filter((p) => p.cid !== card.cid),\r\n        ];\r\n      } else {\r\n        if (isNewAdded) {\r\n          // 對於還不是喜愛的頻道直接移除。\r\n          state.favoredList = [...prelist.filter((p) => p.cid !== card.cid)];\r\n        } else {\r\n          // 對於已經加入喜愛的頻道視為刪除(劃線)。\r\n          const newItem = createFavoredItem(card, {\r\n            isChanged,\r\n            isNewAdded,\r\n            isDeleted: true,\r\n          });\r\n          state.favoredList = prelist.map((p) =>\r\n            p.cid !== newItem.cid ? p : newItem\r\n          );\r\n        }\r\n      }\r\n\r\n      // 產生新的卡片群集\r\n      state.clusters = state.clusters.map((cards: ChannelCardProps[]) =>\r\n        cards.length !== 0\r\n          ? cards.map((ch: ChannelCardProps) =>\r\n              ch.cid !== card.cid ? ch : card\r\n            )\r\n          : []\r\n      );\r\n    },\r\n    setFavoredList: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          group: string[] | null;\r\n          list: FavoredItem[];\r\n        };\r\n      }\r\n    ) => {\r\n      const { group, list } = action.payload;\r\n      if (group !== null) {\r\n        state.group = group;\r\n      }\r\n      state.favoredList = list;\r\n\r\n      // 無法透過新生成的List去推得新的卡片群集；\r\n      // 必須在更新後發送請求，重新獲取新的clusters 和更新後的 List\r\n    },\r\n    setSearchResult: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { current: ChannelCardProps | null };\r\n      }\r\n    ) => {\r\n      const { current } = action.payload;\r\n      if (current !== null) {\r\n        state.current = current;\r\n\r\n        if (current.heart === true) {\r\n          const newItem = createFavoredItem(\r\n            { ...current, group: VISITS_DEFAULT_GROUPNAME }, //修正為合法的group屬性\r\n            {\r\n              isChanged: false,\r\n              isNewAdded: true,\r\n              isDeleted: false,\r\n            }\r\n          );\r\n          state.favoredList = [newItem, ...state.favoredList];\r\n        } else {\r\n          state.favoredList = state.favoredList.filter(\r\n            (f) => f.cid !== current.cid\r\n          );\r\n        }\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  setStore,\r\n  setChannelCard,\r\n  setFavoredList,\r\n  setSearchResult,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const selectChannelCardStore = (state: RootState) =>\r\n  state.channelCardStore;\r\n\r\nexport const selectHasFetchChannels = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.hasFetchChannels\r\n);\r\n\r\nexport const selectChannelsCluster = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.clusters\r\n);\r\n\r\nexport const selectTags = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.tags\r\n);\r\n\r\nexport const selectGroup = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.group\r\n);\r\n\r\nexport const selectFavoredList = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.favoredList\r\n);\r\n\r\nexport const selectCurrent = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.current\r\n);\r\n\r\nexport const selectVisitList = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    const newfavoredList = favoredList\r\n      // 刪除\r\n      .filter((f) => !f.isDeleted)\r\n      // 修正群主名稱 Resident => Favorite\r\n      .map((f) =>\r\n        f.group === CHANNELS_DEFAULT_GROUPNAME\r\n          ? { ...f, group: VISITS_DEFAULT_GROUPNAME }\r\n          : f\r\n      );\r\n\r\n    // 刪除多餘沒被使用到的群組名稱\r\n    const mp = new Map<string, boolean>();\r\n    const newGroup: string[] = [];\r\n    newfavoredList.forEach((f: FavoredItem) => {\r\n      if (!mp.has(f.group)) {\r\n        mp.set(f.group, true);\r\n        newGroup.push(f.group);\r\n      }\r\n    });\r\n\r\n    // 轉成VisitItem表單。\r\n    const list: VisitItem[] = newfavoredList.map((f) => createVisitItem(f));\r\n\r\n    // 輸出結果\r\n    const visit: VisitList = {\r\n      list,\r\n      group: newGroup,\r\n    };\r\n    return visit;\r\n  }\r\n);\r\n\r\nexport const selectFavoredCardsList = createSelector(\r\n  [selectGroup, selectFavoredList],\r\n  (group, favoredList) => {\r\n    if (group.length === 0) {\r\n      return [[]];\r\n    }\r\n\r\n    const result: FavoredItem[][] = group.map((x) => []);\r\n    favoredList.forEach((f: FavoredItem) => {\r\n      const index = group.indexOf(f.group);\r\n      result[index].push(f);\r\n    });\r\n\r\n    return result;\r\n  }\r\n);\r\n\r\nexport const selectIsFavoredCardsListChanged = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var isListChanged = false;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isChanged, isNewAdded, isDeleted } = favoredList[i];\r\n      if (isChanged || isNewAdded || isDeleted) {\r\n        isListChanged = true;\r\n        break;\r\n      }\r\n    }\r\n    return isListChanged;\r\n  }\r\n);\r\n\r\nexport const selectNumOfFavoredCards = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var count = 0;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isNewAdded } = favoredList[i];\r\n      if (isNewAdded) {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n);\r\n\r\n// export const selectFavoredList = createSelector([selectChannelCardStore], (store) => {\r\n//   return store.favoredList;\r\n// });\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport { NavButtonProps } from \"../../../app/types\";\r\nimport { selectNumOfFavoredCards } from \"../../../features/channelCardStore/slice\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavCollections(props: NavButtonProps) {\r\n  const numOfFavored = useSelector(selectNumOfFavoredCards);\r\n\r\n  return (\r\n    <NavButton {...props}>\r\n      <Counter visible={numOfFavored > 0}>\r\n        <span>{numOfFavored}</span>\r\n      </Counter>\r\n    </NavButton>\r\n  );\r\n}\r\n\r\nconst Counter = styled.div<{ visible: boolean }>`\r\n  --display: ${(props) => [props.visible ? `block` : `none`]};\r\n  display: var(--display);\r\n  text-align: center;\r\n  line-height: 18px;\r\n  position: absolute;\r\n  color: #fff;\r\n  z-index: 2;\r\n  top: 22px;\r\n  right: 95px;\r\n  font-size: 12px;\r\n\r\n  span {\r\n    display: var(--display);\r\n    content: \"\";\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 18px;\r\n    height: 18px;\r\n    color: white;\r\n    background-color: red;\r\n    border-radius: 50%;\r\n    z-index: -1;\r\n  }\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    line-height: 18px;\r\n    top: 19px;\r\n    right: 24px;\r\n    font-size: 14px;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    line-height: 16px;\r\n    font-size: 12px;\r\n    top: 327px;\r\n    left: 102px;\r\n  }\r\n`;\r\n","import { NavButtonProps } from \"../../../app/types\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavTheater(props: NavButtonProps) {\r\n  return <NavButton {...props} />;\r\n}\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { UserLoginResponse, UserSession, UserState } from \"../../app/types\";\r\n\r\nconst setSession = (state: UserState, session: UserSession) => {\r\n  const { username, ssid, expiration } = session;\r\n  state.username = username;\r\n  state.ssid = ssid;\r\n  setCookie(ssid, username, expiration);\r\n};\r\n\r\nconst initialState: UserState = {\r\n  username: getCookie(\"username\"),\r\n  ssid: getCookie(\"ssid\"),\r\n  msg: \"\",\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    setUserLogin: (\r\n      state,\r\n      action: { type: string; payload: UserLoginResponse }\r\n    ) => {\r\n      const { username, ssid, expiration, msg } = action.payload;\r\n      setSession(state, { username, ssid, expiration });\r\n      state.msg = msg;\r\n    },\r\n    setUserRegiser: (\r\n      state,\r\n      action: { type: string; payload: UserLoginResponse }\r\n    ) => {\r\n      const { username, ssid, expiration, msg } = action.payload;\r\n      setSession(state, { username, ssid, expiration });\r\n      state.msg = msg;\r\n    },\r\n    setMsg: (state, action: { type: string; payload: string | undefined }) => {\r\n      if (action.payload === undefined) {\r\n        state.msg = \"\";\r\n      } else {\r\n        state.msg = action.payload;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUserLogin, setUserRegiser, setMsg } = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// expiration 會乘上1000倍，所以單位是秒\r\nfunction setCookie(ssid: string, username: string, expiration: number) {\r\n  var expires = new Date(Date.now() + expiration * 1000).toUTCString();\r\n  document.cookie = `ssid=${ssid}; expires=${expires}; path=/`;\r\n  document.cookie = `username=${username}; expires=${expires}; path=/`;\r\n}\r\n\r\nfunction getCookie(c_name: string): string {\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + \"=\");\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(\";\", c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport const selectUser = (state: RootState) => state.user;\r\nexport const selectMsg = createSelector([selectUser], (user) => {\r\n  return user.msg;\r\n});\r\nexport const selectIsLogin = createSelector([selectUser], (user) => {\r\n  return user.username !== \"\" && user.username !== \"\";\r\n});\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport { NavButtonProps } from \"../../../app/types\";\r\nimport { selectIsLogin } from \"../../../features/user/slice\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavUser(props: NavButtonProps) {\r\n  const isLogin = useSelector(selectIsLogin);\r\n\r\n  return (\r\n    <NavButton {...props}>\r\n      <Status visible={isLogin}>\r\n        <h3>\r\n          <span>{}</span>\r\n        </h3>\r\n      </Status>\r\n    </NavButton>\r\n  );\r\n}\r\n\r\nconst Status = styled.div<{ visible: boolean }>`\r\n  --display: ${(props) => [props.visible ? `block` : `none`]};\r\n  display: var(--display);\r\n  text-align: center;\r\n  line-height: 18px;\r\n  position: absolute;\r\n  color: #fff;\r\n  z-index: 2;\r\n  top: 22px;\r\n  right: 95px;\r\n  font-size: 12px;\r\n\r\n  h3 {\r\n    display: var(--display);\r\n    content: \"\";\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;\r\n    top: 19px;\r\n    left: -140px;\r\n    width: 10px;\r\n    height: 10px;\r\n    color: white;\r\n    background-color: var(--navColor);\r\n    border-radius: 50%;\r\n\r\n    span {\r\n      display: var(--display);\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 2px;\r\n      left: 2px;\r\n      width: 6px;\r\n      height: 6px;\r\n      background-color: #54f542;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    transition: 0.3s;\r\n  \r\n  }\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    line-height: 18px;\r\n    top: 19px;\r\n    right: 24px;\r\n    font-size: 14px;\r\n\r\n    h3 {\r\n      top: 25px;\r\n      left: -67px;\r\n      width: 14px;\r\n      height: 14px;\r\n      span {\r\n        top: 2px;\r\n        left: 2px;\r\n        width: 10px;\r\n        height: 10px;\r\n      }\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    line-height: 16px;\r\n    font-size: 12px;\r\n    top: 28px;\r\n    left: -265px;\r\n\r\n    h3 {\r\n      top: 242px;\r\n      left: 367px;\r\n      width: 10px;\r\n      height: 10px;\r\n      background-color: var(--menuBgColor);\r\n\r\n      span {\r\n        top: 2px;\r\n        left: 2px;\r\n        width: 6px;\r\n        height: 6px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export const getIsFullScreen = () => {\r\n  // ## The below if statement seems to work better ## if ((document.fullScreenElement && document.fullScreenElement !== null) || (document.msfullscreenElement && document.msfullscreenElement !== null) || (!document.mozFullScreen && !document.webkitIsFullScreen)) {\r\n  return (\r\n    (document.fullScreenElement !== undefined &&\r\n      document.fullScreenElement === null) ||\r\n    (document.msFullscreenElement !== undefined &&\r\n      document.msFullscreenElement === null) ||\r\n    (document.mozFullScreen !== undefined && !document.mozFullScreen) ||\r\n    (document.webkitIsFullScreen !== undefined && !document.webkitIsFullScreen)\r\n  );\r\n};\r\n\r\nexport const enableFullScreen = (elem) => {\r\n  if (elem.requestFullScreen) {\r\n    elem.requestFullScreen();\r\n  } else if (elem.mozRequestFullScreen) {\r\n    elem.mozRequestFullScreen();\r\n  } else if (elem.webkitRequestFullScreen) {\r\n    elem.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\r\n  } else if (elem.msRequestFullscreen) {\r\n    elem.msRequestFullscreen();\r\n  }\r\n};\r\n\r\nexport const exitFullScreen = () => {\r\n  if (document.cancelFullScreen) {\r\n    document.cancelFullScreen();\r\n  } else if (document.mozCancelFullScreen) {\r\n    document.mozCancelFullScreen();\r\n  } else if (document.webkitCancelFullScreen) {\r\n    document.webkitCancelFullScreen();\r\n  } else if (document.msExitFullscreen) {\r\n    document.msExitFullscreen();\r\n  }\r\n};\r\n\r\nexport const toggleFullScreen = (elem) => {\r\n  const isFullScreen = getIsFullScreen();\r\n  if (isFullScreen) {\r\n    enableFullScreen(elem);\r\n  } else {\r\n    exitFullScreen();\r\n  }\r\n};\r\n","import { ConnectionConfigProps } from \"./types\";\r\n\r\nexport const useGrouped = function <\r\n  V extends { cid: string; group: string },\r\n  S extends { cid: string }\r\n>(map: V[], list: S[]): { [key: string]: S[] } {\r\n  if (!list) {\r\n    return {};\r\n  }\r\n  const result: { [key: string]: S[] } = {};\r\n  // const resident: S[] = [];\r\n\r\n  const mp = new Map<string, V>();\r\n  map.forEach((obj) => {\r\n    mp.set(obj.cid, obj);\r\n  });\r\n  list.forEach((obj) => {\r\n    const cur = mp.get(obj.cid);\r\n    if (cur) {\r\n      const key = cur.group;\r\n      if (!result[key]) {\r\n        result[key] = [obj];\r\n      } else {\r\n        result[key].push(obj);\r\n      }\r\n    } else {\r\n      console.error(\"發生錯誤，不該有這個\");\r\n    }\r\n  });\r\n  return { ...result };\r\n};\r\n\r\nexport const getGroupMap = <T extends { cid: string; group: string }>(\r\n  list: T[]\r\n): {\r\n  [key: string]: string;\r\n} => {\r\n  const mp: { [key: string]: string } = {};\r\n  list.forEach((item) => (mp[item.cid] = item.group));\r\n  return mp;\r\n};\r\n\r\n// export const getGroupedView = <T extends { cid: string }>(\r\n//   mp: { [key: string]: string },\r\n//   group: string[],\r\n//   items: T[],\r\n//   isResident: boolean\r\n// ):T[][] => {\r\n//   const len = group.length;\r\n//   const view = Array(isResident ? len+1 : len)\r\n//     .fill(0)\r\n//     .map(x=>Array<T>());\r\n\r\n//   items.forEach((o) => {\r\n//     const groupName = mp[o.cid];\r\n//     const ix = groupName ? group.indexOf(groupName) : -1;\r\n//     if (ix > -1) {\r\n//       view[ix].push(o);\r\n//     } else {\r\n//       view[len].push(o);\r\n//     }\r\n//   });\r\n//   return view;\r\n// };\r\n\r\nexport var ConnectionConfig: ConnectionConfigProps = {\r\n  IsLocal: false,\r\n  HostName: \"\",\r\n};\r\n\r\nexport const decodeUrlToConnectionConfig = () => {\r\n  console.log(\"decodeUrlToConnectionConfig\");\r\n\r\n  const IsLocal =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  const HostName = window.location.hostname;\r\n\r\n  ConnectionConfig = {\r\n    IsLocal,\r\n    HostName,\r\n  };\r\n};\r\n\r\n","import { ConnectionConfig } from \"../../app/share\";\r\nimport {\r\n  ChannelProps,\r\n  ChatboxIframe,\r\n  IframeProps,\r\n  IframeSizeProps,\r\n  PlayerIframe,\r\n  TheaterElement,\r\n} from \"../../app/types\";\r\nimport { setSlider } from \"./slice\";\r\n\r\nexport const createTheaterElement = (\r\n  ch: ChannelProps,\r\n  options: { checked: boolean }\r\n): TheaterElement => {\r\n  const { cid, cname, avatar, streamurl, thumbnail, method } = ch;\r\n  const { checked } = options;\r\n  return {\r\n    cid,\r\n    cname,\r\n    avatar,\r\n    streamurl,\r\n    preview: thumbnail,\r\n    method,\r\n    checked,\r\n  };\r\n};\r\n\r\nconst getPlayerSrc = (\r\n  method: string,\r\n  streamurl: string,\r\n  cname: string\r\n): string => {\r\n  console.log(\"ConnectionConfig.HostName: \", ConnectionConfig.HostName);\r\n\r\n  let src = \"\";\r\n  switch (method) {\r\n    case \"youtube\":\r\n      let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n      let vedioid = sub ? sub[1] : \"\";\r\n      src = `//www.youtube.com/embed/${vedioid}?enablejsapi=1&origin=${ConnectionConfig.HostName}&widgetid=1`;\r\n      break;\r\n    case \"twitch\":\r\n      src = `//player.twitch.tv?allowfullscreen=false&channel=${cname}&parent=${ConnectionConfig.HostName}&muted=false&autoplay=false`;\r\n      break;\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n  return src;\r\n};\r\n\r\nconst getChatboxSrc = (\r\n  method: string,\r\n  streamurl: string,\r\n  cname: string\r\n): string => {\r\n  console.log(\"ConnectionConfig.HostName: \", ConnectionConfig.HostName);\r\n\r\n  let src = \"\";\r\n  switch (method) {\r\n    case \"youtube\":\r\n      let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n      let vedioid = sub ? sub[1] : \"\";\r\n      src = `//www.youtube.com/live_chat?v=${vedioid}&is_popout=1&embed_domain=${ConnectionConfig.HostName}&dark_theme=1`;\r\n      break;\r\n    case \"twitch\":\r\n      src = `//www.twitch.tv/embed/${cname}/chat?darkpopout=&secret=safe&parent=${ConnectionConfig.HostName}`;\r\n      break;\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n  return src;\r\n};\r\n\r\nexport const convertToPlayerIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const convertToChatboxIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nexport const createPlayerIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const createChatboxIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nexport const getListAppendIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  newItem: T\r\n): T[] => {\r\n  const newlist = !list\r\n    ? [newItem]\r\n    : list.filter((o) => o.cid !== newItem.cid).concat(newItem);\r\n\r\n  return newlist;\r\n};\r\n\r\nexport const getListRemoveIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  cid: string\r\n): T[] => {\r\n  const newlist = !list ? [] : list.filter((o) => o.cid !== cid);\r\n\r\n  return newlist;\r\n};\r\n\r\nexport const setIframeSize = <T extends {}>(\r\n  item: T,\r\n  options: { ratio?: number; w: number; h: number }\r\n): T => {\r\n  const { ratio, w, h } = options;\r\n  return {\r\n    ...item,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const calcNewIframeSize = (\r\n  cW: number,\r\n  cH: number,\r\n  ratio: number,\r\n  size: number\r\n): IframeSizeProps => {\r\n  let maxArea = 0;\r\n  let col = 0;\r\n  let row = 0;\r\n  let w = 0;\r\n  let h = 0;\r\n\r\n  for (let i = 1; i < size + 1; i++) {\r\n    const curRow = Math.ceil(size / i);\r\n    // 期待的均分高度為  (cW / i) * Ratio ;\r\n    // 實際允許高度上限  cH / curRow) ;\r\n    // 合理高度範圍勢必介於 [期待的均分高度為, 實際允許高度上限] 這兩者之間\r\n    const gridW = cW / i;\r\n    const gridH = gridW * ratio;\r\n    let curH = Math.min(gridH, cH / curRow);\r\n    // 高度決定後，便可直接決定出寬度。\r\n    let curW = curH * (1 / ratio);\r\n\r\n    const curArea = curW * curH;\r\n    if (curArea > maxArea) {\r\n      maxArea = curArea;\r\n      col = i;\r\n      row = curRow;\r\n      w = curW;\r\n      h = curH;\r\n    }\r\n    console.log(\r\n      `[TheaterIframesViewer] \\n col: ${i}, row: ${curRow}, w: ${curW}, h: ${curH}, area: ${curArea}, max: ${maxArea}`\r\n    );\r\n  }\r\n\r\n  return { col, row, w, h };\r\n};\r\n\r\nexport const calcSingleIframeSize = (\r\n  cW: number,\r\n  cH: number,\r\n  curRow: number,\r\n  curCol: number,\r\n  ratio: number,\r\n): { w: number; h: number } => {\r\n  const gridW = cW / curCol;\r\n  const gridH = gridW * ratio;\r\n  let h = Math.min(gridH, cH / curRow);\r\n  let w = h * (1 / ratio);\r\n  return { w, h };\r\n};\r\n\r\ntype IframeSizePropsV2 = {\r\n  col: number;\r\n  row: number;\r\n  pw: number;\r\n  ph: number;\r\n  cw: number;\r\n  ch: number;\r\n  flexType: string;\r\n};\r\n\r\nconst MIN_CHATBOX_WIDTH = 320;\r\nconst MIN_CHATBOX_HEIGHT = 320;\r\n\r\nconst getResult = (\r\n  col: number,\r\n  row: number,\r\n  cw: number,\r\n  ch: number,\r\n  pw: number,\r\n  ph: number,\r\n  flexType: string\r\n): IframeSizePropsV2 => {\r\n  return {\r\n    col,\r\n    row,\r\n    cw,\r\n    ch,\r\n    pw,\r\n    ph,\r\n    flexType,\r\n  };\r\n};\r\n\r\nexport const calcNewIframeSizeV2 = (\r\n  cW: number,\r\n  cH: number,\r\n  ratio: number,\r\n  size: number\r\n): IframeSizePropsV2 => {\r\n  let result: IframeSizePropsV2 = {\r\n    col: 0,\r\n    row: 0,\r\n    cw: 0,\r\n    ch: 0,\r\n    pw: 0,\r\n    ph: 0,\r\n    flexType: \"column\",\r\n  };\r\n\r\n  let maxArea = 0;\r\n\r\n  for (let i = 1; i < size + 1; i++) {\r\n    const curRow = Math.ceil(size / i);\r\n\r\n    const gridW = cW / i;\r\n    const gridH = cH / curRow;\r\n    var curPlayW = 0;\r\n    var curPlayH = 0;\r\n    var curChatW = 0;\r\n    var curChatH = 0;\r\n\r\n    // TYPE flex-direction: column\r\n    if (gridH > MIN_CHATBOX_HEIGHT) {\r\n      curChatW = gridW;\r\n      curPlayH = Math.min(gridW * ratio, gridH - MIN_CHATBOX_HEIGHT);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n\r\n      curChatH = gridH - curPlayH;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // TYPE flex-direction: row\r\n    if (gridW > MIN_CHATBOX_WIDTH) {\r\n      curChatH = gridH;\r\n      curPlayW = Math.min(gridH * (1 / ratio), gridW - MIN_CHATBOX_WIDTH);\r\n      curPlayH = curPlayW * ratio;\r\n\r\n      curChatW = gridW - curPlayW;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"row\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[row] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // neither\r\n    if (gridH <= MIN_CHATBOX_HEIGHT && gridW <= MIN_CHATBOX_WIDTH) {\r\n      curPlayH = Math.min(gridW * ratio, gridH);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n      curChatW = 0;\r\n      curChatH = 0;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n  }\r\n\r\n  return { ...result };\r\n};\r\n\r\nexport const playSliderLeft =\r\n  (sliderIndex: number, numOfElements: number) => (dispatch: any) => {\r\n    let next = sliderIndex - 1;\r\n    if (next === 0) {\r\n      dispatch(setSlider({ next: numOfElements + 1, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: numOfElements, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n\r\nexport const playSliderRight =\r\n  (sliderIndex: number, numOfElements: number) => (dispatch: any) => {\r\n    let next = sliderIndex + 1;\r\n    if (next === numOfElements + 1) {\r\n      dispatch(setSlider({ next: 0, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: 1, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { history } from \"../..\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { enableFullScreen, exitFullScreen } from \"../../app/toggleFullScreen\";\r\nimport {\r\n  ChannelCardProps,\r\n  ChannelProps,\r\n  ChatboxIframe,\r\n  PlayerIframe,\r\n  TheaterElement,\r\n  TheaterState,\r\n} from \"../../app/types\";\r\nimport {\r\n  calcNewIframeSizeV2,\r\n  calcSingleIframeSize,\r\n  convertToChatboxIframe,\r\n  convertToPlayerIframe,\r\n  createChatboxIframe,\r\n  createPlayerIframe,\r\n  createTheaterElement,\r\n  getListAppendIframe,\r\n  getListRemoveIframe,\r\n  setIframeSize,\r\n} from \"./share\";\r\n\r\nconst initialState: TheaterState = {\r\n  fromChannel: [],\r\n  elements: [],\r\n  playlist: [],\r\n  chatlist: [],\r\n  slider: {\r\n    sliderIndex: 0,\r\n    isTakenOverAnim: false,\r\n    isFolded: false,\r\n    isFullScreen: false,\r\n  },\r\n  gridlayout: {\r\n    flexType: \"column\",\r\n    ratio: 0.5625,\r\n    clientWidth: 0,\r\n    clientHeight: 0,\r\n    col: 0,\r\n    row: 0,\r\n  },\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"theater\",\r\n  initialState,\r\n  reducers: {\r\n    setElements: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { channels: ChannelProps[] };\r\n      }\r\n    ) => {\r\n      const { channels } = action.payload;\r\n      if (channels.length === 0) {\r\n        state.elements = [];\r\n        state.slider.sliderIndex = 0;\r\n      }\r\n      const mp = new Map<string, boolean>();\r\n      state.playlist.forEach((p) => mp.set(p.cid, true));\r\n\r\n      // 進入Theater頁面後，會先獲取當前可以\"直播\"的頻道元素。\r\n      // 進入Theater頁面方式有兩種:\r\n      //    1) 透過NAV按鈕直接進入。\r\n      //    2) 透過點擊卡片進入，這種方式會自動播放卡片上的影片。\r\n      // 此處，檢查是否為(2)的方式，即檢查fromChannel，並再檢查後清除。\r\n      var found = 0;\r\n      var cidFromChannel: string = \"\";\r\n      if (state.fromChannel.length > 0) {\r\n        cidFromChannel = state.fromChannel[0].cid;\r\n      }\r\n\r\n      // 透過playlist中的元素，對應elements進行修改\r\n      const elements: TheaterElement[] = channels.map((ch, i) => {\r\n        if (ch.cid === cidFromChannel) {\r\n          found = i;\r\n          console.log(\"由FromChannel存在，NEW_sliderIndex: \", found);\r\n        }\r\n\r\n        // 逐一獲取成 TheaterElement\r\n        if (mp.get(ch.cid)) {\r\n          return createTheaterElement(ch, { checked: true });\r\n        } else {\r\n          return createTheaterElement(ch, { checked: false });\r\n        }\r\n      });\r\n\r\n      state.fromChannel = []; //每次都清空\r\n      state.elements = elements;\r\n      state.slider.sliderIndex = found + 1;\r\n    },\r\n    setSlider: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { next: number; isTakenOverAnim: boolean };\r\n      }\r\n    ) => {\r\n      const { next, isTakenOverAnim } = action.payload;\r\n      console.log(\r\n        `[setSlider] next:${next} , isTakenOverAnim:${isTakenOverAnim}`\r\n      );\r\n      state.slider.sliderIndex = next;\r\n      state.slider.isTakenOverAnim = isTakenOverAnim;\r\n    },\r\n    setSliderFolded: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: boolean;\r\n      }\r\n    ) => {\r\n      // 主動觸發一次resize\r\n      if (state.playlist.length > 0) {\r\n        console.log(\"resize on after sliderFold\");\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      }\r\n\r\n      state.slider.isFolded = action.payload;\r\n      console.log(`slider isFolded : ${action.payload}`);\r\n    },\r\n    setFullScreen: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: boolean;\r\n      }\r\n    ) => {\r\n      if (action.payload) {\r\n        enableFullScreen(document.body);\r\n      } else {\r\n        exitFullScreen();\r\n      }\r\n      state.slider.isFullScreen = action.payload;\r\n      console.log(`slider isFullScreen : ${action.payload}`);\r\n    },\r\n    resizeGridLayout: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          clientWidth: number;\r\n          clientHeight: number;\r\n        };\r\n      }\r\n    ) => {\r\n      const { clientWidth, clientHeight } = action.payload;\r\n      const ratio = state.gridlayout.ratio;\r\n      const numOfIframes = state.playlist.length;\r\n      const { flexType, pw, ph, cw, ch, col, row } = calcNewIframeSizeV2(\r\n        clientWidth,\r\n        clientHeight,\r\n        ratio,\r\n        numOfIframes\r\n      );\r\n      const { w: noChatWidth, h: noChatHeight } = calcSingleIframeSize(\r\n        clientWidth,\r\n        clientHeight,\r\n        row,\r\n        col,\r\n        ratio\r\n      );\r\n\r\n      let newPlayerList: PlayerIframe[] = [];\r\n      let newChatboxList: ChatboxIframe[] = [];\r\n\r\n      state.chatlist.forEach((chatbox, i) => {\r\n        const player = state.playlist[i];\r\n        if (chatbox.isEnable) {\r\n          newPlayerList.push(setIframeSize(player, { w: pw, h: ph }));\r\n          newChatboxList.push(setIframeSize(chatbox, { w: cw, h: ch }));\r\n          // playerSize.push({ w: pw, h: ph });\r\n          // chatboxSize.push({ w: cw, h: ch });\r\n        } else {\r\n          newPlayerList.push(\r\n            setIframeSize(player, { w: noChatWidth, h: noChatHeight })\r\n          );\r\n          newChatboxList.push(setIframeSize(chatbox, { w: 0, h: 0 }));\r\n          // playerSize.push({ w: noChatWidth, h: noChatHeight });\r\n          // chatboxSize.push({ w: 0, h: 0 });\r\n        }\r\n      });\r\n\r\n      state.playlist = newPlayerList;\r\n      state.chatlist = newChatboxList;\r\n\r\n      state.gridlayout = {\r\n        flexType,\r\n        ratio,\r\n        clientWidth,\r\n        clientHeight,\r\n        col,\r\n        row,\r\n      };\r\n    },\r\n    setFromChannel: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { item: ChannelCardProps };\r\n      }\r\n    ) => {\r\n      const { item } = action.payload;\r\n      const newPlayerIframe = convertToPlayerIframe(item, {\r\n        w: 0,\r\n        h: 0,\r\n      });\r\n      const newChatboxIframe = convertToChatboxIframe(item, {\r\n        w: 0,\r\n        h: 0,\r\n        isEnable: item.status === \"live\",\r\n      });\r\n      state.fromChannel = [item];\r\n      state.playlist = [newPlayerIframe];\r\n      state.chatlist = [newChatboxIframe];\r\n      history.push({ pathname: \"/theater\" });\r\n    },\r\n    appendIframeToPlaylist: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { item: TheaterElement };\r\n      }\r\n    ) => {\r\n      const { item } = action.payload;\r\n      const newItem: TheaterElement = { ...item, checked: true };\r\n      const newElements: TheaterElement[] = state.elements.map((e) =>\r\n        e.cid === item.cid ? newItem : e\r\n      );\r\n\r\n      const newPlaylist: PlayerIframe[] = getListAppendIframe(\r\n        state.playlist,\r\n        createPlayerIframe(newItem, { w: 0, h: 0 })\r\n      );\r\n\r\n      const newChatlist: ChatboxIframe[] = getListAppendIframe(\r\n        state.chatlist,\r\n        createChatboxIframe(newItem, { w: 0, h: 0, isEnable: true })\r\n      );\r\n\r\n      state.elements = newElements;\r\n      state.playlist = newPlaylist;\r\n      state.chatlist = newChatlist;\r\n\r\n      if (state.playlist.length > 0) {\r\n        console.log(\"resize on after appendIframeToPlaylist\");\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      }\r\n    },\r\n    removeIframeFromPlaylist: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { item: TheaterElement };\r\n      }\r\n    ) => {\r\n      const { item } = action.payload;\r\n      const newItem: TheaterElement = { ...item, checked: false };\r\n      const newElements: TheaterElement[] = state.elements.map((e) =>\r\n        e.cid === item.cid ? newItem : e\r\n      );\r\n      state.elements = newElements;\r\n      state.playlist = getListRemoveIframe(state.playlist, item.cid);\r\n      state.chatlist = getListRemoveIframe(state.chatlist, item.cid);\r\n\r\n      if (state.playlist.length > 0) {\r\n        console.log(\"resize on after removeIframeFromPlaylist\");\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      }\r\n    },\r\n    removeIframeByCid: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { cid: string };\r\n      }\r\n    ) => {\r\n      const { cid } = action.payload;\r\n\r\n      // 透過關閉元素的cid，找出對應在Slider上的元素，連同設置為關閉狀態。\r\n      if (state.elements.length > 0) {\r\n        state.elements = state.elements.map((e) =>\r\n          e.cid === cid ? { ...e, checked: false } : e\r\n        );\r\n      }\r\n\r\n      state.playlist = getListRemoveIframe(state.playlist, cid);\r\n      state.chatlist = getListRemoveIframe(state.chatlist, cid);\r\n\r\n      if (state.playlist.length > 0) {\r\n        console.log(\"resize on after removeIframeByCid\");\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      }\r\n    },\r\n    switchChatBoxByCid: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { cid: string };\r\n      }\r\n    ) => {\r\n      const { cid } = action.payload;\r\n\r\n      // 透過關閉元素的cid，找出對應在Slider上的元素，連同設置為關閉狀態。\r\n      state.chatlist = state.chatlist.map((c: ChatboxIframe) =>\r\n        c.cid === cid ? { ...c, isEnable: !c.isEnable } : c\r\n      );\r\n\r\n      if (state.playlist.length > 0) {\r\n        console.log(\"resize on after switchChatBoxByCid\");\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setElements,\r\n  setSlider,\r\n  setSliderFolded,\r\n  setFullScreen,\r\n  resizeGridLayout,\r\n  setFromChannel,\r\n  appendIframeToPlaylist,\r\n  removeIframeFromPlaylist,\r\n  removeIframeByCid,\r\n  switchChatBoxByCid,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const selectTheater = (state: RootState): TheaterState => state.theater;\r\nexport const selectElements = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.elements\r\n);\r\nexport const selectPlaylist = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.playlist\r\n);\r\nexport const selectPlayPairs = createSelector([selectTheater], (theater) => {\r\n  const playlist = theater.playlist;\r\n  const chatlist = theater.chatlist;\r\n  const len = playlist.length;\r\n  const result = [];\r\n  for (let i = 0; i < len; i++) {\r\n    result.push({ player: playlist[i], chatbox: chatlist[i] });\r\n  }\r\n  return result;\r\n});\r\nexport const selectGridLayout = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.gridlayout\r\n);\r\nexport const selectSlider = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.slider\r\n);\r\nexport const selectNumOfElements = createSelector(\r\n  [selectElements],\r\n  (elements) => elements.length\r\n);\r\nexport const selectSliderElements = createSelector(\r\n  [selectElements],\r\n  (elements) =>\r\n    elements.length > 0\r\n      ? [elements[elements.length - 1], ...elements, elements[0]]\r\n      : []\r\n);\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { NavItemProps } from \"../../app/types\";\r\nimport { NavBrowser, NavTheater, NavUser, NavCollections } from \"../NavButtons\";\r\nimport { selectSlider } from \"../../features/theater/slice\";\r\nimport { useSelector } from \"../../app/hooks\";\r\n\r\nexport default function Navbar() {\r\n  const [isEnable, setIsEnable] = useState(false);\r\n  const { isFolded } = useSelector(selectSlider);\r\n\r\n  const closeMenu = () => {\r\n    setIsEnable(!isEnable);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Nav isFolded={isFolded}>\r\n        <Logo>\r\n          <p>LowkeyDD</p>\r\n        </Logo>\r\n        <Menu isEnable={isEnable}>\r\n          <ToogleNavBkg onClick={closeMenu}>\r\n            <div>\r\n              <ai.AiOutlineMenu />\r\n            </div>\r\n          </ToogleNavBkg>\r\n          <ul>\r\n            <ToogleNavBkg onClick={closeMenu}>\r\n              <div>\r\n                <ai.AiOutlineClose />\r\n              </div>\r\n            </ToogleNavBkg>\r\n            <NavBrowser {...NavItemList[0]} closeMenu={closeMenu} />\r\n            <NavTheater {...NavItemList[1]} closeMenu={closeMenu} />\r\n            <NavUser {...NavItemList[2]} closeMenu={closeMenu} />\r\n            <NavCollections {...NavItemList[3]} closeMenu={closeMenu} />\r\n          </ul>\r\n        </Menu>\r\n      </Nav>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst NavItemList: NavItemProps[] = [\r\n  {\r\n    title: \"瀏覽\",\r\n    path: \"/channels/\",\r\n    icon: <ai.AiOutlineHeart />,\r\n  },\r\n  {\r\n    title: \"影院\",\r\n    path: \"/theater/\",\r\n    icon: <ai.AiOutlineVideoCamera />,\r\n  },\r\n  {\r\n    title: \"會員\",\r\n    path: \"/login/\",\r\n    icon: <ai.AiOutlineUser />,\r\n  },\r\n  {\r\n    title: \"收藏\",\r\n    path: \"/visit/\",\r\n    icon: <ai.AiOutlineBook />,\r\n  },\r\n];\r\n\r\nconst Container = styled.div`\r\n  position: fixed; //這樣才能讓NAV固定在畫面上\r\n  width: 100%;\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --logoColor: #fff;\r\n  z-index: 7;\r\n`;\r\n\r\nconst Nav = styled.nav<{isFolded : boolean}>`\r\n  position: relative;\r\n  top: ${p=>p.isFolded ? `-65px`:`0px`};\r\n  background-color: var(--navColor);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  padding: 0 1rem;\r\n  background: none;\r\n  width: 150px; // 由內部logo字體決定寬度\r\n  height: 65px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  z-index: 1;\r\n  p {\r\n    color: var(--logoColor);\r\n    font-size: 25px;\r\n    letter-spacing: 2px;\r\n  }\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.ul<{ isEnable: boolean }>`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  width: 100%; //剩下的部分\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  ul {\r\n    position: relative;\r\n    /* background-color: #0051ff; */\r\n    width: 100%; //剩下的部分\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    ul {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      background-color: var(--menuBgColor);\r\n      width: 380px;\r\n      height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n      padding: 65px 0 0 0;\r\n      transform: ${(props) =>\r\n        props.isEnable ? `translateX(0%)` : `translateX(-100%)`};\r\n      transition: transform 0.2s ease-in;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToogleNavBkg = styled.div`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  color: var(--toogleColor);\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%; //用它來當作NAV的底層\r\n  height: 65px;\r\n  font-size: 40px;\r\n  div {\r\n    display: none;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    div {\r\n      width: 65px;\r\n      height: 65px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      :hover {\r\n        background-color: var(--toogleColor);\r\n        color: var(--logoColor);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport { ReactElement, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"../../app/hooks\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { setFromChannel } from \"../theater/slice\";\r\nimport styled from \"styled-components\";\r\nimport { setChannelCard, setSearchResult } from \"./slice\";\r\nimport { CHANNELS_DEFAULT_GROUPNAME } from \"../../app/config\";\r\n\r\nexport function ChannelCard(props: ChannelCardProps) {\r\n  const {\r\n    avatar,\r\n    // cname,\r\n    cid,\r\n    owner,\r\n    status,\r\n    // streamurl,\r\n    thumbnail,\r\n    title,\r\n    viewcount,\r\n    starttime,\r\n    // method,\r\n    // updatetime,\r\n    group: groupName,\r\n    heart,\r\n  } = props;\r\n  const item = props;\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const avatarStyles = getAvatarStyles(status);\r\n  const heartStyles = getHeartTheme(status, heart);\r\n  const previewStyles = getPreviewImage(cid, status, thumbnail, isVisible);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEnterTheater = () => {\r\n    // 當點選頻道進入Theater。\r\n    if (status !== \"failure\" && status !== \"error\") {\r\n      dispatch(setFromChannel({ item }));\r\n    }\r\n  };\r\n\r\n  const onFavoredHeartBtnClick = () => {\r\n    const card: ChannelCardProps = { ...props, heart: !heart };\r\n    if (groupName === \"Search Result\") {\r\n      dispatch(\r\n        setSearchResult({\r\n          current: { ...props, heart: !heart },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        setChannelCard({\r\n          card,\r\n          options: {\r\n            isChanged: false,\r\n            isNewAdded: groupName === CHANNELS_DEFAULT_GROUPNAME,\r\n            isDeleted: false,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const parentDom = ref.current;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsVisible(entry.isIntersecting);\r\n    });\r\n    if (parentDom) {\r\n      observer.observe(parentDom);\r\n    }\r\n    return () => {\r\n      if (parentDom) {\r\n        observer.unobserve(parentDom);\r\n      }\r\n      observer.disconnect();\r\n    };\r\n  }, [ref, isVisible]);\r\n\r\n  // console.log(\"owner: \", owner, \"status: \", status);\r\n\r\n  return (\r\n    <Container ref={ref}>\r\n      <AvatarBox {...avatarStyles}>\r\n        <img src={isVisible ? avatar : undefined} alt={\"avatar_\" + cid} />\r\n        <div>\r\n          <h1>{status}</h1>\r\n        </div>\r\n      </AvatarBox>\r\n      <FavoredHeartBtn onClick={onFavoredHeartBtnClick} {...heartStyles}>\r\n        {heartStyles.icon}\r\n      </FavoredHeartBtn>\r\n      <CardBody>\r\n        <PreviewBox {...previewStyles} onClick={handleEnterTheater}>\r\n          {previewStyles.image}\r\n        </PreviewBox>\r\n        <Description>\r\n          <Owner>\r\n            <h1>{owner}</h1>\r\n          </Owner>\r\n          <ChTitle>\r\n            <p>{title}</p>\r\n          </ChTitle>\r\n          <Detail>\r\n            <Left>\r\n              <ai.AiOutlineEye />\r\n              <p>{viewcount}</p>\r\n            </Left>\r\n            <Right>\r\n              <ai.AiOutlineCalendar />\r\n              <p>{status === \"live\" ? \"直播中\" : starttime}</p>\r\n            </Right>\r\n          </Detail>\r\n        </Description>\r\n      </CardBody>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --bkgColor: #fff;\r\n\r\n  /* background-color: #999; */\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\ntype AvatarStyle = {\r\n  fontcolor: string;\r\n  fontbgcolor: string;\r\n  bordercolor: string;\r\n  ishidden: boolean;\r\n};\r\n\r\nconst getAvatarStyles = (status: string): AvatarStyle => {\r\n  switch (status) {\r\n    case \"live\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#ee5253\",\r\n        bordercolor: \"#f00\",\r\n        ishidden: false,\r\n      };\r\n    case \"wait\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#34afeb\",\r\n        bordercolor: \"#6a97ad\",\r\n        ishidden: false,\r\n      };\r\n    case \"off\":\r\n      return {\r\n        fontcolor: \"#f9fae6\",\r\n        fontbgcolor: \"#616161\",\r\n        bordercolor: \"#616161\",\r\n        ishidden: false,\r\n      };\r\n    default:\r\n      return {\r\n        fontcolor: \"#f0d8e2\",\r\n        fontbgcolor: \"#cb4ede\",\r\n        bordercolor: \"#6c3075\",\r\n        ishidden: true,\r\n      };\r\n  }\r\n};\r\n\r\nconst AvatarBox = styled.div<AvatarStyle>`\r\n  display: ${(p) => (p.ishidden ? `none` : `static`)};\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: none;\r\n  pointer-events: none;\r\n  img {\r\n    width: 4.8em;\r\n    border: 5px solid ${(p) => p.fontbgcolor};\r\n    border-radius: 50%;\r\n  }\r\n  div {\r\n    position: relative;\r\n    background: none;\r\n    top: -12px;\r\n    left: 0;\r\n    width: 100%;\r\n    padding: 3px 0;\r\n    h1 {\r\n      margin: auto;\r\n      width: 48px;\r\n      padding: 1px 1px;\r\n      color: ${(p) => p.fontcolor};\r\n      background-color: ${(p) => p.fontbgcolor};\r\n      text-align: center;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n`;\r\n\r\ntype HeartThemeType = {\r\n  color: string;\r\n  hoverColor: string;\r\n  icon: any;\r\n  isHidden: boolean;\r\n};\r\nexport const getHeartTheme = (\r\n  status: string,\r\n  heart: boolean\r\n): HeartThemeType => {\r\n  switch (status) {\r\n    case \"failure\":\r\n    case \"error\":\r\n      return {\r\n        color: \"\",\r\n        hoverColor: \"\",\r\n        icon: null,\r\n        isHidden: true,\r\n      };\r\n    default:\r\n      return heart === true\r\n        ? {\r\n            color: \"#ee5253\",\r\n            hoverColor: \"#ee5253\",\r\n            icon: <ai.AiFillHeart />,\r\n            isHidden: false,\r\n          }\r\n        : {\r\n            color: \"#aaa\",\r\n            hoverColor: \"#ee5253\",\r\n            icon: <ai.AiOutlineHeart />,\r\n            isHidden: false,\r\n          };\r\n  }\r\n};\r\n\r\nconst FavoredHeartBtn = styled.div<HeartThemeType>`\r\n  display: ${(p) => (p.isHidden ? `none` : `static`)};\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  right: 0.5em;\r\n  top: 2.5em;\r\n  z-index: 1;\r\n\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: none;\r\n\r\n  svg {\r\n    font-size: 35px;\r\n    color: ${(p) => p.color};\r\n    transition: 0.1s;\r\n  }\r\n\r\n  :hover {\r\n    svg {\r\n      font-size: 38px;\r\n      color: ${(p) => p.hoverColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  background-color: var(--navColor);\r\n  border-radius: 1.2em;\r\n  margin: 10px 10px;\r\n`;\r\n\r\ntype PreviewBoxProps = {\r\n  isEnabled: boolean; // 允許點擊\r\n  image: ReactElement;\r\n};\r\nconst getPreviewImage = (\r\n  cid: string,\r\n  status: string,\r\n  thumbnail: string,\r\n  isVisible: boolean\r\n): PreviewBoxProps => {\r\n  switch (status) {\r\n    case \"failure\":\r\n      return {\r\n        isEnabled: false,\r\n        image: (\r\n          <div>\r\n            <ai.AiFillFrown />\r\n            <h1>獲取頻道訊息發生錯誤</h1>\r\n          </div>\r\n        ),\r\n      };\r\n    case \"error\":\r\n      return {\r\n        isEnabled: false,\r\n        image: (\r\n          <div>\r\n            <ai.AiFillExclamationCircle />\r\n            <h1>輸入的網址格式有誤?</h1>\r\n            <p>可參考下方的網址範例 : </p>\r\n            <p>https://www.twitch.tv/xxxx</p>\r\n            <p>https://www.youtube.com/channel/xxxx</p>\r\n          </div>\r\n        ),\r\n      };\r\n    default:\r\n      return {\r\n        isEnabled: true,\r\n        image: (\r\n          <div>\r\n            <img\r\n              src={isVisible ? thumbnail : undefined}\r\n              alt={\"thumbnail_\" + cid}\r\n            />\r\n          </div>\r\n        ),\r\n      };\r\n  }\r\n};\r\nconst PreviewBox = styled.a<PreviewBoxProps>`\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  //點擊後將跳轉到Theater\r\n  cursor: ${(p) => (p.isEnabled ? `pointer` : `auto`)};\r\n\r\n  div {\r\n    background-color: #000;\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 15rem;\r\n    // 透過hidden把超出範圍的圖片直接剪裁掉\r\n    overflow: hidden;\r\n    border-radius: 1.2em;\r\n    box-sizing: border-box;\r\n\r\n    color: var(--toogleColor);\r\n\r\n    // 頻道正確顯示時\r\n    img {\r\n      width: 99.9%;\r\n      border-radius: 6px;\r\n    }\r\n\r\n    // 錯誤提示訊息\r\n    svg {\r\n      margin: 0 0 10px 0;\r\n      font-size: 150px;\r\n    }\r\n    h1 {\r\n      font-size: 18px;\r\n      margin: 0 0 10px 0;\r\n    }\r\n    p {\r\n      font-size: 1.5vmin;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  /* background-color: royalblue; */\r\n\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 6px auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Owner = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  margin: 0 0 10px;\r\n  height: 56px;\r\n  border-bottom: 1px solid silver;\r\n\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  h1 {\r\n    font-size: 26px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n    letter-spacing: 5px;\r\n  }\r\n`;\r\n\r\nconst ChTitle = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  p {\r\n    /* background-color: royalblue; */\r\n    font-size: 16px;\r\n    line-height: 25px;\r\n    padding: 0 20px;\r\n    height: 50px;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n\r\nconst Detail = styled.div`\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  div {\r\n    height: 40px;\r\n    flex: 1;\r\n    background-color: var(--toogleColor);\r\n    padding: 5px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  margin: 0 2px 0 5px;\r\n  border-radius: 0 0 0 15px;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    letter-spacing: 1px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  margin: 0 5px 0 2px;\r\n  border-radius: 0 0 15px 0;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  groupName: string;\r\n  fontsize: string;\r\n  lineColor?: string;\r\n  bkgColor?: string;\r\n};\r\n\r\nexport default function GroupLine(props: Props) {\r\n  const { groupName } = props;\r\n  return (\r\n    <Container {...props}>\r\n      <span>{groupName}</span>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.h1<Props>`\r\n  --lineColor: ${(p) => p.lineColor || `#000`};\r\n  --bkgColor: ${(p) => p.bkgColor || `#fff`};\r\n\r\n  margin: 50px 0 20px 0;\r\n  position: relative;\r\n  text-align: center;\r\n  font-size: ${(p) => p.fontsize};\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  z-index: 1;\r\n  line-height: 50px;\r\n  ::before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  ::after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    right: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  span {\r\n    padding: 0 10px;\r\n    color: var(--lineColor);\r\n    background-color: var(--bkgColor);\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { ChannelCard } from \"./ChannelCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\n\r\nexport function ChannelCardsGroup(props: {\r\n  cards: ChannelCardProps[];\r\n  groupName: string;\r\n}) {\r\n  const { cards, groupName } = props;\r\n\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"40px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#fff\"}\r\n      />\r\n      <ChannelGridCantainer key={\"ChannelGridCantainer_\" + groupName}>\r\n        {cards.map((ch: ChannelCardProps) => (\r\n          <ChannelCard\r\n            key={`ChannelCard_${ch.cid}`}\r\n            {...ch}\r\n            group={groupName}\r\n          />\r\n        ))}\r\n      </ChannelGridCantainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ChannelGridCantainer = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #fff;\r\n\r\n\r\n  display: grid;\r\n  grid-gap: 4px;\r\n  grid-template-columns: repeat(auto-fill, minmax(310px, 1fr));\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 360px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import { useSelector } from \"../../app/hooks\";\r\nimport { selectChannelCardStore } from \"./slice\";\r\nimport { ChannelCardsGroup } from \"./ChannelCardsGroup\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { Fragment } from \"react\";\r\n\r\n/**\r\n * 瀏覽頻道，顯示當前可被瀏覽頻道內容。\r\n */\r\nexport function ChannelCardsBrowser() {\r\n  const { group, clusters } = useSelector(selectChannelCardStore);\r\n  const view = clusters.filter((cs) => cs !== null);\r\n\r\n  return (\r\n    <>\r\n      {view.map((cards, i) =>\r\n        // 收到的頻道資料會透過group清單，以此查找出其所對應的組別\r\n        GetChannelCardsGroup(cards, group[i])\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst GetChannelCardsGroup = (\r\n  cards: ChannelCardProps[],\r\n  groupName: string\r\n): JSX.Element => {\r\n  // groupName =\r\n  //   groupName === VISITS_DEFAULT_GROUPNAME\r\n  //     ? CHANNELS_DEFAULT_GROUPNAME\r\n  //     : groupName;\r\n  // console.log(\"GetChannelCardsGroup groupName\", groupName);\r\n  if (cards.length === 0) {\r\n    return <Fragment key={\"ChannelCardsGroup_\" + groupName} />;\r\n  } else {\r\n    return (\r\n      <ChannelCardsGroup\r\n        key={\"ChannelCardsGroup_\" + groupName}\r\n        cards={cards}\r\n        groupName={groupName}\r\n      />\r\n    );\r\n  }\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function SearchBox(props: SearchBoxProps) {\r\n  // 取得樣式設定參數\r\n  const { theme } = props;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n  const searchInput = useRef<HTMLInputElement>(null);\r\n\r\n  // 輸入查詢功能\r\n  const handleKeyUp = (e: any) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n\r\n    // 按下enter鍵，提交數據\r\n    commit();\r\n  };\r\n\r\n  const commit = () => {\r\n    if (searchInput.current != null) {\r\n      props.onSubmit(searchInput.current.value);\r\n    } else {\r\n      console.error(\"searchInput 不存在\");\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    if (searchInput.current && searchInput.current.value !== \"\") {\r\n      setIsEnable(true);\r\n    } else {\r\n      setIsEnable(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container {...theme} isEnable={isEnable}>\r\n      <input\r\n        onChange={onChange}\r\n        onKeyUp={handleKeyUp}\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n        placeholder=\"(๑•̀ㅂ•́)و✧ 輸入喜歡的頻道網址 !!! \"\r\n        ref={searchInput}\r\n      />\r\n      <button onClick={commit}>\r\n        <ai.AiOutlineSearch style={{ fontSize: \"1.5rem\" }} />\r\n      </button>\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SearchBoxProps = {\r\n  theme?: SearchBoxThemeProps;\r\n  onSubmit: (inputValue: string) => void;\r\n};\r\n\r\ntype SearchBoxThemeProps = {\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n};\r\n\r\nexport const Container = styled.div<{\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n  isEnable: boolean;\r\n}>`\r\n  --height: 2.4rem;\r\n  --width: 2.4rem;\r\n  --bgColor: #2f3640;\r\n  --iconColor: ${(props) => props.iconColor || \"#e84118\"};\r\n  --focusColor: ${(props) => props.focusColor || \"#fff\"};\r\n  background: var(--bgColor);\r\n  width: ${(p) => (p.isEnable ? `100%` : `var(--width)`)};\r\n  height: var(--height);\r\n  border-radius: var(--height);\r\n  padding: calc(var(--height) / 4);\r\n  transition: width 0.4s;\r\n\r\n  input {\r\n    border: none;\r\n    background: none;\r\n    outline: none;\r\n    float: left;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    line-height: var(--height);\r\n    border-radius: var(--height);\r\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n    padding: ${(p) => (p.isEnable ? `0 1rem` : `0px`)};\r\n    width: ${(p) => (p.isEnable ? `80%` : `0%`)};\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  button {\r\n    color: var(--iconColor);\r\n    float: right;\r\n    width: var(--width);\r\n    height: var(--height);\r\n    border-radius: 50%;\r\n    background-color: ${(p) =>\r\n    p.isEnable ? `var(--focusColor)` : `var(--bgColor)`};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    :hover{\r\n\r\n    }\r\n  }\r\n\r\n  :focus-within {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n`;\r\n\r\n// const SearchInput = styled.input`\r\n//     border: none;\r\n//     background: none;\r\n//     outline: none;\r\n//     float: left;\r\n//     color: #fff;\r\n//     font-size: 16px;\r\n//     line-height: var(--height);\r\n//     border-radius: var(--height);\r\n//     box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n//     padding: 0px;\r\n//     width: 0%;\r\n//     transition: all 0.4s;\r\n// `;\r\n\r\n// const SearchButton = styled.a`\r\n//   color: var(--iconColor);\r\n//   float: right;\r\n//   width: var(--width);\r\n//   height: var(--height);\r\n//   border-radius: 50%;\r\n//   background-color: var(--bgColor);\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n// `;\r\n","import axios from \"axios\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { ChannelProps, VisitItem } from \"../../../app/types\";\r\nimport { setStore } from \"../slice\";\r\n\r\nexport const reqFetchChannels =\r\n  (username: string, ssid: string, tags: string[]) => (dispatch: any) => {\r\n    // 避免tags為空\r\n    if (tags.length === 0) {\r\n      console.error(\"tags不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    // 搜尋內容為空時會被撤回\r\n    if (tags[0] === \"\") {\r\n      console.error(\"搜尋內容不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    const request = new FormData();\r\n    request.append(\"username\", username);\r\n    request.append(\"ssid\", ssid);\r\n    request.append(\"tags\", JSON.stringify(tags));\r\n\r\n    console.log(\"getLetsddV2Channels, tags: \", [tags]);\r\n    axios.post(`${API_SERVER_URL}/letsdd/v2`, request).then(\r\n      (response) => {\r\n        console.log(\"成功了, 回應如下:\\n\", response.data);\r\n        const channels: ChannelProps[][] = response.data[\"channels\"];\r\n        const group: string[] = response.data[\"group\"];\r\n        const list: VisitItem[] = response.data[\"list\"];\r\n \r\n\r\n        // 檢驗收到的資料，如果沒有傳送AUTH或驗證失敗，會收到空的group清單。\r\n\r\n        if (group.length === 0 && channels.length === 1) {\r\n          // 使用預設的群組名稱為此頻道來命名。\r\n          dispatch(\r\n            setStore({\r\n              channels: [[], ...channels],\r\n              group: [VISITS_DEFAULT_GROUPNAME, CHANNELS_DEFAULT_GROUPNAME],\r\n              tags,\r\n              list,\r\n            })\r\n          );\r\n        } else {\r\n          // 使用收到的group清單。\r\n          dispatch(\r\n            setStore({\r\n              channels,\r\n              group: group.concat(CHANNELS_DEFAULT_GROUPNAME),\r\n              tags,\r\n              list,\r\n            })\r\n          );\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", error);\r\n      }\r\n    );\r\n  };\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { VisitList } from \"../../../app/types\";\r\nimport { reqFetchChannels } from \"./reqFetchChannels\";\r\n\r\nexport const reqUpdateVisit =\r\n  (username: string, ssid: string, visit: VisitList, tags: string[]) =>\r\n  (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    postform.append(\"visit\", JSON.stringify({ ...visit }));\r\n    axios.post(`${API_SERVER_URL}/visit/update`, postform).then(\r\n      (resp) => {\r\n        console.log(\"更新VisitList, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        // const visit: VisitList = resp.data[\"visit\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          console.log(\"更新VisitList成功了, msg:\\n\", msg);\r\n          // const newList = visit.list || [];\r\n          // const newGroup = visit.group || [];\r\n        } else {\r\n          console.log(\"更新VisitList失敗了, msg:\\n\", msg);\r\n        }\r\n        setTimeout(() =>\r\n          (function (username, ssid, tags) {\r\n            dispatch(reqFetchChannels(username, ssid, tags));\r\n            history.push({ pathname: \"/channels/\" });\r\n          })(username, ssid, tags)\r\n        );\r\n      },\r\n      (err) => {\r\n        console.log(\"更新VisitList失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import SearchBox from \"../../components/SearchBox\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { reqFetchChannels } from \"./api\";\r\nimport { reqSearchChannel } from \"./api/reqSearchChannel\";\r\nimport { selectUser } from \"../user/slice\";\r\n\r\nexport function ChannelSearch() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (keyword: string) => {\r\n    if (keyword === \"\") return\r\n    if (\r\n      keyword === \"all\" ||\r\n      keyword === \"live\" ||\r\n      keyword === \"wait\" ||\r\n      keyword === \"off\" ||\r\n      keyword === \"failure\"\r\n    ) {\r\n      dispatch(reqFetchChannels(username, ssid, [keyword]));\r\n    }else{\r\n      dispatch(reqSearchChannel(keyword))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchBox\r\n      onSubmit={onSubmit}\r\n      theme={{ focusColor: \"#1985a1\", iconColor: \"#c5c3c6\" }}\r\n    />\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { ChannelProps } from \"../../../app/types\";\r\nimport { createChannelCard } from \"../share\";\r\nimport { setSearchResult } from \"../slice\";\r\n\r\nexport const reqSearchChannel = (url: string) => (dispatch: any) => {\r\n  const postform = new FormData();\r\n  postform.append(\"url\", url);\r\n  axios.post(`${API_SERVER_URL}/channels/search`, postform).then(\r\n    (resp) => {\r\n      console.log(\"[ChanelSearch]成功了, 回應如下:\\n\", resp.data);\r\n      const code: string = resp.data[\"code\"];\r\n      const ch: ChannelProps = resp.data[\"channels\"][0];\r\n\r\n      switch (code) {\r\n        case \"success\":\r\n          console.log(`成功獲取頻道 ${ch.cname} \\n`);\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(ch, {\r\n                group: \"Search Result\",\r\n                heart: false,\r\n              }),\r\n            })\r\n          );\r\n          break;\r\n        case \"failure\":\r\n          console.log(\r\n            `獲取頻道 ${ch.cname} 失敗，請確認該頻道是否已經沒有內容或受到閱覽限制\\n`\r\n          );\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(\r\n                { ...ch, status: \"failure\" },\r\n                {\r\n                  group: \"Search Failed\",\r\n                  heart: false,\r\n                }\r\n              ),\r\n            })\r\n          );\r\n          break;\r\n        default:\r\n          console.log(\"作為搜尋頻道的連結格式有誤，請參考以下: \\n\");\r\n          console.log(\"Youtube : https://www.youtube.com/channel/xxxxxxx\\n\");\r\n          console.log(\"twitch  : https://www.twitch.tv/xxxxxx\\n\");\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(\r\n                { ...ch, status: \"error\" },\r\n                {\r\n                  group: \"Search Error\",\r\n                  heart: false,\r\n                }\r\n              ),\r\n            })\r\n          );\r\n          break;\r\n      }\r\n    },\r\n    (err) => {\r\n      console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n    }\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default function SwitchBtn(props: SwitchButtonProps) {\r\n  const { checked, htmlFor, theme } = props;\r\n\r\n  const handleClick = () => {\r\n    props.handleSwitchClick({ tag: htmlFor, isChecked: !checked });\r\n  };\r\n  \r\n  return (\r\n    <Container {...theme}>\r\n      <HiddenCheckedInput\r\n        type=\"checkbox\"\r\n        id={htmlFor || \"\"}\r\n        onClick={handleClick}\r\n      />\r\n      <ToogleFill checked={checked} />\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SwitchButtonProps = {\r\n  htmlFor: string;\r\n  checked: boolean;\r\n  theme?: SwitchButtonThemeProps;\r\n  handleSwitchClick: (action: { tag: string; isChecked: boolean }) => void;\r\n};\r\n\r\ntype SwitchButtonThemeProps = {\r\n  beforeColor?: string;\r\n  afterColor?: string;\r\n  ballColor?: string;\r\n};\r\n\r\nconst Container = styled.label<SwitchButtonThemeProps>`\r\n  --width: 32px;\r\n  --height: calc(var(--width) / 2);\r\n  --radius: calc(var(--height) / 2);\r\n  --beforeColor: ${(props) => props.beforeColor || \"#ddd\"};\r\n  --afterColor: ${(props) => props.afterColor || \"#34deeb\"};\r\n  --ballColor: ${(props) => props.ballColor || \"#fff\"};\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ToogleFill = styled.div<{ checked: boolean }>`\r\n  /* 底色 */\r\n  position: relative;\r\n  width: var(--width);\r\n  height: var(--height);\r\n  border-radius: var(--radius);\r\n  background: ${(props) =>\r\n    props.checked ? `var(--afterColor)` : `var(--beforeColor)`};\r\n  transition: background 0.2s;\r\n\r\n  /* 球球與陰影效果 */\r\n  ::after {\r\n    /* 透過after實現了相對內部移動的效果 */\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: var(--height);\r\n    width: var(--height);\r\n    background: var(--ballColor);\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\r\n    border-radius: var(--radius);\r\n    transform: ${(props) =>\r\n      props.checked ? `translateX(110%)` : `translateX(0%)`};\r\n    transition: transform 0.5s;\r\n  }\r\n`;\r\n\r\nconst HiddenCheckedInput = styled.input`\r\n  display: none;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport SwitchBtn from \"../../components/SwitchBtn\";\r\nimport { SwitcherList } from \"../../app/config\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { selectUser } from \"../user/slice\";\r\nimport { selectTags } from \"./slice\";\r\nimport { reqFetchChannels } from \"./api\";\r\n\r\nexport function ChannelTagsSwitchers() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const dispatch = useDispatch();\r\n  console.log({ tags });\r\n\r\n  const handleSwitchClick = (action: { tag: string; isChecked: boolean }) => {\r\n    const { tag, isChecked } = action;\r\n    if (isChecked) {\r\n      if (!tags.includes(tag)) {\r\n        dispatch(reqFetchChannels(username, ssid, [...tags, tag]));\r\n      }\r\n    } else {\r\n      const newtags = tags.filter((_tag) => _tag !== tag);\r\n      dispatch(reqFetchChannels(username, ssid, newtags));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {SwitcherList.map((tag, _) => {\r\n        const { htmlFor, afterColor } = tag;\r\n        const checked = tags.indexOf(htmlFor) > -1;\r\n        return (\r\n          <SwitchBtnBox key={\"SwitchBtnBox_\" + htmlFor}>\r\n            <p>{htmlFor}</p>\r\n            <SwitchBtn\r\n              htmlFor={htmlFor}\r\n              checked={checked}\r\n              theme={{ afterColor }}\r\n              handleSwitchClick={handleSwitchClick}\r\n            />\r\n          </SwitchBtnBox>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst SwitchBtnBox = styled.div`\r\n  margin: 0 0.5rem;\r\n  height: 2.4rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  p {\r\n    margin-right: 6px;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    color: #eee;\r\n  }\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { setFavoredList, selectChannelCardStore } from \"./slice\";\r\n\r\nexport function FavoredCard(props: FavoredItem) {\r\n  const {\r\n    cid: Cid,\r\n    group: groupName,\r\n    owner,\r\n    cname,\r\n    avatar,\r\n    isDeleted,\r\n    isNewAdded,\r\n  } = props;\r\n  const { favoredList: list, group } = useSelector(selectChannelCardStore);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getEditedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.filter(\r\n      (item: FavoredItem) => item.cid !== newItem.cid\r\n    );\r\n    return [newItem, ...newList];\r\n  };\r\n\r\n  const getDeletedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.map((item: FavoredItem) =>\r\n      item.cid !== newItem.cid ? item : newItem\r\n    );\r\n    return [...newList];\r\n  };\r\n\r\n  const handleGroupEdit = () => {\r\n    // 取得新的狀態\r\n    const newGroupName = window.prompt(\"指定為新的群組? \", groupName);\r\n\r\n    if (newGroupName == null) {\r\n      return;\r\n    }\r\n    if (newGroupName === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n\r\n    // 加入到新的群組\r\n    if (newGroupName !== groupName) {\r\n      // 修改該元素的群組屬性\r\n      const newList: FavoredItem[] = getEditedList({\r\n        ...props,\r\n        isChanged: true, //添加變更紀錄\r\n        group: newGroupName,\r\n      });\r\n\r\n      const newGroup: string[] = [\r\n        newGroupName,\r\n        ...group.filter((g: string) => g !== newGroupName),\r\n      ];\r\n      dispatch(setFavoredList({ group: newGroup, list: newList }));\r\n    }\r\n  };\r\n\r\n  const handleItemEdit = () => {\r\n    var newOwner = window.prompt(\"輸入新的頻道名稱 ? \", owner);\r\n    if (newOwner == null) {\r\n      return;\r\n    }\r\n    if (newOwner === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n    const newList = getEditedList({\r\n      ...props,\r\n      isChanged: true, //添加變更紀錄\r\n      owner: newOwner,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  const handleItemDelete = () => {\r\n    var ok = window.confirm(`確定要停止追隨 ${owner} 嗎 ?`);\r\n    if (ok) {\r\n      const newList = getDeletedList({\r\n        ...props,\r\n        isDeleted: true, //添加變更紀錄\r\n        group: groupName,\r\n      });\r\n      dispatch(setFavoredList({ list: newList, group: null }));\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    const newList = getDeletedList({\r\n      ...props,\r\n      isDeleted: false, //添加變更紀錄\r\n      group: groupName,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Avatar>\r\n        <img src={avatar} alt={`${cname}'s avatar`} />\r\n      </Avatar>\r\n      <OwnerText isDeleted={isDeleted} isNewAdded={isNewAdded}>\r\n        <label htmlFor={Cid}>{owner}</label>\r\n      </OwnerText>\r\n      <ButtonGroup>\r\n        <Button onClick={handleGroupEdit}>\r\n          <ai.AiOutlineGroup />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        <Button onClick={handleItemEdit}>\r\n          <ai.AiOutlineEdit />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        {isDeleted ? (\r\n          <Button onClick={cancelDelete}>\r\n            <ai.AiOutlineRedo />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        ) : (\r\n          <Button onClick={handleItemDelete}>\r\n            <ai.AiTwotoneDelete />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        )}\r\n      </ButtonGroup>\r\n    </Container>\r\n  );\r\n}\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #c5c3c6;\r\n  padding: 16px;\r\n  margin: 6px auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  margin-right: 15px;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  pointer-events: none;\r\n\r\n  img {\r\n    min-width: 50px;\r\n    max-width: 100px;\r\n    background-color: #999;\r\n    border-radius: 15px;\r\n    width: 4rem;\r\n    height: 4rem;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst OwnerText = styled.div<{ isDeleted: boolean; isNewAdded: boolean }>`\r\n  width: 100%;\r\n  padding: 0 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: ${(p) => (p.isNewAdded ? `#f00` : p.isDeleted ? `#888` : `#fff`)};\r\n  label {\r\n    text-decoration: ${(p) => (p.isDeleted ? `line-through` : `none`)};\r\n    font-size: 18px;\r\n  }\r\n`;\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Button = styled.div`\r\n  margin-left: 12px;\r\n  padding: 5px 5px;\r\n  cursor: pointer;\r\n  font-size: 25px;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  p {\r\n    display: none;\r\n  }\r\n  :hover {\r\n    color: var(--btnHoverColor);\r\n    background-color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { VISITS_DEFAULT_GROUPNAME } from \"../../app/config\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { FavoredCard } from \"./FavoredCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n// import { selectFavoredList, setFavoredList } from \"./slice\";\r\n// import { useDispatch, useSelector } from \"../../app/hooks\";\r\n\r\nexport function FavoredCardsGroup(props: {\r\n  items: FavoredItem[];\r\n  groupName: string;\r\n}) {\r\n  const groupName = props.groupName || VISITS_DEFAULT_GROUPNAME;\r\n  // const favoredlist = useSelector(selectFavoredList);\r\n  // const dispatch = useDispatch();\r\n\r\n  // const onDragEnd = (e: any) => {\r\n  //   const src = e.source.index;\r\n  //   const dest = e.destination.index;\r\n  //   if (src === undefined || dest === undefined || src === dest) {\r\n  //     return;\r\n  //   }\r\n  //   console.log(`onDragEnd: src: ${src}, dest: ${dest}`);\r\n  //   const newList = [...favoredlist];\r\n  //   // 從src位置刪除1個元素，並返回該刪除元素形成的陣列\r\n  //   const [deleted] = newList.splice(src, 1);\r\n  //   // 再將被移出的元素，從新放置到該陣列裡面。\r\n  //   newList.splice(dest, 0, { ...deleted, isChanged: true }); // 表示在dest後，(0)不刪除任何元素，把deleted隨後添加進去。\r\n  //   dispatch(setFavoredList({ list: newList, group: null }));\r\n  // };\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"30px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#4c4a46\"}\r\n      />\r\n      <Content>\r\n        {props.items.map((item: FavoredItem) => (\r\n          <li key={\"FavoredCard_\" + item.cid}>\r\n            <FavoredCard {...item} />\r\n          </li>\r\n        ))}\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Content = styled.ul`\r\n  max-width: 960px;\r\n  width: 99%;\r\n  margin: auto;\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem, VisitList } from \"../../app/types\";\r\nimport { selectIsLogin, selectUser } from \"../user/slice\";\r\nimport { FavoredCardsGroup } from \"./FavoredCardsGroup\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  selectFavoredCardsList,\r\n  selectGroup,\r\n  selectIsFavoredCardsListChanged,\r\n  selectTags,\r\n  selectVisitList,\r\n} from \"./slice\";\r\nimport { reqUpdateVisit } from \"./api\";\r\nimport { history } from \"../..\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\n/**\r\n * 收藏品，表列出已登入使用者自定義的喜好頻道列表\r\n */\r\nexport function FavoredCardsViewer() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const isLogin: boolean = useSelector(selectIsLogin);\r\n  const isListChanged: boolean = useSelector(selectIsFavoredCardsListChanged);\r\n  const headerTheme: HeaderThemeType = getHeaderIcon(isLogin, isListChanged);\r\n  const favoredlist: FavoredItem[][] = useSelector(selectFavoredCardsList);\r\n  const group = useSelector(selectGroup);\r\n  const visit: VisitList = useSelector(selectVisitList);\r\n  const tags: string[] = useSelector(selectTags);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onHeaderBtnClick = () => {\r\n    if (!isLogin) {\r\n      // 請先登入\r\n      history.push({ pathname: \"/login/\" });\r\n    } else if (isListChanged) {\r\n      // 上傳檔案\r\n      dispatch(reqUpdateVisit(username, ssid, visit, tags));\r\n    }else{\r\n      // 直接關閉\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <ViewerContainer>\r\n      <Header {...headerTheme}>\r\n        <div onClick={onHeaderBtnClick}>\r\n          {headerTheme.icon}\r\n          <p>{headerTheme.text}</p>\r\n        </div>\r\n      </Header>\r\n      <Content>\r\n        {favoredlist.map((items: FavoredItem[], i) => {\r\n          // 驗證groupname\r\n          // 根據分群顯示\r\n          const groupName = group[i];\r\n          return items.length > 0 ? (\r\n            <FavoredCardsGroup\r\n              key={\"GroupVisitItems_\" + groupName}\r\n              items={items}\r\n              groupName={groupName}\r\n            />\r\n          ) : (\r\n            <Fragment key={\"GroupVisitItems_\" + groupName} />\r\n          );\r\n        })}\r\n      </Content>\r\n    </ViewerContainer>\r\n  );\r\n}\r\n\r\nconst ViewerContainer = styled.div`\r\n  --btnTextColor: #fff;\r\n  --btnTextHoverColor: #fff;\r\n  --btnBgColor: rgba(25, 133, 161, 0.5);\r\n  --btnBgHoverColor: rgb(25, 133, 161);\r\n  --groupTextColor: rgb(25, 133, 161);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #4c4a46;\r\n\r\n  position: fixed;\r\n  top: 65px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n  background-color: var(--bkgColor);\r\n  overflow-y: auto;\r\n`;\r\n\r\ntype HeaderThemeType = {\r\n  icon: any;\r\n  text: string;\r\n};\r\nconst getHeaderIcon = (\r\n  isLogin: boolean,\r\n  isChanged: boolean\r\n): HeaderThemeType => {\r\n  // debugger\r\n  if (!isLogin) {\r\n    // login first\r\n    return {\r\n      text: \"請先登入\",\r\n      icon: <ai.AiOutlineUser />,\r\n    };\r\n  }\r\n  if (isChanged) {\r\n    // should update\r\n    return {\r\n      text: \"上傳檔案\",\r\n      icon: <ai.AiOutlineCloudUpload />,\r\n    };\r\n  } else {\r\n    // colsed\r\n    return {\r\n      text: \"直接關閉\",\r\n      icon: <ai.AiOutlineClose />,\r\n    };\r\n  }\r\n};\r\n\r\nconst Header = styled.div<HeaderThemeType>`\r\n  position: relative;\r\n  background-color: var(--navColor);\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  div {\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 10px 20px 0;\r\n    padding: 15px 0;\r\n    border-radius: 30px;\r\n    font-weight: 700px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: var(--btnTextColor);\r\n    background-color: var(--btnBgColor);\r\n    cursor: pointer;\r\n    border: 2px solid;\r\n    transition: 0.5s;\r\n\r\n    svg {\r\n      font-size: 8vmin;\r\n      padding-right: 5px;\r\n      transition: 0.2s;\r\n    }\r\n\r\n    p {\r\n      letter-spacing: 1vmin;\r\n      font-size: 6vmin;\r\n      transition: 0.2s;\r\n    }\r\n\r\n    :hover {\r\n      color: var(--btnTextHoverColor);\r\n      background-color: var(--btnBgHoverColor);\r\n\r\n      svg {\r\n        font-size: 9vmin;\r\n      }\r\n\r\n      p {\r\n        font-size: 8vmin;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"../../app/hooks\";\r\nimport { selectUser } from \"../../features/user/slice\";\r\nimport { Fragment, useLayoutEffect } from \"react\";\r\nimport {\r\n  selectCurrent,\r\n  selectFavoredList,\r\n  selectIsFavoredCardsListChanged,\r\n  selectTags,\r\n} from \"../../features/channelCardStore/slice\";\r\nimport {\r\n  reqFetchChannels,\r\n  reqEditVisit,\r\n} from \"../../features/channelCardStore\";\r\nimport {\r\n  ChannelCardsGroup,\r\n  ChannelSearch,\r\n  ChannelTagsSwitchers,\r\n  ChannelCardsBrowser,\r\n} from \"../../features/channelCardStore\";\r\n\r\nexport default function ChannelsStage() {\r\n\r\n  const user = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const isListChanged = useSelector(selectIsFavoredCardsListChanged);\r\n  const favoredList = useSelector(selectFavoredList);\r\n  const dispatch = useDispatch();\r\n\r\n  useLayoutEffect(() => {\r\n    if (isListChanged) {\r\n      // 檢查收藏表單是否已經被改變，如果已有異動，先發送請求獲取新的收藏表單。\r\n      const { username, ssid } = user;\r\n      dispatch(reqEditVisit(username, ssid, favoredList, tags));\r\n    } else {\r\n      // 獲取當前資料庫中的頻道資訊。\r\n      const { username, ssid } = user;\r\n      dispatch(reqFetchChannels(username, ssid, tags));\r\n    }\r\n    return () => {};\r\n  }, [dispatch, user, tags]);\r\n\r\n  return (\r\n    <Container>\r\n      <ControlPanel>\r\n        <ChannelSearch />\r\n        <ChannelTagsSwitchers />\r\n      </ControlPanel>\r\n      <ChannelSearchCard />\r\n      <ChannelCardsBrowser />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction ChannelSearchCard() {\r\n  const current = useSelector(selectCurrent);\r\n\r\n  return (\r\n    <>\r\n      {current !== null ? (\r\n        current.status === \"failure\" ? (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        ) : (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        )\r\n      ) : (\r\n        <Fragment />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 65px;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: \"auto\";\r\n`;\r\n\r\nconst ControlPanel = styled.div`\r\n  position: relative;\r\n  background-color: #666;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: start;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\n","import axios from \"axios\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { FavoredItem, VisitItem, VisitList } from \"../../../app/types\";\r\nimport { createVisitItem } from \"../share\";\r\nimport { setFavoredList } from \"../slice\";\r\nimport { reqUpdateVisit } from \"./reqUpdateVisit\";\r\n\r\nexport const reqEditVisit =\r\n  (username: string, ssid: string, already: FavoredItem[], tags: string[]) =>\r\n  (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    axios.post(`${API_SERVER_URL}/visit/edit`, postform).then(\r\n      (resp) => {\r\n        console.log(\"開啟VisitList成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const visit: VisitList = resp.data[\"visit\"];\r\n\r\n        // 尚未登入時已有添加喜歡的對象到表單，登入後自動獲取該表單與回應收到的結果進行合併。\r\n\r\n        // 即使success，也可能新的使用者初始清單為空。\r\n        if (code === \"success\" && visit.list) {\r\n          // 安全地添加 \"Favorite\" 分群\r\n          const group = visit.group.includes(VISITS_DEFAULT_GROUPNAME)\r\n            ? visit.group\r\n            : [VISITS_DEFAULT_GROUPNAME, ...visit.group];\r\n\r\n          // 被添加到最愛的頻道都會被標記為 isNewAdded = true，蒐集後並轉換型態成VisitItem[]\r\n          const newAdded: VisitItem[] = already.reduce(\r\n            (result: VisitItem[], cur: FavoredItem) =>\r\n              cur.isNewAdded && !cur.isDeleted\r\n                ? result.concat(createVisitItem(cur))\r\n                : result,\r\n            []\r\n          );\r\n\r\n          // 取出\"新的且沒被刪除的\"被添加到最愛的頻道，並與回應收到的表單頻道比對後去除重複的。\r\n          const mp = new Map<string, boolean>();\r\n          const newlist: VisitItem[] = newAdded\r\n            .concat(visit.list)\r\n            .reduce((result: VisitItem[], cur: VisitItem) => {\r\n              if (!mp.has(cur.cid)) {\r\n                mp.set(cur.cid, true);\r\n                return result.concat(cur);\r\n              } else {\r\n                return result;\r\n              }\r\n            }, []);\r\n          setTimeout(() =>\r\n            (function (group: string[], list: VisitItem[]) {\r\n              dispatch(reqUpdateVisit(username, ssid, { group, list }, tags));\r\n            })(group, newlist)\r\n          );\r\n        } else {\r\n          dispatch(\r\n            setFavoredList({\r\n              list: already,\r\n              group: [VISITS_DEFAULT_GROUPNAME, CHANNELS_DEFAULT_GROUPNAME],\r\n            })\r\n          );\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"開啟VisitList 失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChatboxIframe } from \"../../../app/types\";\r\n\r\nexport function TheaterChatbox(props: ChatboxIframe) {\r\n  const chatbox = props;\r\n  const { w, h } = props;\r\n  return (\r\n    <>\r\n      {chatbox.isEnable ? (\r\n        <ChatboxContainer width={w} height={h}>{getChatboxIframe(chatbox)}</ChatboxContainer>\r\n      ) : (\r\n        <Fragment/>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst getChatboxIframe = (chatbox: ChatboxIframe): any => {\r\n  const { method, cid, src, cname } = chatbox;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          allowFullScreen={false}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\nconst ChatboxContainer = styled.div<{ width: number; height: number }>`\r\n  background-color: #000;\r\n  width: ${(p) => p.width};\r\n  height: ${(p) => p.height};\r\n  iframe {\r\n    width: ${(p) => p.width};\r\n    height: ${(p) => p.height};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { useState } from \"react\";\r\nimport { ChatboxIframe, PlayerIframe } from \"../../../app/types\";\r\nimport { removeIframeByCid, switchChatBoxByCid } from \"../slice\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterChatbox } from \"../TheaterChatbox\";\r\n\r\ntype Props = {\r\n  flexType: string;\r\n  player: PlayerIframe;\r\n  chatbox: ChatboxIframe;\r\n};\r\n\r\nexport function TheaterPlayerItem(props: Props) {\r\n  const { flexType, player, chatbox } = props;\r\n  const { cid, w: pw, h: ph } = player;\r\n  const { w: cw, h: ch } = chatbox;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const showMenu = () => {\r\n    console.log(\"showMenu\");\r\n    setIsEnable(!isEnable);\r\n  };\r\n  const onLeaveMenu = () => {\r\n    setIsEnable(false);\r\n  };\r\n  const onEnterMenu = () => {\r\n    setIsEnable(true);\r\n  };\r\n  const removeIframe = () => {\r\n    dispatch(removeIframeByCid({ cid }));\r\n  };\r\n  const switchChatBox = () => {\r\n    dispatch(switchChatBoxByCid({ cid }));\r\n  };\r\n\r\n  return (\r\n    <IframeGridLocator\r\n      flexType={flexType}\r\n      playerWidth={pw}\r\n      playerHeight={ph}\r\n      chatboxWidth={cw}\r\n      chatboxHeight={ch}\r\n    >\r\n      <IframeContainer>\r\n        {getPlayerIframe(player)}\r\n        <Menu\r\n          onClick={showMenu}\r\n          onMouseEnter={onEnterMenu}\r\n          onMouseLeave={onLeaveMenu}\r\n          isEnable={isEnable}\r\n        >\r\n          <div onClick={removeIframe}>\r\n            <ai.AiOutlineCloseCircle />\r\n          </div>\r\n          &nbsp;\r\n          <div onClick={switchChatBox}>\r\n            <ai.AiOutlineMessage />\r\n          </div>\r\n        </Menu>\r\n      </IframeContainer>\r\n      <TheaterChatbox {...chatbox} />\r\n    </IframeGridLocator>\r\n  );\r\n}\r\n\r\nconst getPlayerIframe = (player: PlayerIframe): any => {\r\n  const { method, cid, src, cname } = player;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-presentation\"\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-presentation\"\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\nconst IframeGridLocator = styled.div<{\r\n  flexType: string;\r\n  playerWidth: number;\r\n  playerHeight: number;\r\n  chatboxWidth: number;\r\n  chatboxHeight: number;\r\n}>`\r\n  --playerWidth: ${(p) => p.playerWidth}px;\r\n  --playerHeight: ${(p) => p.playerHeight}px;\r\n  --chatboxWidth: ${(p) => p.chatboxWidth}px;\r\n  --chatboxHeight: ${(p) => p.chatboxHeight}px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: ${(p) => p.flexType};\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #000;\r\n`;\r\n\r\nconst IframeContainer = styled.div`\r\n  width: var(--playerWidth);\r\n  height: var(--playerHeight);\r\n  position: relative;\r\n  iframe {\r\n    z-index: 1;\r\n    width: var(--playerWidth);\r\n    height: var(--playerHeight);\r\n  }\r\n`;\r\n\r\nconst Menu = styled.h1<{ isEnable: boolean }>`\r\n  top: 0;\r\n  right: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: ${(p) => (p.isEnable ? `200px` : `100px`)};\r\n  max-height: 100vh;\r\n  background-color: #000;\r\n  opacity: ${(p) => (p.isEnable ? `0.8` : `0.02`)};\r\n  transition: 0.6s;\r\n  cursor: pointer;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  // MenuButton\r\n  div {\r\n    font-size: ${(p) => (p.isEnable ? `75px` : `0px`)};\r\n    svg {\r\n      position: relative;\r\n      top: ${(p) => (p.isEnable ? `0%` : `30%`)};\r\n      color: hotpink;\r\n      cursor: pointer;\r\n      border-radius: 50%;\r\n      opacity: ${(p) => (p.isEnable ? `.8` : `0`)};\r\n      transform: ${(p) => (p.isEnable ? `rotate(360deg)` : `none`)};\r\n      transition: 0.4s;\r\n      :hover {\r\n        color: gray;\r\n        background-color: hotpink;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport {\r\n  selectPlayPairs,\r\n  selectGridLayout,\r\n  resizeGridLayout,\r\n} from \"../slice\";\r\nimport { useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { TheaterPlayerItem } from \"../TheaterPlayerItem\";\r\n\r\nexport function TheaterIframesViewer() {\r\n  const dom = useRef<HTMLDivElement>(null);\r\n  const pairs = useSelector(selectPlayPairs);\r\n  const numOfIframes = pairs.length;\r\n  const { col, row, flexType } = useSelector(selectGridLayout);\r\n  const dispatch = useDispatch();\r\n\r\n  const resizeIframes = useCallback(() => {\r\n    if (numOfIframes === 0 || dom.current === null) {\r\n      return;\r\n    }\r\n    console.log(\"[TheaterIframesViewer] Resize All Iframes\");\r\n    const { clientWidth, clientHeight } = dom.current;\r\n    dispatch(resizeGridLayout({ clientWidth, clientHeight }));\r\n  }, [dispatch, dom, numOfIframes]);\r\n\r\n  useLayoutEffect(() => {\r\n    // 添加新的Iframe元素時，要先執行一次\r\n    resizeIframes();\r\n\r\n    // 監聽畫面更新時的resize\r\n    let handler: any = null;\r\n    const resize = () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      handler = setTimeout(resizeIframes, 500);\r\n    };\r\n    window.addEventListener(\"resize\", resize);\r\n\r\n    return () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      window.removeEventListener(\"resize\", resize);\r\n    };\r\n  }, [resizeIframes]);\r\n\r\n  // console.log(`[TheaterIframesViewer] render, numOfIframes: ${numOfIframes}`);\r\n  return (\r\n    <Container ref={dom} col={col} row={row}>\r\n      {pairs.map(({ player, chatbox }) => (\r\n        <TheaterPlayerItem\r\n        key={\"TheaterPlayerItem_\" + player.cid}\r\n          flexType={flexType}\r\n          player={player}\r\n          chatbox={chatbox}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div<{ col: number; row: number }>`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 100px;\r\n  width: 100%;\r\n  height: calc(100% - 100px);\r\n  box-sizing: border-box;\r\n  background-color: gray;\r\n  z-index: 1;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => props.col}, 1fr);\r\n  grid-template-rows: repeat(${(props) => props.row}, 1fr);\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport { appendIframeToPlaylist, removeIframeFromPlaylist } from \"../slice\";\r\n\r\ntype TheaterSliderItemProps = {\r\n  item: TheaterElement;\r\n  index: number;\r\n  isStopTrans: boolean;\r\n};\r\n\r\nexport function TheaterSliderItem(props: TheaterSliderItemProps) {\r\n  const { index, isStopTrans, item } = props;\r\n  const { preview, cname, avatar, checked } = item;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    if (item.checked) {\r\n      dispatch(removeIframeFromPlaylist({ item }));\r\n    } else {\r\n      dispatch(appendIframeToPlaylist({ item }));\r\n    }\r\n  };\r\n  // console.log(\"[TheaterSliderItem] render\")\r\n  return (\r\n    <Section index={index} isStopTrans={isStopTrans}>\r\n      <SliderPreview>\r\n        <img src={preview} alt={`${cname}_preview`} />\r\n        <p>{`${cname}`}</p>\r\n      </SliderPreview>\r\n      <Avatar\r\n        src={avatar}\r\n        alt={`${cname}_avatar`}\r\n        onClick={handleClick}\r\n        checked={checked}\r\n      />\r\n    </Section>\r\n  );\r\n}\r\nconst Section = styled.div<{ index: number; isStopTrans: boolean }>`\r\n  position: relative;\r\n  left: ${(props) => -100 * props.index}%;\r\n  min-width: 100%;\r\n  height: 100px;\r\n\r\n  background-color: var(--navColor);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  transition: ${(props) => (props.isStopTrans ? `none` : `.5s`)};\r\n`;\r\n\r\nconst SliderPreview = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  img {\r\n    width: auto;\r\n    height: auto;\r\n    filter: blur(2px);\r\n    opacity: 0.3;\r\n  }\r\n\r\n  p {\r\n    position: absolute;\r\n    top: 100px;\r\n    padding: 4px;\r\n    color: hotpink;\r\n    background-color: var(--navColor);\r\n    opacity: 0.8;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    transition: top 0.5s;\r\n    z-index: 1;\r\n\r\n    min-width: 100%;\r\n    border-radius: 70% 70% 0 0;\r\n  }\r\n\r\n  :hover {\r\n    p {\r\n      top: 78px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.img<{ checked: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 85px;\r\n  border-radius: 50%;\r\n  border: ${(props) => (props.checked ? `solid 5px hotpink` : `none`)};\r\n  cursor: pointer;\r\n  transition: width 0.2s ease-in-out;\r\n  transition: border 0.5s;\r\n  opacity: 0.9;\r\n\r\n  :hover {\r\n    width: 90px;\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport {\r\n  selectNumOfElements,\r\n  selectSliderElements,\r\n  selectSlider,\r\n} from \"../slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { TheaterSliderItem } from \"../TheaterSliderItem\";\r\nimport { playSliderLeft, playSliderRight } from \"../share\";\r\n\r\nexport function TheaterSlider() {\r\n  const { sliderIndex, isTakenOverAnim } = useSelector(selectSlider);\r\n  const numOfElements = useSelector(selectNumOfElements);\r\n  const sliderElements = useSelector(selectSliderElements);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderLeft = () => {\r\n    dispatch(playSliderLeft(sliderIndex, numOfElements));\r\n  };\r\n\r\n  const sliderRight = () => {\r\n    dispatch(playSliderRight(sliderIndex, numOfElements));\r\n  };\r\n\r\n  // console.log(\r\n  //   `[TheaterSlider] render, numOfElements: ${numOfElements}, sliderIndex: ${sliderIndex}`\r\n  // );\r\n  return (\r\n    <SliderWrap>\r\n      <SliderContainer>\r\n        <Control onClick={sliderLeft}>\r\n          <ai.AiOutlineLeftCircle />\r\n        </Control>\r\n        <Control onClick={sliderRight}>\r\n          <ai.AiOutlineRightCircle />\r\n        </Control>\r\n        <Content>\r\n          {sliderElements.map((e: TheaterElement, i: number) => (\r\n            <TheaterSliderItem\r\n              key={`slider_${i}_cid_${e.cid}_content`}\r\n              item={e}\r\n              index={sliderIndex}\r\n              isStopTrans={isTakenOverAnim}\r\n            />\r\n          ))}\r\n        </Content>\r\n      </SliderContainer>\r\n    </SliderWrap>\r\n  );\r\n}\r\n\r\nconst SliderWrap = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: auto;\r\n  z-index: 1;\r\n`;\r\n\r\nconst SliderContainer = styled.div`\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  background-color: var(--navColor);\r\n  box-sizing: border-box;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n\r\n  background-color: gray;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: left;\r\n  overflow: hidden;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nconst Control = styled.span`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n\r\n  font-size: 50px;\r\n  background-color: none;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 1;\r\n  border-radius: 50%;\r\n  :nth-of-type(1) {\r\n    left: 30px;\r\n    text-align: right;\r\n  }\r\n  :nth-of-type(2) {\r\n    left: calc(100% - 100px);\r\n    text-align: right;\r\n  }\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n","import { useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { TheaterSlider, TheaterIframesViewer } from \"../../features/theater\";\r\nimport { reqTheaterChannels } from \"../../features/theater\";\r\nimport {\r\n  selectSlider,\r\n  setFullScreen,\r\n  setSliderFolded,\r\n} from \"../../features/theater/slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { selectHasFetchChannels } from \"../../features/channelCardStore/slice\";\r\nimport { history } from \"../..\";\r\n\r\ntype Props = {\r\n  setNavbarFolded: (isFolded: boolean) => void;\r\n};\r\n\r\nexport default function TheaterPage(props: Props) {\r\n  const hasfetchChannels = useSelector(selectHasFetchChannels);\r\n  const { isFolded,isFullScreen } = useSelector(selectSlider);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderFold = () => {\r\n    dispatch(setSliderFolded(!isFolded));\r\n  };\r\n\r\n  const fullScreen = ()=>{\r\n    dispatch(setFullScreen(!isFullScreen));\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    // 進入Theater前，必須先至少取得一次完整的頻道資訊避免異常。\r\n    if (!hasfetchChannels) {\r\n      history.push({ pathname: \"/channels\" });\r\n      return;\r\n    }\r\n    // 進入頁面時，先獲取Theater清單(目前為取出所有live頻道)\r\n    dispatch(reqTheaterChannels(\"live\"));\r\n    return () => {};\r\n  }, [hasfetchChannels, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <HideNavBarBtn onClick={sliderFold} isFolded={isFolded}>\r\n        {isFolded ? (\r\n          <ai.AiOutlineVerticalAlignBottom />\r\n        ) : (\r\n          <ai.AiOutlineVerticalAlignTop />\r\n        )}\r\n      </HideNavBarBtn>\r\n      <FullScreenBtn onClick={fullScreen} isFolded={isFolded}>\r\n        {isFullScreen ? (\r\n          <ai.AiOutlineFullscreenExit />\r\n          ) : (\r\n          <ai.AiOutlineFullscreen />\r\n        )}\r\n      </FullScreenBtn>\r\n      <Wrap isFolded={isFolded}>\r\n        <TheaterSlider />\r\n        <TheaterIframesViewer />\r\n      </Wrap>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div<{ isFolded: boolean }>`\r\n  --topOffset: ${(props) => (props.isFolded ? `-100px` : `65px`)};\r\n\r\n  position: absolute;\r\n  left: 0;\r\n  top: var(--topOffset);\r\n\r\n  width: 100%;\r\n  height: calc(100vh - var(--topOffset));\r\n  z-index: 5;\r\n`;\r\n\r\nconst HideNavBarBtn = styled.span<{ isFolded: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: ${(p) => (p.isFolded ? `85px` : `135px`)};\r\n  left: calc(100% - 35px);\r\n  text-align: right;\r\n\r\n  font-size: 35px;\r\n  background-color: #eee;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 10;\r\n  border-radius: 50%;\r\n\r\n  transition: 0.3s;\r\n\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nconst FullScreenBtn = styled.span<{ isFolded: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: ${(p) => (p.isFolded ? `35px` : `85px`)};\r\n  left: calc(100% - 35px);\r\n  text-align: right;\r\n\r\n  font-size: 35px;\r\n  background-color: #eee;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 10;\r\n  border-radius: 50%;\r\n\r\n  transition: 0.3s;\r\n\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { ChannelProps } from \"../../../app/types\";\r\nimport { setElements } from \"../slice\";\r\n\r\nexport const reqTheaterChannels =\r\n  (tag: string) => (dispatch: any) => {\r\n    axios.get(`${API_SERVER_URL}/channels/${tag}`).then(\r\n      (resp) => {\r\n        console.log(\"Theater請求成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const channels: ChannelProps[] = resp.data[\"channels\"];\r\n        if (code === \"success\") {\r\n          dispatch(setElements({ channels }));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"Theater請求失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { useEffect } from 'react'\r\nimport { history } from '../..';\r\nimport { useSelector } from '../../app/hooks';\r\nimport { selectUser } from '../../features/user/slice';\r\n\r\n\r\nexport default function HomePage() {\r\n    const user = useSelector(selectUser);\r\n\r\n    useEffect(() => {\r\n    const { ssid, username } = user;\r\n    console.log({ ssid });\r\n    if (ssid !== \"\" && username !== \"\") {\r\n        history.push({ pathname: \"/channels\" });\r\n    } else{\r\n        history.push({ pathname: \"/login\" });\r\n    }\r\n    return () => {};\r\n  }, [user]);\r\n\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    )\r\n}\r\n","import { IoMdRocket } from \"react-icons/io\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function RocketLoading() {\r\n  return (\r\n    <Loader>\r\n      {Array(20)\r\n        .fill(0)\r\n        .map((_, i) => {\r\n          return <Dot key={`dot_${i}`} index={i} />;\r\n        })}\r\n      <Rocket>\r\n        <IoMdRocket />\r\n      </Rocket>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nconst Loader = styled.div`\r\n\r\n  --speed: 1;\r\n  --scale: 2;\r\n  --dotColor: #fff;\r\n  --rocketColor: #fff;\r\n\r\n  position: relative;\r\n  width: calc(120px * var(--scale));\r\n  height: calc(120px * var(--scale));\r\n`;\r\n\r\ntype DotProps = {\r\n  index: number;\r\n};\r\nconst Dot = styled.div<DotProps>`\r\n  --i: ${(p) => p.index};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: rotate(calc(180deg + 18deg * var(--i)));\r\n\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(15px * var(--scale));\r\n    height: calc(15px * var(--scale));\r\n    background-color: var(--dotColor);\r\n    border-radius: 50%;\r\n    transform: scale(0);\r\n    animation: animate calc(2s / var(--speed)) linear infinite;\r\n    animation-delay: calc(0.1s / var(--speed) * var(--i));\r\n  }\r\n\r\n  @keyframes animate {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    10% {\r\n      transform: scale(1.2);\r\n    }\r\n    80%,\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Rocket = styled.div`\r\n  /* background-color: brown; */\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: var(--rocketColor);\r\n  font-size: calc(50px * var(--scale));\r\n  animation: rotating calc(2s / var(--speed)) linear infinite;\r\n  animation-delay: calc(-1s / var(--speed));\r\n\r\n  svg{\r\n      transform: rotate(45deg);\r\n      position: relative;\r\n      top: calc(-15px * var(--scale));\r\n      left: calc(-15px * var(--scale));\r\n  }\r\n\r\n  @keyframes rotating{\r\n    0%{\r\n        transform: rotate(10deg)\r\n    }\r\n    100%{\r\n        transform: rotate(370deg)\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\"\r\nimport RocketLoading from \"../../components/RocketLoading\"\r\n\r\nexport default function LoadingPage() {\r\n    return (\r\n        <Container>\r\n            <RocketLoading/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    top: 65px;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: grey;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: none;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #fff;\r\n\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  box-sizing: border-box;\r\n  border: 5px solid;\r\n  border-radius: 1.5em 1.5em 1.5em 1.5em;\r\n  border-color: var(--navColor);\r\n  background-color: var(--bkgColor);\r\n\r\n  max-width: 480px;\r\n  min-width: 250px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  /* background-color: red; */\r\n`;\r\n\r\nexport const MsgBox = styled.div`\r\n  position: relative;\r\n  left: 0%;\r\n  top: 0%;\r\n\r\n  padding: 20px 0;\r\n  border-radius: 20px;\r\n\r\n  border: 2px solid var(--btnHoverBgColor);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  :after {\r\n    position: absolute;\r\n    margin-top: 58px;\r\n    background-color: #fff;\r\n    /* top: 20px; */\r\n    content: \"\";\r\n    width: 25px;\r\n    height: 25px;\r\n    border-bottom: 2px solid var(--btnHoverBgColor);\r\n    border-right: 2px solid var(--btnHoverBgColor);\r\n    /* border-top: 2px solid var(--btnHoverBgColor); */\r\n    /* border-left: 2px solid var(--btnHoverBgColor); */\r\n    transform: rotate(45deg);\r\n    z-index: 1;\r\n  }\r\n\r\n  h1 {\r\n    position: relative;\r\n    display: block;\r\n    color: var(--btnHoverBgColor);\r\n    z-index: 2;\r\n\r\n    animation: animate .8s linear infinite;\r\n\r\n    @keyframes animate {\r\n      0% {\r\n        transform: translateX(-3px);\r\n      }\r\n      50% {\r\n        transform: translateX(3px);\r\n      }\r\n      100% {\r\n        transform: translateX(-3px);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  padding: 20px 0 0 0;\r\n  h1 {\r\n    letter-spacing: 5px;\r\n    text-align: center;\r\n    padding: 0 0 20px 0;\r\n    border-bottom: 1px solid silver;\r\n    font-size: 28px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px 40px 0 40px;\r\n  background-color: none;\r\n  div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    input {\r\n      width: 100%;\r\n      padding: 0 5px;\r\n      height: 40px;\r\n      font-size: 16px;\r\n      border: none;\r\n      outline: none;\r\n      color: var(--btnHoverColor);\r\n\r\n      :focus ~ label {\r\n        top: -5px;\r\n        color: var(--btnHoverColor);\r\n      }\r\n      :valid ~ label {\r\n        top: -5px;\r\n        color: var(--btnHoverColor);\r\n      }\r\n      :focus ~ span::before {\r\n        width: 100%;\r\n      }\r\n    }\r\n    label {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 5px;\r\n      color: #adadad;\r\n      transform: translateY(-50%);\r\n      font-size: 16px;\r\n      pointer-events: none;\r\n      transition: 0.3s;\r\n    }\r\n    span {\r\n      ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 40px;\r\n        left: 0;\r\n        width: 0%;\r\n        height: 2px;\r\n        background-color: var(--btnHoverColor);\r\n        transition: 0.3s;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UsernameField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #adadad;\r\n  margin: 30px 0;\r\n`;\r\nexport const PasswordField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #adadad;\r\n  margin: 30px 0;\r\n`;\r\nexport const MainButton = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  border-radius: 25px;\r\n  font-size: 18px;\r\n  font-weight: 700px;\r\n  color: #fff;\r\n  background-color: var(--btnHoverColor);\r\n  letter-spacing: 2px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: 2px solid;\r\n  p {\r\n    /* background-color: red; */\r\n    width: 100%;\r\n    text-align: center;\r\n    pointer-events: none;\r\n  }\r\n  :hover {\r\n    border-color: var(--btnHoverColor);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nexport const SwitchField = styled.div`\r\n  position: relative;\r\n  margin: 30px 0;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  p {\r\n    /* background-color: red; */\r\n    text-align: center;\r\n    pointer-events: none;\r\n  }\r\n  div {\r\n    padding: 0px 10px;\r\n    color: var(--btnHoverColor);\r\n    cursor: pointer;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n","import { Fragment, useLayoutEffect, useRef } from \"react\";\r\nimport { reqLogin } from \"../api\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport { history } from \"../../../index\";\r\nimport { selectUser, setMsg } from \"../slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"../styles\";\r\n\r\nexport function Login() {\r\n  const dispatch = useDispatch();\r\n  const { username, msg } = useSelector(selectUser);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n  const routeToRegister = () => {\r\n    history.push({ pathname: \"/register\" });\r\n  };\r\n\r\n  const onLogin = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      // console.log(\"用戶名不可為空\");\r\n      dispatch(setMsg(\"用戶名不可為空\"));\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      // console.log(\"密碼不可為空\");\r\n      dispatch(setMsg(\"密碼不可為空\"));\r\n      return;\r\n    }\r\n\r\n    dispatch(reqLogin(username, password));\r\n  };\r\n\r\n  \r\n  useLayoutEffect(() => {\r\n    if (usernameInput.current) {\r\n      usernameInput.current.value = username;\r\n    }\r\n    return () => {\r\n      dispatch(setMsg());\r\n    };\r\n  }, [dispatch, usernameInput, username]);\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員登入</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment />\r\n          )}\r\n          <UsernameField>\r\n            <input\r\n              type=\"text\"\r\n              // placeholder=\"請輸入用戶名?\"\r\n              ref={usernameInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input\r\n              type=\"password\"\r\n              // placeholder=\"請輸入密碼?\"\r\n              ref={passwordInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onLogin}>\r\n            <p>登 入</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>還不是會員?</p>\r\n            <div onClick={routeToRegister}>註冊</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserLoginResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserLogin } from \"../slice\";\r\n\r\nexport const reqLogin =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    // 產生登入的postform資料\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n\r\n    // 發送Post請求\r\n    axios.post(`${API_SERVER_URL}/auth/login`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userLoginRes: UserLoginResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserLogin(userLoginRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"登入成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { useLayoutEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { reqRegister } from \"../api\";\r\nimport { history } from \"../../../index\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport { selectUser, setMsg } from \"../slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"../styles\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport function Register() {\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  const {username, msg} = useSelector(selectUser);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput2 = useRef<HTMLInputElement>(null);\r\n\r\n\r\n  const routeToLogin = () => {\r\n    history.push({ pathname: \"/login\" });\r\n  };\r\n\r\n  const onRegister = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n    const password2 = passwordInput2.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      console.log(\"用戶名不可為空\");\r\n      dispatch(setMsg(\"用戶名不可為空\"));\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      console.log(\"密碼不可為空\");\r\n      dispatch(setMsg(\"密碼不可為空\"));\r\n      return;\r\n    }\r\n    if (password !== password2) {\r\n      console.log(\"輸入的密碼不一致\");\r\n      dispatch(setMsg(\"輸入的密碼不一致\"));\r\n      return;\r\n    }\r\n\r\n    dispatch(reqRegister(username, password));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if(usernameInput.current){\r\n      usernameInput.current.value = username;\r\n    }\r\n    return () => {\r\n      dispatch(setMsg());\r\n    };\r\n  }, [dispatch, usernameInput, username])\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員註冊</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment/>\r\n          )}\r\n          <UsernameField>\r\n            <input type=\"text\" ref={usernameInput} required />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput} required />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput2} required />\r\n            <span />\r\n            <label>{\"密碼確認\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onRegister}>\r\n            <p>註 冊</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>註冊過了?</p>\r\n            <div onClick={routeToLogin}>登入</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserRegisterResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserRegiser } from \"../slice\";\r\n\r\nexport const reqRegister =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n    axios.post(`${API_SERVER_URL}/auth/register`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userRegisterRes: UserRegisterResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserRegiser(userRegisterRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"註冊成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport ChannelsStage from \"./pages/ChannelsStage\";\r\nimport TheaterPage from \"./pages/TheaterPage\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport LoadingPage from \"./pages/LoadingPage\";\r\nimport { FavoredCardsViewer } from \"./features/channelCardStore\";\r\nimport { Login, Register } from \"./features/user\";\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/channels/\" component={ChannelsStage} />\r\n        <Route path=\"/theater/\" component={TheaterPage} />\r\n        <Route path=\"/visit/\" component={FavoredCardsViewer} />\r\n        <Route path=\"/login/\" component={Login} />\r\n        <Route path=\"/register/\" component={Register} />\r\n        <Route path=\"/loading/\" component={LoadingPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport channelCardStoreReducer from \"../features/channelCardStore/slice\";\r\nimport userReducer from \"../features/user/slice\";\r\nimport theaterReducer from \"../features/theater/slice\";\r\nimport { decodeUrlToConnectionConfig } from \"./share\";\r\n\r\nconst reducer = combineReducers({\r\n  channelCardStore: channelCardStoreReducer,\r\n  user: userReducer,\r\n  theater: theaterReducer,\r\n});\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n});\r\n\r\n// 透過Url取得連線參數。\r\ndecodeUrlToConnectionConfig();\r\n\r\n// const preloadedState = {\r\n//   channels:{\r\n//     favored:[],\r\n//     resident:[],\r\n//   },\r\n//   visit:{\r\n//     list:[],\r\n//   },\r\n//   user:{\r\n//     username: \"\",\r\n//     ssid: \"\",\r\n//   }\r\n// }\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  middleware,\r\n  // preloadedState,\r\n});\r\n\r\n// 透過其回傳值自行推斷出 Store 的形態\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\nimport { Router } from \"react-router\";\r\nimport {createHashHistory} from 'history'\r\n\r\nexport const history = createHashHistory()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}