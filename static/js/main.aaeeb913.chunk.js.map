{"version":3,"sources":["app/hooks.ts","app/config.tsx","features/user/shares/cookies.tsx","features/user/reducers/setMsg.tsx","features/user/shares/setSession.tsx","features/user/reducers/setUserLogin.tsx","features/user/reducers/setUserRegister.tsx","features/user/reducers/onErrorAndClearUser.tsx","features/user/slice.tsx","features/favored/shares/createFavoredItem.tsx","features/channelCardStore/shares/createChannelCard.tsx","features/favored/reducers/setFavoredList.tsx","features/favored/reducers/setFromChannelCard.tsx","features/favored/slice.tsx","features/channelCardStore/shares/createVisitItem.tsx","features/favored/api/reqUpdateVisit.tsx","components/NavButtons/NavButton.tsx","components/NavButtons/Browser/index.tsx","components/NavButtons/Collections/index.tsx","components/NavButtons/Theater/index.tsx","components/NavButtons/User/index.tsx","features/theater/shares/createTheaterElement.tsx","features/theater/shares/createIframes.tsx","app/connections.ts","features/theater/shares/createPlayerIframe.tsx","features/theater/shares/createChatboxIframe.tsx","features/theater/shares/toggleFullScreen.js","features/theater/reducers/setElements.tsx","features/theater/reducers/setSlider.tsx","features/theater/reducers/setSliderFolded.tsx","features/theater/reducers/setFullScreen.tsx","features/theater/reducers/setFromChannel.tsx","features/theater/reducers/resizeGridLayout.tsx","features/theater/reducers/appendIframeToPlaylist.tsx","features/theater/reducers/removeIframeFromPlaylist.tsx","features/theater/reducers/switchChatBoxByCid.tsx","features/theater/reducers/removeIframeByCid.tsx","features/theater/slice.tsx","components/Navbar/index.tsx","features/channelCardStore/reducers/setStore.tsx","features/channelCardStore/reducers/setChannelCard.tsx","features/channelCardStore/reducers/setSearchResult.tsx","features/channelCardStore/slice.tsx","features/channelCardStore/ChannelCard.tsx","components/GroupLine/index.tsx","features/channelCardStore/ChannelCardsGroup.tsx","features/channelCardStore/ChannelCardsBrowser.tsx","components/SearchBox/index.tsx","features/channelCardStore/api/reqFetchChannels.tsx","features/channelCardStore/ChannelSearch.tsx","features/channelCardStore/api/reqSearchChannel.tsx","components/SwitchBtn/index.tsx","features/channelCardStore/ChannelTagsSwitchers.tsx","components/RocketLoading/index.tsx","pages/ChannelsStage/index.tsx","features/theater/TheaterChatbox/index.tsx","features/theater/TheaterPlayerItem/index.tsx","features/theater/TheaterIframesViewer/index.tsx","features/theater/TheaterSliderItem/index.tsx","features/theater/TheaterSlider/index.tsx","features/theater/api/playSlider.tsx","pages/TheaterPage/index.tsx","features/theater/api/reqTheaterChannels.tsx","pages/HomePage/index.tsx","pages/LoadingPage/index.tsx","features/user/styles.tsx","features/user/LoginPage.tsx","features/user/api/reqLogin.tsx","features/user/RegisterPage.tsx","features/user/api/reqRegister.tsx","features/user/LogoutPage.tsx","features/user/api/reqLogout.tsx","features/favored/FavoredCard.tsx","features/favored/FavoredCardsGroup.tsx","features/favored/FavoredCardsViewer.tsx","pages/FavoredPage/index.tsx","features/favored/api/reqEditVisit.tsx","App.tsx","app/store.ts","index.tsx"],"names":["useSelector","hook_useSelector","useDispatch","hook_useDispatch","API_SERVER_URL","VISITS_DEFAULT_GROUPNAME","CHANNELS_DEFAULT_GROUPNAME","CHANNELS_SEARCH_RESULT","CHANNELS_SEARCH_ERROR","CHANNELS_SEARCH_FAILED","getCookie","c_name","document","cookie","length","c_start","indexOf","c_end","unescape","substring","setMsg","state","action","undefined","payload","msg","setSession","session","username","ssid","expiration","expires","Date","now","toUTCString","setSessionCookie","setUserLogin","setUserRegister","onErrorAndClearUser","removeSessionCookie","initialState","slice","createSlice","name","reducers","actions","selectUser","user","selectMsg","createSelector","selectIsLogin","createFavoredItem","card","options","isChanged","isNewAdded","isDeleted","cid","cname","owner","avatar","method","group","checkGroupName","groupName","createChannelCard","ch","heart","setFavoredList","list","favoredList","setFromChannelCard","prelist","filter","p","newItem","map","selectFavoredCardStore","favored","selectFavoredList","store","selectGroup","selectVisitList","newfavoredList","f","mp","Map","newGroup","forEach","has","set","push","createVisitItem","selectFavoredCardsList","result","x","index","selectIsListChanged","isListChanged","len","i","selectNumOfNewAdded","count","reqUpdateVisit","visit","nextPathName","dispatch","postform","FormData","append","JSON","stringify","axios","post","then","resp","code","data","includes","newFavoredList","l","history","pathname","err","NavButton","props","title","path","icon","beforeSwitch","afterSwitch","isLogin","_autoSaveOnError","_autoSaveAndRedirectTo","nextPath","onLeavingBrowser","curPath","onLeavingCollections","onEnterRegister","onEnterLogin","Wrap","Container","onClick","current","location","onLeaving","onEnter","children","styled","div","NavBrowser","NavCollections","numOfAddedFavored","Counter","visible","NavTheater","NavUser","usernameInfo","Status","createTheaterElement","streamurl","preview","thumbnail","checked","getListAppendIframe","o","concat","getListRemoveIframe","ConnectionConfig","IsLocal","HostName","getPlayerSrc","src","sub","match","vedioid","getChatboxSrc","enableFullScreen","elem","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","exitFullScreen","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","setElements","channels","elements","slider","sliderIndex","playlist","found","cidFromChannel","fromChannel","get","setSlider","next","isTakenOverAnim","setSliderFolded","window","dispatchEvent","Event","isFolded","setFullScreen","body","isFullScreen","setFromChannel","item","newPlayerIframe","ratio","w","h","convertToPlayerIframe","newChatboxIframe","isEnable","convertToChatboxIframe","status","chatlist","resizeGridLayout","clientWidth","clientHeight","gridlayout","numOfIframes","calcNewIframeSizeV2","flexType","pw","ph","cw","col","row","calcSingleIframeSize","noChatWidth","noChatHeight","newPlayerList","newChatboxList","chatbox","player","setIframeSize","cW","cH","size","maxArea","curRow","Math","ceil","gridW","gridH","curPlayW","curPlayH","curChatW","curChatH","min","area","getResult","curCol","appendIframeToPlaylist","newElements","e","newPlaylist","createPlayerIframe","newChatlist","createChatboxIframe","removeIframeFromPlaylist","switchChatBoxByCid","c","removeIframeByCid","selectTheater","theater","selectElements","selectPlayPairs","selectGridLayout","selectSlider","selectNumOfElements","selectSliderElements","Navbar","useState","setIsEnable","closeMenu","NavBar","Menu","ToogleNavBkg","NavItemList","Logo","nav","ul","setStore","tags","setCluster","clusters","chgroups","hasFetchChannels","setChannelCard","cards","setSearchResult","selectChannelCardStore","channelCardStore","selectHasFetchChannels","selectChannelsInGroup","cs","selectTags","selectCurrent","ChannelCard","viewcount","starttime","isVisible","setIsVisible","ref","useRef","avatarStyles","getAvatarStyles","heartStyles","getHeartTheme","previewStyles","getPreviewImage","useEffect","parentDom","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","disconnect","CardBody","PreviewBox","image","Description","Owner","ChTitle","Detail","Left","Right","AvatarBox","alt","FavoredHeartBtn","fontcolor","fontbgcolor","bordercolor","ishidden","color","hoverColor","isHidden","isEnabled","a","GroupLine","h1","lineColor","bkgColor","fontsize","ChannelCardsGroup","ChannelGridCantainer","ChannelCardsBrowser","channelsInGroup","GetChannelCardsGroup","SearchBox","theme","searchInput","commit","onSubmit","value","onChange","onKeyUp","keyCode","type","id","placeholder","style","fontSize","iconColor","focusColor","reqFetchChannels","request","response","error","setTimeout","ChannelSearch","keyword","url","SwitchBtn","htmlFor","HiddenCheckedInput","handleSwitchClick","tag","isChecked","ToogleFill","label","beforeColor","afterColor","ballColor","input","ChannelTagsSwitchers","newtags","_tag","SwitcherList","_","SwitchBtnBox","RocketLoading","Loader","Array","fill","Dot","Rocket","ChannelsStage","useLayoutEffect","ControlPanel","ChannelSearchCard","TheaterChatbox","ChatboxContainer","width","height","getChatboxIframe","scrolling","allowFullScreen","seamless","frameBorder","TheaterPlayerItem","IframeGridLocator","playerWidth","playerHeight","chatboxWidth","chatboxHeight","IframeContainer","getPlayerIframe","onMouseEnter","onMouseLeave","sandbox","TheaterIframesViewer","dom","pairs","resizeIframes","useCallback","handler","resize","clearTimeout","addEventListener","removeEventListener","TheaterSliderItem","isStopTrans","Section","SliderPreview","Avatar","img","TheaterSlider","numOfElements","sliderElements","SliderWrap","SliderContainer","Content","Control","playSliderLeft","playSliderRight","span","TheaterPage","hasfetchChannels","HideNavBarBtn","FullScreenBtn","HomePage","LoadingPage","Title","MsgBox","UsernameField","PasswordField","MainButton","SwitchField","LoginPage","usernameInput","passwordInput","required","password","reqLogin","RegisterPage","passwordInput2","password2","reqRegister","LogoutPage","userLoginRes","reqLogout","FavoredCard","Cid","getEditedList","newList","getDeletedList","OwnerText","ButtonGroup","Button","newGroupName","prompt","g","alert","newOwner","confirm","FavoredCardsGroup","items","FavoredCardsViewer","favoredCardsList","ViewerContainer","FavoredPage","hasFetchChannel","reqEditVisit","App","exact","component","reducer","combineReducers","channelCardStoreReducer","userReducer","theaterReducer","favoredReducer","middleware","getDefaultMiddleware","serializableCheck","hostname","decodeUrlToConnectionConfig","configureStore","createHashHistory","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aaeeb913.chunk.js","sourcesContent":["import type { RootState, AppDispatch } from \"./store\";\r\n// hooks\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as hook_useDispatch,\r\n  useSelector as hook_useSelector,\r\n} from \"react-redux\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n\r\n// 不要直接用store.getState(),useSelector會在你store發生改變時重新渲染，省掉\"訂閱\"部分\r\nexport const useSelector: TypedUseSelectorHook<RootState> = hook_useSelector;\r\n\r\n// redux會自動幫我們創建context\r\nexport const useDispatch = () => hook_useDispatch<AppDispatch>();\r\n\r\n","\r\n// export const API_SERVER_URL = \"http://192.168.50.240:8000\";\r\nexport const API_SERVER_URL = `https://lowkeydd.ddnsking.com`;\r\nexport const VISITS_DEFAULT_GROUPNAME = \"Favorite\";\r\nexport const CHANNELS_DEFAULT_GROUPNAME = \"Resident\";\r\nexport const CHANNELS_SEARCH_RESULT = \"Search Result\";\r\nexport const CHANNELS_SEARCH_ERROR = \"Search Failed\";\r\nexport const CHANNELS_SEARCH_FAILED = \"Search Error\";\r\n\r\n\r\n","// expiration 會乘上1000倍，所以單位是秒\r\nexport function setSessionCookie(ssid: string, username: string, expiration: number) {\r\n  var expires = new Date(Date.now() + expiration * 1000).toUTCString();\r\n  document.cookie = `ssid=${ssid}; expires=${expires}; path=/`;\r\n  document.cookie = `username=${username}; expires=${expires}; path=/`;\r\n}\r\n\r\nexport function removeSessionCookie(ssid: string, username: string,) {\r\n  // 透過把修改有限期限為現在，來讓它自動被清除掉。\r\n  var expires = new Date(Date.now()).toUTCString();\r\n  document.cookie = `ssid=${ssid}; expires=${expires}; path=/`;\r\n  document.cookie = `username=${username}; expires=${expires}; path=/`;\r\n}\r\n\r\nexport function getCookie(c_name: string): string {\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + \"=\");\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(\";\", c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n","import { UserState } from \"../../../app/types\";\r\n\r\nexport const setMsg = (\r\n  state: UserState,\r\n  action: { type: string; payload: string | undefined }\r\n) => {\r\n  if (action.payload === undefined) {\r\n    state.msg = \"\";\r\n  } else {\r\n    state.msg = action.payload;\r\n  }\r\n};\r\n","import { UserSession, UserState } from \"../../../app/types\";\r\nimport { setSessionCookie } from \"./cookies\";\r\n\r\nexport const setSession = (state: UserState, session: UserSession) => {\r\n    const { username, ssid, expiration } = session;\r\n    state.username = username;\r\n    state.ssid = ssid;\r\n    setSessionCookie(ssid, username, expiration);\r\n  };","import { UserLoginResponse, UserState } from \"../../../app/types\";\r\nimport { setSession } from \"../shares/setSession\";\r\n\r\nexport const setUserLogin = (\r\n  state: UserState,\r\n  action: { type: string; payload: UserLoginResponse }\r\n) => {\r\n  const { username, ssid, expiration, msg } = action.payload;\r\n  setSession(state, { username, ssid, expiration });\r\n  state.msg = msg;\r\n};\r\n","import { UserLoginResponse, UserState } from \"../../../app/types\";\r\nimport { setSession } from \"../shares/setSession\";\r\n\r\nexport const setUserRegister = (\r\n  state: UserState,\r\n  action: { type: string; payload: UserLoginResponse }\r\n) => {\r\n  const { username, ssid, expiration, msg } = action.payload;\r\n  setSession(state, { username, ssid, expiration });\r\n  state.msg = msg;\r\n};\r\n","import { UserState } from \"../../../app/types\";\r\nimport { removeSessionCookie } from \"../shares/cookies\";\r\n\r\nexport const onErrorAndClearUser = (\r\n  state: UserState,\r\n  action: { type: string; payload: string }\r\n) => {\r\n    // 把當前的User資訊都清掉\r\n    const {ssid, username} = state;\r\n    removeSessionCookie(ssid, username);\r\n    state.username = \"\";\r\n    state.ssid = \"\";\r\n    // set msg\r\n    state.msg = action.payload;\r\n    \r\n};\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { UserState } from \"../../app/types\";\r\nimport { getCookie } from \"./shares/cookies\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst initialState: UserState = {\r\n  username: getCookie(\"username\"),\r\n  ssid: getCookie(\"ssid\"),\r\n  msg: \"\",\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nexport const {setMsg, setUserLogin, setUserRegister, onErrorAndClearUser}= slice.actions;\r\nexport default slice.reducer;\r\n\r\n\r\n\r\nexport const selectUser = (state: RootState) => state.user;\r\nexport const selectMsg = createSelector([selectUser], (user) => {\r\n  return user.msg;\r\n});\r\nexport const selectIsLogin = createSelector([selectUser], (user) => {\r\n  return user.username !== \"\" && user.username !== \"\";\r\n});\r\n","import {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  CHANNELS_SEARCH_ERROR,\r\n  CHANNELS_SEARCH_FAILED,\r\n  CHANNELS_SEARCH_RESULT,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { ChannelCardProps, FavoredItem, VisitItem } from \"../../../app/types\";\r\n\r\nexport const createFavoredItem = (\r\n  card: ChannelCardProps | VisitItem,\r\n  options: { isChanged: boolean; isNewAdded: boolean; isDeleted: boolean }\r\n): FavoredItem => {\r\n  const { isChanged, isNewAdded, isDeleted } = options;\r\n  const { cid, cname, owner, avatar, method, group } = card;\r\n  const groupName = checkGroupName(group);\r\n  return {\r\n    cid,\r\n    cname,\r\n    owner,\r\n    avatar,\r\n    method,\r\n    group: groupName,\r\n    isChanged,\r\n    isNewAdded,\r\n    isDeleted,\r\n  };\r\n};\r\n\r\nconst checkGroupName = (groupName: string) => {\r\n  switch (groupName) {\r\n    case CHANNELS_DEFAULT_GROUPNAME:\r\n    case CHANNELS_SEARCH_RESULT:\r\n    case CHANNELS_SEARCH_ERROR: //這個應該不會出現\r\n    case CHANNELS_SEARCH_FAILED: //這個應該不會出現\r\n      return VISITS_DEFAULT_GROUPNAME;\r\n    default:\r\n      return groupName;\r\n  }\r\n};\r\n","import { ChannelCardProps, ChannelProps } from \"../../../app/types\";\r\n\r\nexport const createChannelCard = (\r\n    ch: ChannelProps,\r\n    options: {\r\n      group: string,\r\n      heart: boolean;\r\n    }\r\n  ): ChannelCardProps => {\r\n    const { group, heart } = options;\r\n    return {\r\n      ...ch,\r\n      group,\r\n      heart,\r\n    };\r\n  };","import {FavoredCardStore, FavoredItem} from '../../../app/types'\r\n\r\n   export  const setFavoredList = (\r\n        state: FavoredCardStore,\r\n        action: {\r\n          type: string;\r\n          payload: {\r\n            group: string[] | null;\r\n            list: FavoredItem[];\r\n          };\r\n        }\r\n      ) => {\r\n        const { group, list } = action.payload;\r\n        if (group !== null) {\r\n          state.group = group;\r\n        }\r\n        state.favoredList = list;\r\n      }","import { ChannelCardProps, FavoredCardStore } from \"../../../app/types\";\r\nimport { createFavoredItem } from \"../shares/createFavoredItem\";\r\n\r\nexport const setFromChannelCard = (\r\n  state: FavoredCardStore,\r\n  action: {\r\n    type: string;\r\n    payload: {\r\n      card: ChannelCardProps;\r\n      options: {\r\n        isChanged: boolean;\r\n        isNewAdded: boolean;\r\n        isDeleted: boolean;\r\n      };\r\n    };\r\n  }\r\n) => {\r\n  const { card, options } = action.payload;\r\n  const { isChanged, isNewAdded, isDeleted } = options;\r\n  const prelist = state.favoredList;\r\n\r\n  if (card.heart) {\r\n    state.favoredList = [\r\n      createFavoredItem(card, {\r\n        isChanged,\r\n        isNewAdded,\r\n        isDeleted,\r\n      }),\r\n      ...prelist.filter((p) => p.cid !== card.cid),\r\n    ];\r\n  } else {\r\n    if (isNewAdded) {\r\n      // 對於還不是喜愛的頻道直接移除。\r\n      state.favoredList = prelist.filter((p) => p.cid !== card.cid);\r\n    } else {\r\n      // 對於已經加入喜愛的頻道視為刪除(劃線)。\r\n      const newItem = createFavoredItem(card, {\r\n        isChanged,\r\n        isNewAdded,\r\n        isDeleted: true,\r\n      });\r\n      state.favoredList = prelist.map((p) =>\r\n        p.cid !== newItem.cid ? p : newItem\r\n      );\r\n    }\r\n  }\r\n};\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FavoredCardStore,\r\n  FavoredItem,\r\n  VisitItem,\r\n  VisitList,\r\n} from \"../../app/types\";\r\nimport { RootState } from \"../../app/store\";\r\nimport {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../app/config\";\r\nimport { createVisitItem } from \"../channelCardStore/shares\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst initialState: FavoredCardStore = {\r\n  group: [],\r\n  favoredList: [],\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"favored\",\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nexport const { setFavoredList, setFromChannelCard } = slice.actions;\r\nexport default slice.reducer;\r\n\r\nconst selectFavoredCardStore = (state: RootState) => state.favored;\r\n\r\nexport const selectFavoredList = createSelector(\r\n  [selectFavoredCardStore],\r\n  (store) => store.favoredList\r\n);\r\n\r\nexport const selectGroup = createSelector(\r\n  [selectFavoredCardStore],\r\n  (store) => store.group\r\n);\r\n\r\nexport const selectVisitList = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    const newfavoredList = favoredList\r\n      // 刪除\r\n      .filter((f) => !f.isDeleted)\r\n      // 修正群主名稱 Resident => Favorite\r\n      .map((f) =>\r\n        f.group === CHANNELS_DEFAULT_GROUPNAME\r\n          ? { ...f, group: VISITS_DEFAULT_GROUPNAME }\r\n          : f\r\n      );\r\n\r\n    // 刪除多餘沒被使用到的群組名稱\r\n    const mp = new Map<string, boolean>();\r\n    const newGroup: string[] = [];\r\n    newfavoredList.forEach((f: FavoredItem) => {\r\n      if (!mp.has(f.group)) {\r\n        mp.set(f.group, true);\r\n        newGroup.push(f.group);\r\n      }\r\n    });\r\n\r\n    // 轉成VisitItem表單。\r\n    const list: VisitItem[] = newfavoredList.map((f) => createVisitItem(f));\r\n\r\n    // 輸出結果\r\n    const visit: VisitList = {\r\n      list,\r\n      group: newGroup,\r\n    };\r\n    return visit;\r\n  }\r\n);\r\n\r\nexport const selectFavoredCardsList = createSelector(\r\n  [selectGroup, selectFavoredList],\r\n  (group, favoredList) => {\r\n    if (group.length === 0) {\r\n      return [[]];\r\n    }\r\n\r\n    const result: FavoredItem[][] = group.map((x) => []);\r\n    favoredList.forEach((f: FavoredItem) => {\r\n      const index = group.indexOf(f.group);\r\n      result[index].push(f);\r\n    });\r\n\r\n    return result;\r\n  }\r\n);\r\n\r\nexport const selectIsListChanged = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var isListChanged = false;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isChanged, isNewAdded, isDeleted } = favoredList[i];\r\n      if (isChanged || isNewAdded || isDeleted) {\r\n        isListChanged = true;\r\n        break;\r\n      }\r\n    }\r\n    return isListChanged;\r\n  }\r\n);\r\n\r\nexport const selectNumOfNewAdded = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var count = 0;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isNewAdded } = favoredList[i];\r\n      if (isNewAdded) {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n);\r\n","import { CHANNELS_DEFAULT_GROUPNAME, VISITS_DEFAULT_GROUPNAME } from \"../../../app/config\";\r\nimport { ChannelCardProps, FavoredItem, VisitItem } from \"../../../app/types\";\r\n\r\nexport const createVisitItem = (\r\n    card: ChannelCardProps | FavoredItem\r\n  ): VisitItem => {\r\n    const { cid, cname, owner, avatar, method, group } = card;\r\n    const groupName =\r\n      group === CHANNELS_DEFAULT_GROUPNAME ? VISITS_DEFAULT_GROUPNAME : group;\r\n    return {\r\n      cid,\r\n      cname,\r\n      owner,\r\n      avatar,\r\n      method,\r\n      group: groupName,\r\n    };\r\n  };","/**\r\n * 1) 當清單狀態改變時，於開啟清單前執行一次，避免不同步。\r\n * 2) 關閉清單時，若有異動時，保存新的頻道收藏清單。\r\n */\r\nimport axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL, VISITS_DEFAULT_GROUPNAME } from \"../../../app/config\";\r\nimport { FavoredItem, VisitItem, VisitList } from \"../../../app/types\";\r\nimport { onErrorAndClearUser, setMsg } from \"../../user/slice\";\r\nimport { createFavoredItem } from \"../shares/createFavoredItem\";\r\nimport { setFavoredList } from \"../slice\";\r\n\r\nexport const reqUpdateVisit =\r\n  (username: string, ssid: string, visit: VisitList, nextPathName: string) =>\r\n  (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    postform.append(\"visit\", JSON.stringify({ ...visit }));\r\n    axios.post(`${API_SERVER_URL}/visit/update`, postform).then(\r\n      (resp) => {\r\n        console.log(\"更新VisitList, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        // const msg: string = resp.data[\"msg\"];\r\n\r\n        if (code === \"success\") {\r\n          // 安全地設置新的group，且添加 \"Favorite\" 分群\r\n          const group =\r\n            visit.group && visit.group.length > 0\r\n              ? visit.group.includes(VISITS_DEFAULT_GROUPNAME)\r\n                ? visit.group\r\n                : [VISITS_DEFAULT_GROUPNAME, ...visit.group]\r\n              : [VISITS_DEFAULT_GROUPNAME];\r\n\r\n          // 安全地設置新的 FavoredList\r\n          const newFavoredList: FavoredItem[] =\r\n            visit.list && visit.list.length > 0\r\n              ? visit.list.map((l: VisitItem) =>\r\n                  createFavoredItem(l, {\r\n                    isChanged: false,\r\n                    isDeleted: false,\r\n                    isNewAdded: false,\r\n                  })\r\n                )\r\n              : [];\r\n\r\n          dispatch(\r\n            setFavoredList({\r\n              list: newFavoredList,\r\n              group: group,\r\n            })\r\n          );\r\n          console.log(\"reqUpdateVisit is success, now directo : \",nextPathName)\r\n          history.push({ pathname: nextPathName });\r\n          if (nextPathName === \"/login/\"){\r\n            dispatch(setMsg(`${username} 要登出嗎?`));\r\n          }else{\r\n            dispatch(setMsg(\"\"));\r\n          }\r\n        } else if (code === \"failure\") {\r\n          console.log(\"code failure，重新導引到登入頁面:\\n\");\r\n          setFavoredList({\r\n            list: [],\r\n            group: [VISITS_DEFAULT_GROUPNAME],\r\n          });\r\n          dispatch(onErrorAndClearUser(\"發生錯誤了，麻煩請重新登入\"))\r\n          history.push({ pathname: \"/login\" });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"更新VisitList失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import styled from \"styled-components\";\r\nimport { history } from \"../..\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { NavButtonProps, VisitList } from \"../../app/types\";\r\nimport { reqUpdateVisit } from \"../../features/favored/api\";\r\nimport {\r\n  selectIsListChanged,\r\n  selectVisitList,\r\n} from \"../../features/favored/slice\";\r\nimport {\r\n  onErrorAndClearUser,\r\n  selectIsLogin,\r\n  selectUser,\r\n  setMsg,\r\n} from \"../../features/user/slice\";\r\n\r\nexport default function NavButton(props: NavButtonProps) {\r\n  const { title, path, icon, beforeSwitch, afterSwitch } = props;\r\n  const isListChanged: boolean = useSelector(selectIsListChanged);\r\n  const user = useSelector(selectUser);\r\n  const isLogin: boolean = useSelector(selectIsLogin);\r\n  const visit: VisitList = useSelector(selectVisitList);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLeaving = (curPath: string, nextPath: string): boolean => {\r\n    // console.log(\"==============ONLEAVING==============\");\r\n    // console.log(\"onLeaving curPath:>\", curPath);\r\n    // console.log(\"onLeaving nextPath:>\", nextPath);\r\n    // console.log(\"=====================================\");\r\n    switch (curPath) {\r\n      case \"/channels/\":\r\n        return onLeavingBrowser(curPath, nextPath);\r\n      case \"/favored/\":\r\n        return onLeavingCollections(curPath, nextPath);\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const _autoSaveOnError = () => {\r\n    /**\r\n     * 照理說是要登入才能異動List，\r\n     * 如果使用者離開時已經登入失效，要提醒重新登入。\r\n     * (此時，異動的資料也會失效)\r\n     */\r\n    dispatch(onErrorAndClearUser(\"發生錯誤了，麻煩請重新登入\"));\r\n    history.push({ pathname: \"/login\" });\r\n  };\r\n\r\n  const _autoSaveAndRedirectTo = (nextPath: string) => {\r\n    /**\r\n     * 自動保存\r\n     */\r\n    console.log(\"The favoredlist is Changed, saved automatically\");\r\n    const { username, ssid } = user;\r\n    dispatch(reqUpdateVisit(username, ssid, visit, nextPath));\r\n  };\r\n\r\n  const onLeavingBrowser = (curPath: string, nextPath: string): boolean => {\r\n\r\n    if (isListChanged && nextPath !== \"/favored/\") {\r\n      if (!isLogin) {\r\n        _autoSaveOnError();\r\n        return true;\r\n      } else {\r\n        _autoSaveAndRedirectTo(nextPath);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const onLeavingCollections = (curPath: string, nextPath: string): boolean => {\r\n\r\n    if (isListChanged) {\r\n      if (!isLogin) {\r\n        _autoSaveOnError();\r\n        return true;\r\n      } else {\r\n        _autoSaveAndRedirectTo(nextPath);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const onEnter = (curPath: string, nextPath: string): boolean => {\r\n    // console.log(\"==============ON_ENTER==============\");\r\n    // console.log(\"onEnter curPath:>\", curPath);\r\n    // console.log(\"onEnter nextPath:>\", nextPath);\r\n    // console.log(\"=====================================\");\r\n    switch (nextPath) {\r\n      case \"/login/\":\r\n        return onEnterLogin();\r\n      case \"/register/\":\r\n        return onEnterRegister();\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const onEnterRegister = (): boolean => {\r\n    return false;\r\n  };\r\n  \r\n  const onEnterLogin = (): boolean => {\r\n    if (isLogin) {\r\n      console.log(\"onEnterLogin\");\r\n      dispatch(setMsg(`${user.username} 要登出嗎?`));\r\n      history.push({ pathname: \"/logout/\" });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const onClick = () => {\r\n    if (path === \"\") return; //無效\r\n    beforeSwitch();\r\n    const current = history.location.pathname;\r\n    if (current !== path) {\r\n      // 當Nav離開頁面時，是否發生條件轉址。\r\n      let isLeavingChanged = onLeaving(current, path);\r\n      if (!isLeavingChanged) {\r\n        // 當Nav進入頁面時，是否發生條件轉址。\r\n        let isEnterChanged = onEnter(current, path);\r\n        if (!isEnterChanged) {\r\n          dispatch(setMsg(\"\")); // clear\r\n          history.push({ pathname: `${path}` });\r\n        }\r\n      }\r\n    }\r\n    afterSwitch();\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container onClick={onClick}>\r\n        {icon}\r\n        <p>{title}</p>\r\n      </Container>\r\n      {/* 附加物 */}\r\n      {props.children}\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  :hover {\r\n    div {\r\n      // Container\r\n      background-color: var(--menuText_Hover);\r\n\r\n      p {\r\n        // NavItemTextColor\r\n        color: #fff;\r\n      }\r\n      svg {\r\n        // NavItemIconColor\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    div {\r\n      h3 {\r\n        // NavUser-Backaground\r\n        background-color: var(--menuText_Hover);\r\n\r\n        span {\r\n          // NavUser-UserName\r\n          color: #fff;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 1.5em;\r\n  cursor: pointer;\r\n  div {\r\n    width: 80%;\r\n    p {\r\n      margin: 0px;\r\n    }\r\n  }\r\n\r\n  svg {\r\n    color: var(--menuText);\r\n    margin-right: 10px;\r\n    font-size: 26px;\r\n  }\r\n  p {\r\n    color: var(--menuText);\r\n    text-decoration: none;\r\n    font-size: 23px;\r\n    letter-spacing: 5px;\r\n  }\r\n\r\n  transition: 0.3s;\r\n\r\n  // 螢幕寬度小於768px時\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    margin: 0 0;\r\n    padding: 0 0;\r\n    svg {\r\n      margin: 0px 0px;\r\n      padding: 0 16px;\r\n      font-size: 35px;\r\n    }\r\n    p {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    width: 80%;\r\n    margin: 0px 10px 0px 15px;\r\n    padding: 25px;\r\n    /* background-color: orange; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n\r\n    svg {\r\n      font-size: 28px;\r\n    }\r\n    p {\r\n      margin: 0px;\r\n      display: block;\r\n      letter-spacing: 10px;\r\n      font-size: 25px;\r\n      width: 50%;\r\n    }\r\n  }\r\n`;\r\n","import { NavButtonProps } from \"../../../app/types\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavBrowser(props: NavButtonProps) {\r\n  return <NavButton {...props} />;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport { NavButtonProps } from \"../../../app/types\";\r\nimport { selectNumOfNewAdded } from \"../../../features/favored/slice\";\r\n\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavCollections(props: NavButtonProps) {\r\n  const numOfAddedFavored = useSelector(selectNumOfNewAdded);\r\n\r\n  return (\r\n    <NavButton {...props}>\r\n      <Counter visible={numOfAddedFavored > 0}>\r\n        <span>{numOfAddedFavored}</span>\r\n      </Counter>\r\n    </NavButton>\r\n  );\r\n}\r\n\r\nconst Counter = styled.div<{ visible: boolean }>`\r\n  --display: ${(props) => [props.visible ? `block` : `none`]};\r\n  display: var(--display);\r\n  text-align: center;\r\n  line-height: 18px;\r\n  position: absolute;\r\n  color: #fff;\r\n  top: 22px;\r\n  right: 95px;\r\n  font-size: 12px;\r\n  pointer-events: none;\r\n\r\n  span {\r\n    display: var(--display);\r\n    content: \"\";\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 18px;\r\n    height: 18px;\r\n    color: white;\r\n    background-color: red;\r\n    border-radius: 50%;\r\n  }\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    line-height: 18px;\r\n    top: 19px;\r\n    right: 24px;\r\n    font-size: 14px;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    line-height: 16px;\r\n    font-size: 12px;\r\n    top: 327px;\r\n    left: 102px;\r\n  }\r\n`;\r\n","import { NavButtonProps } from \"../../../app/types\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavTheater(props: NavButtonProps) {\r\n  return <NavButton {...props} />;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport { NavButtonProps } from \"../../../app/types\";\r\nimport { selectIsLogin, selectUser } from \"../../../features/user/slice\";\r\nimport NavButton from \"../NavButton\";\r\n\r\nexport function NavUser(props: NavButtonProps) {\r\n  const user = useSelector(selectUser);\r\n  const isLogin = useSelector(selectIsLogin);\r\n  const usernameInfo =\r\n    user.username.length > 6\r\n      ? user.username.substring(0, 6) + \"...\"\r\n      : user.username;\r\n  return (\r\n    <NavButton {...props}>\r\n      <Status visible={isLogin}>\r\n        <h3>\r\n          <span>{}</span>\r\n          <span>{usernameInfo}</span>\r\n        </h3>\r\n      </Status>\r\n    </NavButton>\r\n  );\r\n}\r\n\r\nconst Status = styled.div<{ visible: boolean }>`\r\n  --display: ${(props) => [props.visible ? `block` : `none`]};\r\n  display: var(--display);\r\n  text-align: center;\r\n  line-height: 18px;\r\n  position: absolute;\r\n  color: #fff;\r\n  top: 22px;\r\n  right: 95px;\r\n  font-size: 12px;\r\n\r\n  h3 {\r\n    display: var(--display);\r\n    content: \"\";\r\n    transform: translate(-50%, -50%);\r\n    position: absolute;\r\n    top: 19px;\r\n    left: -140px;\r\n    width: 10px;\r\n    height: 10px;\r\n    color: white;\r\n    background-color: var(--navColor);\r\n    border-radius: 50%;\r\n    pointer-events: none;\r\n\r\n    // green login dot\r\n    span:nth-child(1) {\r\n      display: var(--display);\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 2px;\r\n      left: 2px;\r\n      width: 6px;\r\n      height: 6px;\r\n      background-color: #54f542;\r\n      border-radius: 50%;\r\n\r\n    }\r\n    // downMenu\r\n    span:nth-child(2) {\r\n      display: var(--display);\r\n      content: \"\";\r\n      transform: translate(-50%, -50%);\r\n      position: relative;\r\n      top: 16px;\r\n      left: 30px;\r\n      color: var(--menuText);\r\n      width: 100px;\r\n      font-size: 14px;\r\n\r\n    }\r\n\r\n    transition: 0.3s;\r\n  }\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    line-height: 18px;\r\n    top: 19px;\r\n    right: 24px;\r\n    font-size: 14px;\r\n\r\n    h3 {\r\n      top: 25px;\r\n      left: -67px;\r\n      width: 14px;\r\n      height: 14px;\r\n\r\n      span:nth-child(1) {\r\n        top: 3px;\r\n        left: 3px;\r\n        width: 8px;\r\n        height: 8px;\r\n      }\r\n\r\n      span:nth-child(2) {\r\n        left: -2px;\r\n        width: 100px;\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    line-height: 16px;\r\n    font-size: 12px;\r\n    top: 28px;\r\n    left: -265px;\r\n\r\n    h3 {\r\n      top: 242px;\r\n      left: 367px;\r\n      width: 10px;\r\n      height: 10px;\r\n      background-color: var(--menuBgColor);\r\n\r\n      span:nth-child(1) {\r\n        top: 2px;\r\n        left: 2px;\r\n        width: 6px;\r\n        height: 6px;\r\n      }\r\n\r\n      span:nth-child(2) {\r\n        top: 16px;\r\n        left: -4px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { ChannelProps, TheaterElement } from \"../../../app/types\";\r\n\r\nexport const createTheaterElement = (\r\n    ch: ChannelProps,\r\n    options: { checked: boolean }\r\n  ): TheaterElement => {\r\n    const { cid, cname, avatar, streamurl, thumbnail, method } = ch;\r\n    const { checked } = options;\r\n    return {\r\n      cid,\r\n      cname,\r\n      avatar,\r\n      streamurl,\r\n      preview: thumbnail,\r\n      method,\r\n      checked,\r\n    };\r\n  };","import { IframeProps } from \"../../../app/types\";\r\n\r\nexport const getListAppendIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  newItem: T\r\n): T[] => {\r\n  const newlist = !list\r\n    ? [newItem]\r\n    : list.filter((o) => o.cid !== newItem.cid).concat(newItem);\r\n\r\n  return newlist;\r\n};\r\n\r\nexport const getListRemoveIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  cid: string\r\n): T[] => {\r\n  const newlist = !list ? [] : list.filter((o) => o.cid !== cid);\r\n\r\n  return newlist;\r\n};\r\n","type ConnectionConfigProps = {\r\n  IsLocal: boolean;\r\n  HostName: string;\r\n};\r\n\r\nexport var ConnectionConfig: ConnectionConfigProps = {\r\n  IsLocal: false,\r\n  HostName: \"\",\r\n};\r\n\r\nexport const decodeUrlToConnectionConfig = () => {\r\n  console.log(\"decodeUrlToConnectionConfig\");\r\n\r\n  const IsLocal =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  const HostName = window.location.hostname;\r\n\r\n  ConnectionConfig = {\r\n    IsLocal,\r\n    HostName,\r\n  };\r\n};\r\n","import { ConnectionConfig } from \"../../../app/connections\";\r\nimport { ChannelProps, PlayerIframe, TheaterElement } from \"../../../app/types\";\r\n\r\nexport const convertToPlayerIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const createPlayerIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nconst getPlayerSrc = (\r\n    method: string,\r\n    streamurl: string,\r\n    cname: string\r\n  ): string => {\r\n    console.log(\"ConnectionConfig.HostName: \", ConnectionConfig.HostName);\r\n  \r\n    let src = \"\";\r\n    switch (method) {\r\n      case \"youtube\":\r\n        let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n        let vedioid = sub ? sub[1] : \"\";\r\n        src = `//www.youtube.com/embed/${vedioid}?enablejsapi=1&origin=${ConnectionConfig.HostName}&widgetid=1`;\r\n        break;\r\n      case \"twitch\":\r\n        src = `//player.twitch.tv?allowfullscreen=false&channel=${cname}&parent=${ConnectionConfig.HostName}&muted=false&autoplay=false`;\r\n        break;\r\n      default:\r\n        console.error(\"缺少對應的處理方式: \", method);\r\n        break;\r\n    }\r\n    return src;\r\n  };\r\n","import { ConnectionConfig } from \"../../../app/connections\";\r\nimport { ChannelProps, ChatboxIframe, TheaterElement } from \"../../../app/types\";\r\n\r\nexport const convertToChatboxIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nexport const createChatboxIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nconst getChatboxSrc = (\r\n    method: string,\r\n    streamurl: string,\r\n    cname: string\r\n  ): string => {\r\n    console.log(\"ConnectionConfig.HostName: \", ConnectionConfig.HostName);\r\n  \r\n    let src = \"\";\r\n    switch (method) {\r\n      case \"youtube\":\r\n        let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n        let vedioid = sub ? sub[1] : \"\";\r\n        src = `//www.youtube.com/live_chat?v=${vedioid}&is_popout=1&embed_domain=${ConnectionConfig.HostName}&dark_theme=1`;\r\n        break;\r\n      case \"twitch\":\r\n        src = `//www.twitch.tv/embed/${cname}/chat?darkpopout=&secret=safe&parent=${ConnectionConfig.HostName}`;\r\n        break;\r\n      default:\r\n        console.error(\"缺少對應的處理方式: \", method);\r\n        break;\r\n    }\r\n    return src;\r\n  };\r\n","export const getIsFullScreen = () => {\r\n  // ## The below if statement seems to work better ## if ((document.fullScreenElement && document.fullScreenElement !== null) || (document.msfullscreenElement && document.msfullscreenElement !== null) || (!document.mozFullScreen && !document.webkitIsFullScreen)) {\r\n  return (\r\n    (document.fullScreenElement !== undefined &&\r\n      document.fullScreenElement === null) ||\r\n    (document.msFullscreenElement !== undefined &&\r\n      document.msFullscreenElement === null) ||\r\n    (document.mozFullScreen !== undefined && !document.mozFullScreen) ||\r\n    (document.webkitIsFullScreen !== undefined && !document.webkitIsFullScreen)\r\n  );\r\n};\r\n\r\nexport const enableFullScreen = (elem) => {\r\n  if (elem.requestFullScreen) {\r\n    elem.requestFullScreen();\r\n  } else if (elem.mozRequestFullScreen) {\r\n    elem.mozRequestFullScreen();\r\n  } else if (elem.webkitRequestFullScreen) {\r\n    elem.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\r\n  } else if (elem.msRequestFullscreen) {\r\n    elem.msRequestFullscreen();\r\n  }\r\n};\r\n\r\nexport const exitFullScreen = () => {\r\n  if (document.cancelFullScreen) {\r\n    document.cancelFullScreen();\r\n  } else if (document.mozCancelFullScreen) {\r\n    document.mozCancelFullScreen();\r\n  } else if (document.webkitCancelFullScreen) {\r\n    document.webkitCancelFullScreen();\r\n  } else if (document.msExitFullscreen) {\r\n    document.msExitFullscreen();\r\n  }\r\n};\r\n\r\nexport const toggleFullScreen = (elem) => {\r\n  const isFullScreen = getIsFullScreen();\r\n  if (isFullScreen) {\r\n    enableFullScreen(elem);\r\n  } else {\r\n    exitFullScreen();\r\n  }\r\n};\r\n","import { ChannelProps, TheaterElement, TheaterState } from \"../../../app/types\";\r\nimport { createTheaterElement } from \"../shares\";\r\n\r\n\r\nexport const setElements = (\r\n  state: TheaterState,\r\n  action: {\r\n    type: string;\r\n    payload: { channels: ChannelProps[] };\r\n  }\r\n) => {\r\n  const { channels } = action.payload;\r\n  if (channels.length === 0) {\r\n    state.elements = [];\r\n    state.slider.sliderIndex = 0;\r\n  }\r\n  const mp = new Map<string, boolean>();\r\n  state.playlist.forEach((p) => mp.set(p.cid, true));\r\n\r\n  // 進入Theater頁面後，會先獲取當前可以\"直播\"的頻道元素。\r\n  // 進入Theater頁面方式有兩種:\r\n  //    1) 透過NAV按鈕直接進入。\r\n  //    2) 透過點擊卡片進入，這種方式會自動播放卡片上的影片。\r\n  // 此處，檢查是否為(2)的方式，即檢查fromChannel，並再檢查後清除。\r\n  var found = 0;\r\n  var cidFromChannel: string = \"\";\r\n  if (state.fromChannel.length > 0) {\r\n    cidFromChannel = state.fromChannel[0].cid;\r\n  }\r\n\r\n  // 透過playlist中的元素，對應elements進行修改\r\n  const elements: TheaterElement[] = channels.map((ch, i) => {\r\n    if (ch.cid === cidFromChannel) {\r\n      found = i;\r\n      console.log(\"由FromChannel存在，NEW_sliderIndex: \", found);\r\n    }\r\n\r\n    // 逐一獲取成 TheaterElement\r\n    if (mp.get(ch.cid)) {\r\n      return createTheaterElement(ch, { checked: true });\r\n    } else {\r\n      return createTheaterElement(ch, { checked: false });\r\n    }\r\n  });\r\n\r\n  state.fromChannel = []; //每次都清空\r\n  state.elements = elements;\r\n  state.slider.sliderIndex = found + 1;\r\n};\r\n","import { TheaterState } from \"../../../app/types\";\r\n\r\nexport const setSlider = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { next: number; isTakenOverAnim: boolean };\r\n    }\r\n  ) => {\r\n    const { next, isTakenOverAnim } = action.payload;\r\n    console.log(\r\n      `[setSlider] next:${next} , isTakenOverAnim:${isTakenOverAnim}`\r\n    );\r\n    state.slider.sliderIndex = next;\r\n    state.slider.isTakenOverAnim = isTakenOverAnim;\r\n  }","import { TheaterState } from \"../../../app/types\";\r\n\r\nexport const setSliderFolded = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: boolean;\r\n    }\r\n  ) => {\r\n    // 主動觸發一次resize\r\n    if (state.playlist.length > 0) {\r\n      console.log(\"resize on after sliderFold\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n\r\n    state.slider.isFolded = action.payload;\r\n    console.log(`slider isFolded : ${action.payload}`);\r\n  }","import { enableFullScreen, exitFullScreen } from \"../shares/toggleFullScreen\";\r\nimport { TheaterState } from \"../../../app/types\";\r\n\r\nexport const setFullScreen = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: boolean;\r\n    }\r\n  ) => {\r\n    if (action.payload) {\r\n      enableFullScreen(document.body);\r\n    } else {\r\n      exitFullScreen();\r\n    }\r\n    state.slider.isFullScreen = action.payload;\r\n    console.log(`slider isFullScreen : ${action.payload}`);\r\n  }","import { history } from \"../../..\";\r\nimport { ChannelCardProps, TheaterState } from \"../../../app/types\";\r\nimport { convertToChatboxIframe, convertToPlayerIframe } from \"../shares\";\r\n\r\n\r\nexport const setFromChannel =(\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { item: ChannelCardProps };\r\n    }\r\n  ) => {\r\n    const { item } = action.payload;\r\n    const newPlayerIframe = convertToPlayerIframe(item, {\r\n      w: 0,\r\n      h: 0,\r\n    });\r\n    const newChatboxIframe = convertToChatboxIframe(item, {\r\n      w: 0,\r\n      h: 0,\r\n      isEnable: item.status === \"live\",\r\n    });\r\n    state.fromChannel = [item];\r\n    state.playlist = [newPlayerIframe];\r\n    state.chatlist = [newChatboxIframe];\r\n    history.push({ pathname: \"/theater\" });\r\n  }","import { ChatboxIframe, PlayerIframe, TheaterState } from \"../../../app/types\";\r\n\r\nexport const resizeGridLayout = (\r\n  state: TheaterState,\r\n  action: {\r\n    type: string;\r\n    payload: {\r\n      clientWidth: number;\r\n      clientHeight: number;\r\n    };\r\n  }\r\n) => {\r\n  const { clientWidth, clientHeight } = action.payload;\r\n  const ratio = state.gridlayout.ratio;\r\n  const numOfIframes = state.playlist.length;\r\n  const { flexType, pw, ph, cw, ch, col, row } = calcNewIframeSizeV2(\r\n    clientWidth,\r\n    clientHeight,\r\n    ratio,\r\n    numOfIframes\r\n  );\r\n  const { w: noChatWidth, h: noChatHeight } = calcSingleIframeSize(\r\n    clientWidth,\r\n    clientHeight,\r\n    row,\r\n    col,\r\n    ratio\r\n  );\r\n\r\n  let newPlayerList: PlayerIframe[] = [];\r\n  let newChatboxList: ChatboxIframe[] = [];\r\n\r\n  state.chatlist.forEach((chatbox, i) => {\r\n    const player = state.playlist[i];\r\n    if (chatbox.isEnable) {\r\n      newPlayerList.push(setIframeSize(player, { w: pw, h: ph }));\r\n      newChatboxList.push(setIframeSize(chatbox, { w: cw, h: ch }));\r\n      // playerSize.push({ w: pw, h: ph });\r\n      // chatboxSize.push({ w: cw, h: ch });\r\n    } else {\r\n      newPlayerList.push(\r\n        setIframeSize(player, { w: noChatWidth, h: noChatHeight })\r\n      );\r\n      newChatboxList.push(setIframeSize(chatbox, { w: 0, h: 0 }));\r\n      // playerSize.push({ w: noChatWidth, h: noChatHeight });\r\n      // chatboxSize.push({ w: 0, h: 0 });\r\n    }\r\n  });\r\n\r\n  state.playlist = newPlayerList;\r\n  state.chatlist = newChatboxList;\r\n\r\n  state.gridlayout = {\r\n    flexType,\r\n    ratio,\r\n    clientWidth,\r\n    clientHeight,\r\n    col,\r\n    row,\r\n  };\r\n};\r\n\r\nconst MIN_CHATBOX_WIDTH = 320;\r\nconst MIN_CHATBOX_HEIGHT = 320;\r\n\r\ntype IframeSizePropsV2 = {\r\n  col: number;\r\n  row: number;\r\n  pw: number;\r\n  ph: number;\r\n  cw: number;\r\n  ch: number;\r\n  flexType: string;\r\n};\r\n\r\nconst calcNewIframeSizeV2 = (\r\n  cW: number,\r\n  cH: number,\r\n  ratio: number,\r\n  size: number\r\n): IframeSizePropsV2 => {\r\n  let result: IframeSizePropsV2 = {\r\n    col: 0,\r\n    row: 0,\r\n    cw: 0,\r\n    ch: 0,\r\n    pw: 0,\r\n    ph: 0,\r\n    flexType: \"column\",\r\n  };\r\n\r\n  let maxArea = 0;\r\n\r\n  for (let i = 1; i < size + 1; i++) {\r\n    const curRow = Math.ceil(size / i);\r\n\r\n    const gridW = cW / i;\r\n    const gridH = cH / curRow;\r\n    var curPlayW = 0;\r\n    var curPlayH = 0;\r\n    var curChatW = 0;\r\n    var curChatH = 0;\r\n\r\n    // TYPE flex-direction: column\r\n    if (gridH > MIN_CHATBOX_HEIGHT) {\r\n      curChatW = gridW;\r\n      curPlayH = Math.min(gridW * ratio, gridH - MIN_CHATBOX_HEIGHT);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n\r\n      curChatH = gridH - curPlayH;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // TYPE flex-direction: row\r\n    if (gridW > MIN_CHATBOX_WIDTH) {\r\n      curChatH = gridH;\r\n      curPlayW = Math.min(gridH * (1 / ratio), gridW - MIN_CHATBOX_WIDTH);\r\n      curPlayH = curPlayW * ratio;\r\n\r\n      curChatW = gridW - curPlayW;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"row\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[row] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // neither\r\n    if (gridH <= MIN_CHATBOX_HEIGHT && gridW <= MIN_CHATBOX_WIDTH) {\r\n      curPlayH = Math.min(gridW * ratio, gridH);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n      curChatW = 0;\r\n      curChatH = 0;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n  }\r\n\r\n  return { ...result };\r\n};\r\n\r\nconst setIframeSize = <T extends {}>(\r\n  item: T,\r\n  options: { ratio?: number; w: number; h: number }\r\n): T => {\r\n  const { ratio, w, h } = options;\r\n  return {\r\n    ...item,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nconst getResult = (\r\n  col: number,\r\n  row: number,\r\n  cw: number,\r\n  ch: number,\r\n  pw: number,\r\n  ph: number,\r\n  flexType: string\r\n): IframeSizePropsV2 => {\r\n  return {\r\n    col,\r\n    row,\r\n    cw,\r\n    ch,\r\n    pw,\r\n    ph,\r\n    flexType,\r\n  };\r\n};\r\n\r\nconst calcSingleIframeSize = (\r\n  cW: number,\r\n  cH: number,\r\n  curRow: number,\r\n  curCol: number,\r\n  ratio: number\r\n): { w: number; h: number } => {\r\n  const gridW = cW / curCol;\r\n  const gridH = gridW * ratio;\r\n  let h = Math.min(gridH, cH / curRow);\r\n  let w = h * (1 / ratio);\r\n  return { w, h };\r\n};\r\n","import { ChatboxIframe, PlayerIframe, TheaterElement, TheaterState } from \"../../../app/types\";\r\nimport { createChatboxIframe, createPlayerIframe, getListAppendIframe } from \"../shares\";\r\n\r\nexport const appendIframeToPlaylist =(\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { item: TheaterElement };\r\n    }\r\n  ) => {\r\n    const { item } = action.payload;\r\n    const newItem: TheaterElement = { ...item, checked: true };\r\n    const newElements: TheaterElement[] = state.elements.map((e) =>\r\n      e.cid === item.cid ? newItem : e\r\n    );\r\n\r\n    const newPlaylist: PlayerIframe[] = getListAppendIframe(\r\n      state.playlist,\r\n      createPlayerIframe(newItem, { w: 0, h: 0 })\r\n    );\r\n\r\n    const newChatlist: ChatboxIframe[] = getListAppendIframe(\r\n      state.chatlist,\r\n      createChatboxIframe(newItem, { w: 0, h: 0, isEnable: true })\r\n    );\r\n\r\n    state.elements = newElements;\r\n    state.playlist = newPlaylist;\r\n    state.chatlist = newChatlist;\r\n\r\n    if (state.playlist.length > 0) {\r\n      console.log(\"resize on after appendIframeToPlaylist\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n  }","import { TheaterElement, TheaterState } from \"../../../app/types\";\r\nimport { getListRemoveIframe } from \"../shares\";\r\n\r\nexport const removeIframeFromPlaylist = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { item: TheaterElement };\r\n    }\r\n  ) => {\r\n    const { item } = action.payload;\r\n    const newItem: TheaterElement = { ...item, checked: false };\r\n    const newElements: TheaterElement[] = state.elements.map((e) =>\r\n      e.cid === item.cid ? newItem : e\r\n    );\r\n    state.elements = newElements;\r\n    state.playlist = getListRemoveIframe(state.playlist, item.cid);\r\n    state.chatlist = getListRemoveIframe(state.chatlist, item.cid);\r\n\r\n    if (state.playlist.length > 0) {\r\n      console.log(\"resize on after removeIframeFromPlaylist\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n  }","import { ChatboxIframe, TheaterState } from \"../../../app/types\";\r\n\r\nexport const switchChatBoxByCid = (\r\n  state: TheaterState,\r\n  action: {\r\n    type: string;\r\n    payload: { cid: string };\r\n  }\r\n) => {\r\n  const { cid } = action.payload;\r\n\r\n  // 透過關閉元素的cid，找出對應在Slider上的元素，連同設置為關閉狀態。\r\n  state.chatlist = state.chatlist.map((c: ChatboxIframe) =>\r\n    c.cid === cid ? { ...c, isEnable: !c.isEnable } : c\r\n  );\r\n\r\n  if (state.playlist.length > 0) {\r\n    console.log(\"resize on after switchChatBoxByCid\");\r\n    window.dispatchEvent(new Event(\"resize\"));\r\n  }\r\n};\r\n","import { TheaterState } from \"../../../app/types\";\r\nimport { getListRemoveIframe } from \"../shares\";\r\n\r\nexport const removeIframeByCid = (\r\n    state:TheaterState,\r\n    action: {\r\n      type: string;\r\n      payload: { cid: string };\r\n    }\r\n  ) => {\r\n    const { cid } = action.payload;\r\n\r\n    // 透過關閉元素的cid，找出對應在Slider上的元素，連同設置為關閉狀態。\r\n    if (state.elements.length > 0) {\r\n      state.elements = state.elements.map((e) =>\r\n        e.cid === cid ? { ...e, checked: false } : e\r\n      );\r\n    }\r\n\r\n    state.playlist = getListRemoveIframe(state.playlist, cid);\r\n    state.chatlist = getListRemoveIframe(state.chatlist, cid);\r\n\r\n    if (state.playlist.length > 0) {\r\n      console.log(\"resize on after removeIframeByCid\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n  }","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { TheaterState } from \"../../app/types\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst initialState: TheaterState = {\r\n  fromChannel: [],\r\n  elements: [],\r\n  playlist: [],\r\n  chatlist: [],\r\n  slider: {\r\n    sliderIndex: 0,\r\n    isTakenOverAnim: false,\r\n    isFolded: false,\r\n    isFullScreen: false,\r\n  },\r\n  gridlayout: {\r\n    flexType: \"column\",\r\n    ratio: 0.5625,\r\n    clientWidth: 0,\r\n    clientHeight: 0,\r\n    col: 0,\r\n    row: 0,\r\n  },\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"theater\",\r\n  initialState,\r\n  reducers: reducers,\r\n});\r\n\r\nexport const {\r\n  setElements,\r\n  setSlider,\r\n  setSliderFolded,\r\n  setFullScreen,\r\n  setFromChannel,\r\n  resizeGridLayout,\r\n  appendIframeToPlaylist,\r\n  removeIframeFromPlaylist,\r\n  removeIframeByCid,\r\n  switchChatBoxByCid,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const selectTheater = (state: RootState): TheaterState => state.theater;\r\nexport const selectElements = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.elements\r\n);\r\nexport const selectPlaylist = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.playlist\r\n);\r\nexport const selectPlayPairs = createSelector([selectTheater], (theater) => {\r\n  const playlist = theater.playlist;\r\n  const chatlist = theater.chatlist;\r\n  const len = playlist.length;\r\n  const result = [];\r\n  for (let i = 0; i < len; i++) {\r\n    result.push({ player: playlist[i], chatbox: chatlist[i] });\r\n  }\r\n  return result;\r\n});\r\nexport const selectGridLayout = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.gridlayout\r\n);\r\nexport const selectSlider = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.slider\r\n);\r\nexport const selectNumOfElements = createSelector(\r\n  [selectElements],\r\n  (elements) => elements.length\r\n);\r\nexport const selectSliderElements = createSelector(\r\n  [selectElements],\r\n  (elements) =>\r\n    elements.length > 0\r\n      ? [elements[elements.length - 1], ...elements, elements[0]]\r\n      : []\r\n);\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { NavItemProps } from \"../../app/types\";\r\nimport { NavBrowser, NavTheater, NavUser, NavCollections } from \"../NavButtons\";\r\nimport { selectSlider } from \"../../features/theater/slice\";\r\nimport { useSelector } from \"../../app/hooks\";\r\n\r\nexport default function Navbar() {\r\n  const [isEnable, setIsEnable] = useState(false);\r\n  const { isFolded } = useSelector(selectSlider);\r\n\r\n  const closeMenu = () => {\r\n    // close menu when is mobile.\r\n    setIsEnable(!isEnable);\r\n  };\r\n\r\n  const beforeSwitch = () => {};\r\n\r\n  const afterSwitch = () => {\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <NavBar isFolded={isFolded}>\r\n        <Menu isEnable={isEnable}>\r\n          <ToogleNavBkg onClick={closeMenu}>\r\n            <div>\r\n              <ai.AiOutlineMenu />\r\n            </div>\r\n          </ToogleNavBkg>\r\n          <ul>\r\n            <ToogleNavBkg onClick={closeMenu}>\r\n              <div>\r\n                <ai.AiOutlineClose />\r\n              </div>\r\n            </ToogleNavBkg>\r\n            <NavBrowser\r\n              {...NavItemList[0]}\r\n              beforeSwitch={beforeSwitch}\r\n              afterSwitch={afterSwitch}\r\n            />\r\n            <NavTheater\r\n              {...NavItemList[1]}\r\n              beforeSwitch={beforeSwitch}\r\n              afterSwitch={afterSwitch}\r\n            />\r\n            <NavUser\r\n              {...NavItemList[2]}\r\n              beforeSwitch={beforeSwitch}\r\n              afterSwitch={afterSwitch}\r\n            />\r\n            <NavCollections\r\n              {...NavItemList[3]}\r\n              beforeSwitch={beforeSwitch}\r\n              afterSwitch={afterSwitch}\r\n            />\r\n          </ul>\r\n        </Menu>\r\n        <Logo>\r\n          <p>LowkeyDD</p>\r\n        </Logo>\r\n      </NavBar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst NavItemList: NavItemProps[] = [\r\n  {\r\n    title: \"瀏覽\",\r\n    path: \"/channels/\",\r\n    icon: <ai.AiOutlineHeart />,\r\n  },\r\n  {\r\n    title: \"影院\",\r\n    path: \"/theater/\",\r\n    icon: <ai.AiOutlineVideoCamera />,\r\n  },\r\n  {\r\n    title: \"會員\",\r\n    path: \"/login/\",\r\n    icon: <ai.AiOutlineUser />,\r\n  },\r\n  {\r\n    title: \"收藏\",\r\n    path: \"/favored/\",\r\n    icon: <ai.AiOutlineBook />,\r\n  },\r\n];\r\n\r\nconst Container = styled.div`\r\n  position: fixed; //這樣才能讓NAV固定在畫面上\r\n  width: 100%;\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --logoColor: #fff;\r\n  z-index: 1;\r\n`;\r\n\r\nconst NavBar = styled.nav<{ isFolded: boolean }>`\r\n  position: relative;\r\n  /* top: ${(p) => (p.isFolded ? `-65px` : `0px`)}; */\r\n  background-color: var(--navColor);\r\n  display: ${(p) => (p.isFolded ? `none` : `flex`)};\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  padding: 0 1rem;\r\n  background: none;\r\n  width: 150px; // 由內部logo字體決定寬度\r\n  height: 65px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  p {\r\n    color: var(--logoColor);\r\n    font-size: 25px;\r\n    letter-spacing: 2px;\r\n  }\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.ul<{ isEnable: boolean }>`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  width: 100%; //剩下的部分\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ul {\r\n    position: relative;\r\n    /* background-color: #0051ff; */\r\n    width: 100%; //剩下的部分\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    ul {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      background-color: var(--menuBgColor);\r\n      width: 380px;\r\n      height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n      padding: 65px 0 0 0;\r\n      transform: ${(props) =>\r\n        props.isEnable ? `translateX(0%)` : `translateX(-100%)`};\r\n      transition: transform 0.2s ease-in;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToogleNavBkg = styled.div`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  color: var(--toogleColor);\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%; //用它來當作NAV的底層\r\n  height: 65px;\r\n  font-size: 40px;\r\n  div {\r\n    display: none;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    div {\r\n      width: 65px;\r\n      height: 65px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      :hover {\r\n        background-color: var(--toogleColor);\r\n        color: var(--logoColor);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/**\r\n * 獲取頻道卡片跟用戶收藏者清單本是兩支api，合併成一個reqFetchChannels來一次性獲取後設置。\r\n */\r\nimport { CHANNELS_DEFAULT_GROUPNAME } from \"../../../app/config\";\r\nimport { ChannelCardStore, ChannelProps } from \"../../../app/types\";\r\nimport { createChannelCard } from \"../shares\";\r\n\r\nexport const setStore =(\r\n  state: ChannelCardStore,\r\n  action: {\r\n    type: string;\r\n    payload: {\r\n      channels: ChannelProps[][];\r\n      group: string[];\r\n      // list: VisitItem[];\r\n      tags: string[];\r\n    };\r\n  }\r\n) => {\r\n  const { channels, group, tags } = action.payload;\r\n  state.group = group;\r\n  state.tags = tags[0] === \"all\" ? [\"live\", \"wait\", \"off\"] : tags;\r\n\r\n  // cluster\r\n  setCluster(state, channels, group);\r\n};\r\n\r\n// 產生新的卡片群集，同時會檢查傳入的卡片群組名稱並且修正成合法的。\r\nconst setCluster = (\r\n  state: ChannelCardStore,\r\n  channels: ChannelProps[][],\r\n  group: string[]\r\n) => {\r\n  const clusters = channels.map((chgroups, i) =>\r\n    chgroups !== null\r\n      ? chgroups.map((ch) =>\r\n          createChannelCard(ch, {\r\n            group: group[i],\r\n            heart: group[i] !== CHANNELS_DEFAULT_GROUPNAME,\r\n          })\r\n        )\r\n      : []\r\n  );\r\n  console.log(\"[ChannelCardStore] setCluster\");\r\n  state.clusters = clusters;\r\n  state.hasFetchChannels = true;\r\n};","/**\r\n * 改變瀏覽頁面上的頻道卡片狀態，例如將某張卡片加到最愛時。\r\n */\r\nimport { ChannelCardProps, ChannelCardStore } from \"../../../app/types\";\r\n\r\nexport const setChannelCard = (\r\n  state: ChannelCardStore,\r\n  action: {\r\n    type: string;\r\n    payload: { card: ChannelCardProps };\r\n  }\r\n) => {\r\n  const { card } = action.payload;\r\n\r\n  // 產生新的卡片群集\r\n  state.clusters = state.clusters.map((cards: ChannelCardProps[]) =>\r\n    cards.length !== 0\r\n      ? cards.map((ch: ChannelCardProps) => (ch.cid !== card.cid ? ch : card))\r\n      : []\r\n  );\r\n};\r\n","/**\r\n * 透過搜尋功能，顯示頻道搜尋結果\r\n */\r\nimport { ChannelCardProps, ChannelCardStore } from \"../../../app/types\";\r\nexport const setSearchResult = (\r\n  state: ChannelCardStore,\r\n  action: {\r\n    type: string;\r\n    payload: { current: ChannelCardProps | null };\r\n  }\r\n) => {\r\n  state.current = action.payload.current;\r\n};\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { ChannelCardStore } from \"../../app/types\";\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst initialState: ChannelCardStore = {\r\n  hasFetchChannels: false,\r\n  clusters: [[]],\r\n  group: [],\r\n  // favoredList: [],\r\n  tags: [\"live\"],\r\n  current: null,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"channelCardStore\",\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nexport const { setStore, setChannelCard, setSearchResult } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const selectChannelCardStore = (state: RootState) =>\r\n  state.channelCardStore;\r\n\r\nexport const selectHasFetchChannels = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.hasFetchChannels\r\n);\r\n\r\nexport const selectChannelsInGroup = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.clusters.filter((cs) => cs !== null)\r\n);\r\n\r\nexport const selectTags = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.tags\r\n);\r\n\r\nexport const selectGroup = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.group\r\n);\r\n\r\nexport const selectCurrent = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.current\r\n);\r\n","import * as ai from \"react-icons/ai\";\r\nimport { ReactElement, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport styled from \"styled-components\";\r\nimport {setChannelCard, setSearchResult } from \"./slice\";\r\nimport {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  CHANNELS_SEARCH_RESULT,\r\n} from \"../../app/config\";\r\nimport {\r\n  selectIsListChanged,\r\n  selectVisitList,\r\n  setFromChannelCard,\r\n} from \"../favored/slice\";\r\nimport { setFromChannel } from \"../theater/slice\";\r\nimport { selectIsLogin, selectUser, setMsg } from \"../user/slice\";\r\nimport { history } from \"../..\";\r\nimport { reqUpdateVisit } from \"../favored/api\";\r\n\r\nexport function ChannelCard(props: ChannelCardProps) {\r\n  const {\r\n    avatar,\r\n    // cname,\r\n    cid,\r\n    owner,\r\n    status,\r\n    // streamurl,\r\n    thumbnail,\r\n    title,\r\n    viewcount,\r\n    starttime,\r\n    // method,\r\n    // updatetime,\r\n    group: groupName,\r\n    heart,\r\n  } = props;\r\n  const item = props;\r\n  const isLogin = useSelector(selectIsLogin);\r\n  const user = useSelector(selectUser);\r\n  const visit = useSelector(selectVisitList);\r\n  const isListChanged = useSelector(selectIsListChanged);\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const avatarStyles = getAvatarStyles(status);\r\n  const heartStyles = getHeartTheme(status, heart);\r\n  const previewStyles = getPreviewImage(cid, status, thumbnail, isVisible);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEnterTheater = () => {\r\n    if (status !== \"failure\" && status !== \"error\") {\r\n      // 當點選頻道進入Theater。\r\n      if (isLogin && isListChanged) {\r\n        const { username, ssid } = user;\r\n        dispatch(reqUpdateVisit(username, ssid, visit, \"/theater/\"));\r\n      } else {\r\n        dispatch(setFromChannel({ item }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const onFavoredHeartBtnClick = () => {\r\n    if (!isLogin) {\r\n      dispatch(setMsg(\"想加收藏要先登入唷\"));\r\n      history.push({ pathname: \"/login\" });\r\n      return;\r\n    }\r\n    const card: ChannelCardProps = { ...props, heart: !heart };\r\n    if (groupName === CHANNELS_SEARCH_RESULT) {\r\n      dispatch(\r\n        setSearchResult({\r\n          current: { ...props, heart: !heart },\r\n        })\r\n      );\r\n      dispatch(\r\n        setFromChannelCard({\r\n          card,\r\n          options: {\r\n            isChanged: false,\r\n            isNewAdded: true,\r\n            isDeleted: false,\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(setChannelCard({ card }));\r\n      dispatch(\r\n        setFromChannelCard({\r\n          card,\r\n          options: {\r\n            isChanged: false,\r\n            isNewAdded: groupName === CHANNELS_DEFAULT_GROUPNAME,\r\n            isDeleted: false,\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const parentDom = ref.current;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsVisible(entry.isIntersecting);\r\n    });\r\n    if (parentDom) {\r\n      observer.observe(parentDom);\r\n    }\r\n    return () => {\r\n      if (parentDom) {\r\n        observer.unobserve(parentDom);\r\n      }\r\n      observer.disconnect();\r\n    };\r\n  }, [ref, isVisible]);\r\n\r\n  // console.log(\"owner: \", owner, \"status: \", status);\r\n\r\n  return (\r\n    <Container ref={ref}>\r\n      <CardBody>\r\n        <PreviewBox {...previewStyles} onClick={handleEnterTheater}>\r\n          {previewStyles.image}\r\n        </PreviewBox>\r\n        <Description>\r\n          <Owner>\r\n            <h1>{owner}</h1>\r\n          </Owner>\r\n          <ChTitle>\r\n            <p>{title}</p>\r\n          </ChTitle>\r\n          <Detail>\r\n            <Left>\r\n              <ai.AiOutlineEye />\r\n              <p>{viewcount}</p>\r\n            </Left>\r\n            <Right>\r\n              <ai.AiOutlineCalendar />\r\n              <p>{status === \"live\" ? \"直播中\" : starttime}</p>\r\n            </Right>\r\n          </Detail>\r\n        </Description>\r\n      </CardBody>\r\n      <AvatarBox {...avatarStyles}>\r\n        <img src={isVisible ? avatar : undefined} alt={\"avatar_\" + cid} />\r\n        <div>\r\n          <h1>{status}</h1>\r\n        </div>\r\n      </AvatarBox>\r\n      <FavoredHeartBtn onClick={onFavoredHeartBtnClick} {...heartStyles}>\r\n        {heartStyles.icon}\r\n      </FavoredHeartBtn>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --bkgColor: #fff;\r\n\r\n  /* background-color: #999; */\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\ntype AvatarStyle = {\r\n  fontcolor: string;\r\n  fontbgcolor: string;\r\n  bordercolor: string;\r\n  ishidden: boolean;\r\n};\r\n\r\nconst getAvatarStyles = (status: string): AvatarStyle => {\r\n  switch (status) {\r\n    case \"live\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#ee5253\",\r\n        bordercolor: \"#f00\",\r\n        ishidden: false,\r\n      };\r\n    case \"wait\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#34afeb\",\r\n        bordercolor: \"#6a97ad\",\r\n        ishidden: false,\r\n      };\r\n    case \"off\":\r\n      return {\r\n        fontcolor: \"#f9fae6\",\r\n        fontbgcolor: \"#616161\",\r\n        bordercolor: \"#616161\",\r\n        ishidden: false,\r\n      };\r\n    default:\r\n      return {\r\n        fontcolor: \"#f0d8e2\",\r\n        fontbgcolor: \"#cb4ede\",\r\n        bordercolor: \"#6c3075\",\r\n        ishidden: true,\r\n      };\r\n  }\r\n};\r\n\r\nconst AvatarBox = styled.div<AvatarStyle>`\r\n  display: ${(p) => (p.ishidden ? `none` : `static`)};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: none;\r\n  pointer-events: none;\r\n  img {\r\n    width: 4.8em;\r\n    border: 5px solid ${(p) => p.fontbgcolor};\r\n    border-radius: 50%;\r\n  }\r\n  div {\r\n    position: relative;\r\n    background: none;\r\n    top: -12px;\r\n    left: 0;\r\n    width: 100%;\r\n    padding: 3px 0;\r\n    h1 {\r\n      margin: auto;\r\n      width: 48px;\r\n      padding: 1px 1px;\r\n      color: ${(p) => p.fontcolor};\r\n      background-color: ${(p) => p.fontbgcolor};\r\n      text-align: center;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n`;\r\n\r\ntype HeartThemeType = {\r\n  color: string;\r\n  hoverColor: string;\r\n  icon: any;\r\n  isHidden: boolean;\r\n};\r\nexport const getHeartTheme = (\r\n  status: string,\r\n  heart: boolean\r\n): HeartThemeType => {\r\n  switch (status) {\r\n    case \"failure\":\r\n    case \"error\":\r\n      return {\r\n        color: \"\",\r\n        hoverColor: \"\",\r\n        icon: null,\r\n        isHidden: true,\r\n      };\r\n    default:\r\n      return heart === true\r\n        ? {\r\n            color: \"#ee5253\",\r\n            hoverColor: \"#ee5253\",\r\n            icon: <ai.AiFillHeart />,\r\n            isHidden: false,\r\n          }\r\n        : {\r\n            color: \"#aaa\",\r\n            hoverColor: \"#ee5253\",\r\n            icon: <ai.AiOutlineHeart />,\r\n            isHidden: false,\r\n          };\r\n  }\r\n};\r\n\r\nconst FavoredHeartBtn = styled.div<HeartThemeType>`\r\n  display: ${(p) => (p.isHidden ? `none` : `static`)};\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  right: 0.5em;\r\n  top: 2.5em;\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: none;\r\n\r\n  svg {\r\n    font-size: 35px;\r\n    color: ${(p) => p.color};\r\n    transition: 0.1s;\r\n  }\r\n\r\n  :hover {\r\n    svg {\r\n      font-size: 38px;\r\n      color: ${(p) => p.hoverColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  background-color: none;\r\n  border-radius: 1.2em;\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.5);\r\n  margin: 10px 10px;\r\n`;\r\n\r\ntype PreviewBoxProps = {\r\n  isEnabled: boolean; // 允許點擊\r\n  image: ReactElement;\r\n};\r\nconst getPreviewImage = (\r\n  cid: string,\r\n  status: string,\r\n  thumbnail: string,\r\n  isVisible: boolean\r\n): PreviewBoxProps => {\r\n  switch (status) {\r\n    case \"failure\":\r\n      return {\r\n        isEnabled: false,\r\n        image: (\r\n          <div>\r\n            <ai.AiFillFrown />\r\n            <h1>獲取頻道訊息發生錯誤</h1>\r\n          </div>\r\n        ),\r\n      };\r\n    case \"error\":\r\n      return {\r\n        isEnabled: false,\r\n        image: (\r\n          <div>\r\n            <ai.AiFillExclamationCircle />\r\n            <h1>輸入的網址格式有誤?</h1>\r\n            <p>可參考下方的網址範例 : </p>\r\n            <p>https://www.twitch.tv/xxxx</p>\r\n            <p>https://www.youtube.com/channel/xxxx</p>\r\n          </div>\r\n        ),\r\n      };\r\n    default:\r\n      return {\r\n        isEnabled: true,\r\n        image: (\r\n          <div>\r\n            <img\r\n              src={isVisible ? thumbnail : undefined}\r\n              alt={\"thumbnail_\" + cid}\r\n            />\r\n          </div>\r\n        ),\r\n      };\r\n  }\r\n};\r\nconst PreviewBox = styled.a<PreviewBoxProps>`\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  //點擊後將跳轉到Theater\r\n  cursor: ${(p) => (p.isEnabled ? `pointer` : `auto`)};\r\n\r\n  div {\r\n    background-color: #000;\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 15rem;\r\n    // 透過hidden把超出範圍的圖片直接剪裁掉\r\n    overflow: hidden;\r\n    border-radius: 1.2em;\r\n    box-sizing: border-box;\r\n\r\n    color: var(--toogleColor);\r\n\r\n    // 頻道正確顯示時\r\n    img {\r\n      width: 99.9%;\r\n      border-radius: 6px;\r\n    }\r\n\r\n    // 錯誤提示訊息\r\n    svg {\r\n      margin: 0 0 10px 0;\r\n      font-size: 150px;\r\n    }\r\n    h1 {\r\n      font-size: 18px;\r\n      margin: 0 0 10px 0;\r\n    }\r\n    p {\r\n      font-size: 1.5vmin;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  /* background-color: royalblue; */\r\n\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 6px auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Owner = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  margin: 0 0 10px;\r\n  height: 56px;\r\n  border-bottom: 1px solid silver;\r\n\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  h1 {\r\n    font-size: 26px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n    letter-spacing: 5px;\r\n  }\r\n`;\r\n\r\nconst ChTitle = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  p {\r\n    /* background-color: royalblue; */\r\n    font-size: 16px;\r\n    line-height: 25px;\r\n    padding: 0 20px;\r\n    height: 50px;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n\r\nconst Detail = styled.div`\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  div {\r\n    height: 40px;\r\n    flex: 1;\r\n    background-color: var(--toogleColor);\r\n    padding: 5px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  margin: 0 2px 0 5px;\r\n  border-radius: 0 0 0 15px;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    letter-spacing: 1px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  margin: 0 5px 0 2px;\r\n  border-radius: 0 0 15px 0;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  groupName: string;\r\n  fontsize: string;\r\n  lineColor?: string;\r\n  bkgColor?: string;\r\n};\r\n\r\nexport default function GroupLine(props: Props) {\r\n  const { groupName } = props;\r\n  return (\r\n    <Container {...props}>\r\n      <span>{groupName}</span>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.h1<Props>`\r\n  --lineColor: ${(p) => p.lineColor || `#000`};\r\n  --bkgColor: ${(p) => p.bkgColor || `#fff`};\r\n\r\n  margin: 50px 0 20px 0;\r\n  position: relative;\r\n  text-align: center;\r\n  font-size: ${(p) => p.fontsize};\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  z-index: 1;\r\n  line-height: 50px;\r\n  ::before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  ::after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    right: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  span {\r\n    padding: 0 10px;\r\n    color: var(--lineColor);\r\n    background-color: var(--bkgColor);\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { ChannelCard } from \"./ChannelCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\n\r\nexport function ChannelCardsGroup(props: {\r\n  cards: ChannelCardProps[];\r\n  groupName: string;\r\n}) {\r\n  const { cards, groupName } = props;\r\n\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"40px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#4c5c68\"}\r\n      />\r\n      <ChannelGridCantainer key={\"ChannelGridCantainer_\" + groupName}>\r\n        {cards.map((ch: ChannelCardProps) => (\r\n          <ChannelCard\r\n            key={`ChannelCard_${ch.cid}`}\r\n            {...ch}\r\n            group={groupName}\r\n          />\r\n        ))}\r\n      </ChannelGridCantainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ChannelGridCantainer = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #fff;\r\n\r\n  display: grid;\r\n  grid-gap: 4px;\r\n  grid-template-columns: repeat(auto-fill, minmax(310px, 1fr));\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 360px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n\r\n  \r\n`;\r\n","import { useSelector } from \"../../app/hooks\";\r\nimport { selectChannelsInGroup, selectGroup } from \"./slice\";\r\nimport { ChannelCardsGroup } from \"./ChannelCardsGroup\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { Fragment } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import { selectUser } from \"../user/slice\";\r\n// import { selectIsListChanged, selectVisitList } from \"../favored/slice\";\r\n// import { reqUpdateVisit } from \"../favored/api\";\r\n\r\n\r\n/**\r\n * 瀏覽頻道，顯示當前可被瀏覽頻道內容。\r\n */\r\nexport function ChannelCardsBrowser() {\r\n  const group = useSelector(selectGroup);\r\n  const channelsInGroup = useSelector(selectChannelsInGroup);\r\n  // const isListChanged = useSelector(selectIsListChanged);\r\n  // const user = useSelector(selectUser);\r\n  // const visit = useSelector(selectVisitList);\r\n  // const dispatch = useDispatch();\r\n\r\n  // const autoSaved = useCallback(() => {\r\n  //   const { username, ssid } = user;\r\n  //   if (isListChanged) {\r\n  //     dispatch(reqUpdateVisit(username, ssid, visit));\r\n  //   }\r\n  // }, [dispatch, isListChanged, user, visit]);\r\n\r\n  // useEffect(() => {\r\n  //   // 每次畫面更新時，n 秒後檢查IsListChanged，並自動保存。\r\n  //   let handler: any = null;\r\n  //   if (handler) {\r\n  //     clearTimeout(handler);\r\n  //   }\r\n  //   handler = setTimeout(autoSaved, 1000);\r\n  //   return () => {\r\n  //     if (handler) {\r\n  //       clearTimeout(handler);\r\n  //     }\r\n  //   };\r\n  // }, [autoSaved]);\r\n\r\n  return (\r\n    <>\r\n      {channelsInGroup.map((cards, i) =>\r\n        // 透過group查找出對應的分群\r\n        GetChannelCardsGroup(cards, group[i])\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst GetChannelCardsGroup = (\r\n  cards: ChannelCardProps[],\r\n  groupName: string\r\n): JSX.Element => {\r\n  if (cards.length === 0) {\r\n    return <Fragment key={\"ChannelCardsGroup_\" + groupName} />;\r\n  } else {\r\n    return (\r\n      <ChannelCardsGroup\r\n        key={\"ChannelCardsGroup_\" + groupName}\r\n        cards={cards}\r\n        groupName={groupName}\r\n      />\r\n    );\r\n  }\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function SearchBox(props: SearchBoxProps) {\r\n  // 取得樣式設定參數\r\n  const { theme } = props;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n  const searchInput = useRef<HTMLInputElement>(null);\r\n\r\n  // 輸入查詢功能\r\n  const handleKeyUp = (e: any) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n\r\n    // 按下enter鍵，提交數據\r\n    commit();\r\n  };\r\n\r\n  const commit = () => {\r\n    if (searchInput.current != null) {\r\n      props.onSubmit(searchInput.current.value);\r\n    } else {\r\n      console.error(\"searchInput 不存在\");\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    if (searchInput.current && searchInput.current.value !== \"\") {\r\n      setIsEnable(true);\r\n    } else {\r\n      setIsEnable(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container {...theme} isEnable={isEnable}>\r\n      <input\r\n        onChange={onChange}\r\n        onKeyUp={handleKeyUp}\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n        placeholder=\"(๑•̀ㅂ•́)و✧ 輸入喜歡的頻道網址 !!! \"\r\n        ref={searchInput}\r\n      />\r\n      <button onClick={commit}>\r\n        <ai.AiOutlineSearch style={{ fontSize: \"1.5rem\" }} />\r\n      </button>\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SearchBoxProps = {\r\n  theme?: SearchBoxThemeProps;\r\n  onSubmit: (inputValue: string) => void;\r\n};\r\n\r\ntype SearchBoxThemeProps = {\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n};\r\n\r\nexport const Container = styled.div<{\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n  isEnable: boolean;\r\n}>`\r\n  --height: 2.4rem;\r\n  --width: 2.4rem;\r\n  --bgColor: #2f3640;\r\n  --iconColor: ${(props) => props.iconColor || \"#e84118\"};\r\n  --focusColor: ${(props) => props.focusColor || \"#fff\"};\r\n  background: var(--bgColor);\r\n  width: ${(p) => (p.isEnable ? `100%` : `var(--width)`)};\r\n  height: var(--height);\r\n  border-radius: var(--height);\r\n  padding: calc(var(--height) / 4);\r\n  transition: width 0.4s;\r\n\r\n  input {\r\n    border: none;\r\n    background: none;\r\n    outline: none;\r\n    float: left;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    line-height: var(--height);\r\n    border-radius: var(--height);\r\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n    padding: ${(p) => (p.isEnable ? `0 1rem` : `0px`)};\r\n    width: ${(p) => (p.isEnable ? `80%` : `0%`)};\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  button {\r\n    color: var(--iconColor);\r\n    float: right;\r\n    width: var(--width);\r\n    height: var(--height);\r\n    border-radius: 50%;\r\n    background-color: ${(p) =>\r\n    p.isEnable ? `var(--focusColor)` : `var(--bgColor)`};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    :hover{\r\n\r\n    }\r\n  }\r\n\r\n  :focus-within {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n`;\r\n\r\n// const SearchInput = styled.input`\r\n//     border: none;\r\n//     background: none;\r\n//     outline: none;\r\n//     float: left;\r\n//     color: #fff;\r\n//     font-size: 16px;\r\n//     line-height: var(--height);\r\n//     border-radius: var(--height);\r\n//     box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n//     padding: 0px;\r\n//     width: 0%;\r\n//     transition: all 0.4s;\r\n// `;\r\n\r\n// const SearchButton = styled.a`\r\n//   color: var(--iconColor);\r\n//   float: right;\r\n//   width: var(--width);\r\n//   height: var(--height);\r\n//   border-radius: 50%;\r\n//   background-color: var(--bgColor);\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n// `;\r\n","/**\r\n * 獲取頻道卡片群集(channels)、用戶收藏者清單(list)、頻道分群(group)\r\n */\r\nimport axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { ChannelProps, VisitItem } from \"../../../app/types\";\r\nimport { createFavoredItem } from \"../../favored/shares/createFavoredItem\";\r\nimport { setFavoredList } from \"../../favored/slice\";\r\nimport { setStore } from \"../slice\";\r\n\r\nexport const reqFetchChannels =\r\n  (username: string, ssid: string, tags: string[]) => (dispatch: any) => {\r\n    // 避免tags為空\r\n    if (tags.length === 0) {\r\n      console.error(\"tags不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    // 搜尋內容為空時會被撤回\r\n    if (tags[0] === \"\") {\r\n      console.error(\"搜尋內容不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    const request = new FormData();\r\n    request.append(\"username\", username);\r\n    request.append(\"ssid\", ssid);\r\n    request.append(\"tags\", JSON.stringify(tags));\r\n    axios.post(`${API_SERVER_URL}/letsdd/v2`, request).then(\r\n      (response) => {\r\n        console.log(\"成功了, 回應如下:\\n\", response.data);\r\n        const channels: ChannelProps[][] = response.data[\"channels\"];\r\n        const group: string[] = response.data[\"group\"];\r\n        const list: VisitItem[] = response.data[\"list\"];\r\n\r\n        /**\r\n         * ChannelCards\r\n         *\r\n         *  1) 設置Channels。\r\n         */\r\n        dispatch(\r\n          setStore({\r\n            channels,\r\n            group: group.concat(CHANNELS_DEFAULT_GROUPNAME),\r\n            tags,\r\n          })\r\n        );\r\n\r\n        /**\r\n         * Facvored\r\n         *\r\n         *  1) 設置Favoredlist\r\n         */\r\n        dispatch(\r\n          setFavoredList({\r\n            group:\r\n              group && group.length > 0\r\n                ? group.includes(VISITS_DEFAULT_GROUPNAME)\r\n                  ? group\r\n                  : [VISITS_DEFAULT_GROUPNAME, ...group]\r\n                : [VISITS_DEFAULT_GROUPNAME],\r\n            list:\r\n              list && list.length > 0\r\n                ? list.map((l: VisitItem) =>\r\n                    createFavoredItem(l, {\r\n                      isChanged: false,\r\n                      isDeleted: false,\r\n                      isNewAdded: false,\r\n                    })\r\n                  )\r\n                : [],\r\n          })\r\n        );\r\n      },\r\n      (error) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", error);\r\n        setTimeout(() => {\r\n          history.push({ pathname: \"/channels/\" });\r\n        }, 1000);\r\n      }\r\n    );\r\n  };\r\n","import SearchBox from \"../../components/SearchBox\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { reqFetchChannels } from \"./api\";\r\nimport { reqSearchChannel } from \"./api\";\r\nimport { selectUser } from \"../user/slice\";\r\n\r\nexport function ChannelSearch() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (keyword: string) => {\r\n    if (keyword === \"\") return;\r\n    if (\r\n      keyword === \"all\" ||\r\n      keyword === \"live\" ||\r\n      keyword === \"wait\" ||\r\n      keyword === \"off\" ||\r\n      keyword === \"failure\"\r\n    ) {\r\n      dispatch(reqFetchChannels(username, ssid, [keyword]));\r\n    } else {\r\n      dispatch(reqSearchChannel(keyword));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchBox\r\n      onSubmit={onSubmit}\r\n      theme={{ focusColor: \"#1985a1\", iconColor: \"#c5c3c6\" }}\r\n    />\r\n  );\r\n}\r\n","/**\r\n * 透過關鍵字搜尋頻道\r\n */\r\nimport axios from \"axios\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_SEARCH_ERROR,\r\n  CHANNELS_SEARCH_FAILED,\r\n  CHANNELS_SEARCH_RESULT,\r\n} from \"../../../app/config\";\r\nimport { ChannelProps } from \"../../../app/types\";\r\nimport { createChannelCard } from \"../shares\";\r\nimport { setSearchResult } from \"../slice\";\r\n\r\nexport const reqSearchChannel = (url: string) => (dispatch: any) => {\r\n  const postform = new FormData();\r\n  postform.append(\"url\", url);\r\n  axios.post(`${API_SERVER_URL}/channels/search`, postform).then(\r\n    (resp) => {\r\n      console.log(\"[ChanelSearch]成功了, 回應如下:\\n\", resp.data);\r\n      const code: string = resp.data[\"code\"];\r\n      const ch: ChannelProps = resp.data[\"channels\"][0];\r\n\r\n      switch (code) {\r\n        case \"success\":\r\n          console.log(`成功獲取頻道 ${ch.cname} \\n`);\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(ch, {\r\n                group: CHANNELS_SEARCH_RESULT,\r\n                heart: false,\r\n              }),\r\n            })\r\n          );\r\n          break;\r\n        case \"failure\":\r\n          console.log(\r\n            `獲取頻道 ${ch.cname} 失敗，請確認該頻道是否已經沒有內容或受到閱覽限制\\n`\r\n          );\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(\r\n                { ...ch, status: \"failure\" },\r\n                {\r\n                  group: CHANNELS_SEARCH_ERROR,\r\n                  heart: false,\r\n                }\r\n              ),\r\n            })\r\n          );\r\n          break;\r\n        default:\r\n          console.log(\"作為搜尋頻道的連結格式有誤，請參考以下: \\n\");\r\n          console.log(\"Youtube : https://www.youtube.com/channel/xxxxxxx\\n\");\r\n          console.log(\"twitch  : https://www.twitch.tv/xxxxxx\\n\");\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(\r\n                { ...ch, status: \"error\" },\r\n                {\r\n                  group: CHANNELS_SEARCH_FAILED,\r\n                  heart: false,\r\n                }\r\n              ),\r\n            })\r\n          );\r\n          break;\r\n      }\r\n    },\r\n    (err) => {\r\n      console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n    }\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default function SwitchBtn(props: SwitchButtonProps) {\r\n  const { checked, htmlFor, theme } = props;\r\n\r\n  const handleClick = () => {\r\n    props.handleSwitchClick({ tag: htmlFor, isChecked: !checked });\r\n  };\r\n  \r\n  return (\r\n    <Container {...theme}>\r\n      <HiddenCheckedInput\r\n        type=\"checkbox\"\r\n        id={htmlFor || \"\"}\r\n        onClick={handleClick}\r\n      />\r\n      <ToogleFill checked={checked} />\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SwitchButtonProps = {\r\n  htmlFor: string;\r\n  checked: boolean;\r\n  theme?: SwitchButtonThemeProps;\r\n  handleSwitchClick: (action: { tag: string; isChecked: boolean }) => void;\r\n};\r\n\r\ntype SwitchButtonThemeProps = {\r\n  beforeColor?: string;\r\n  afterColor?: string;\r\n  ballColor?: string;\r\n};\r\n\r\nconst Container = styled.label<SwitchButtonThemeProps>`\r\n  --width: 32px;\r\n  --height: calc(var(--width) / 2);\r\n  --radius: calc(var(--height) / 2);\r\n  --beforeColor: ${(props) => props.beforeColor || \"#ddd\"};\r\n  --afterColor: ${(props) => props.afterColor || \"#34deeb\"};\r\n  --ballColor: ${(props) => props.ballColor || \"#fff\"};\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ToogleFill = styled.div<{ checked: boolean }>`\r\n  /* 底色 */\r\n  position: relative;\r\n  width: var(--width);\r\n  height: var(--height);\r\n  border-radius: var(--radius);\r\n  background: ${(props) =>\r\n    props.checked ? `var(--afterColor)` : `var(--beforeColor)`};\r\n  transition: background 0.2s;\r\n\r\n  /* 球球與陰影效果 */\r\n  ::after {\r\n    /* 透過after實現了相對內部移動的效果 */\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: var(--height);\r\n    width: var(--height);\r\n    background: var(--ballColor);\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\r\n    border-radius: var(--radius);\r\n    transform: ${(props) =>\r\n      props.checked ? `translateX(110%)` : `translateX(0%)`};\r\n    transition: transform 0.5s;\r\n  }\r\n`;\r\n\r\nconst HiddenCheckedInput = styled.input`\r\n  display: none;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport SwitchBtn from \"../../components/SwitchBtn\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { selectUser } from \"../user/slice\";\r\nimport { selectTags } from \"./slice\";\r\nimport { reqFetchChannels } from \"./api\";\r\nimport { Switcher } from \"../../app/types\";\r\n\r\nexport function ChannelTagsSwitchers() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const dispatch = useDispatch();\r\n  console.log({ tags });\r\n\r\n  const handleSwitchClick = (action: { tag: string; isChecked: boolean }) => {\r\n    const { tag, isChecked } = action;\r\n    if (isChecked) {\r\n      if (!tags.includes(tag)) {\r\n        dispatch(reqFetchChannels(username, ssid, [...tags, tag]));\r\n      }\r\n    } else {\r\n      const newtags = tags.filter((_tag) => _tag !== tag);\r\n      dispatch(reqFetchChannels(username, ssid, newtags));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {SwitcherList.map((tag, _) => {\r\n        const { htmlFor, afterColor } = tag;\r\n        const checked = tags.indexOf(htmlFor) > -1;\r\n        return (\r\n          <SwitchBtnBox key={\"SwitchBtnBox_\" + htmlFor}>\r\n            <p>{htmlFor}</p>\r\n            <SwitchBtn\r\n              htmlFor={htmlFor}\r\n              checked={checked}\r\n              theme={{ afterColor }}\r\n              handleSwitchClick={handleSwitchClick}\r\n            />\r\n          </SwitchBtnBox>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst SwitchBtnBox = styled.div`\r\n  margin: 0 0.5rem;\r\n  height: 2.4rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  p {\r\n    margin-right: 6px;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    color: #eee;\r\n  }\r\n`;\r\n\r\nexport const SwitcherList: Array<Switcher> = [\r\n  { checked: false, htmlFor: \"live\", afterColor: \"#f00\" },\r\n  { checked: false, htmlFor: \"wait\", afterColor: \"#0ff\" },\r\n  { checked: false, htmlFor: \"off\", afterColor: \"#856\" },\r\n];","import { IoMdRocket } from \"react-icons/io\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function RocketLoading() {\r\n  return (\r\n    <Loader>\r\n      {Array(20)\r\n        .fill(0)\r\n        .map((_, i) => {\r\n          return <Dot key={`dot_${i}`} index={i} />;\r\n        })}\r\n      <Rocket>\r\n        <IoMdRocket />\r\n      </Rocket>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nconst Loader = styled.div`\r\n\r\n  --speed: 1;\r\n  --scale: 2;\r\n  --dotColor: #fff;\r\n  --rocketColor: #fff;\r\n\r\n  position: relative;\r\n  width: calc(120px * var(--scale));\r\n  height: calc(120px * var(--scale));\r\n`;\r\n\r\ntype DotProps = {\r\n  index: number;\r\n};\r\nconst Dot = styled.div<DotProps>`\r\n  --i: ${(p) => p.index};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: rotate(calc(180deg + 18deg * var(--i)));\r\n\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(15px * var(--scale));\r\n    height: calc(15px * var(--scale));\r\n    background-color: var(--dotColor);\r\n    border-radius: 50%;\r\n    transform: scale(0);\r\n    animation: rocketFlying calc(2s / var(--speed)) linear infinite;\r\n    animation-delay: calc(0.1s / var(--speed) * var(--i));\r\n  }\r\n\r\n  @keyframes rocketFlying {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    10% {\r\n      transform: scale(1.2);\r\n    }\r\n    80%,\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Rocket = styled.div`\r\n  /* background-color: brown; */\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: var(--rocketColor);\r\n  font-size: calc(50px * var(--scale));\r\n  animation: rotating calc(2s / var(--speed)) linear infinite;\r\n  animation-delay: calc(-1s / var(--speed));\r\n\r\n  svg{\r\n      transform: rotate(45deg);\r\n      position: relative;\r\n      top: calc(-15px * var(--scale));\r\n      left: calc(-15px * var(--scale));\r\n  }\r\n\r\n  @keyframes rotating{\r\n    0%{\r\n        transform: rotate(10deg)\r\n    }\r\n    100%{\r\n        transform: rotate(370deg)\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"../../app/hooks\";\r\nimport { selectUser } from \"../../features/user/slice\";\r\nimport { Fragment, useLayoutEffect } from \"react\";\r\nimport {\r\n  selectChannelsInGroup,\r\n  selectCurrent,\r\n  selectTags,\r\n  setSearchResult,\r\n  setStore,\r\n} from \"../../features/channelCardStore/slice\";\r\nimport {\r\n  ChannelCardsGroup,\r\n  ChannelSearch,\r\n  ChannelTagsSwitchers,\r\n  ChannelCardsBrowser,\r\n} from \"../../features/channelCardStore\";\r\nimport { reqFetchChannels } from \"../../features/channelCardStore\";\r\nimport RocketLoading from \"../../components/RocketLoading\";\r\n\r\nexport default function ChannelsStage() {\r\n  const channels = useSelector(selectChannelsInGroup);\r\n  const user = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const dispatch = useDispatch();\r\n\r\n  useLayoutEffect(() => {\r\n    const { username, ssid } = user;\r\n    dispatch(setSearchResult({ current: null })); //清空當前搜尋紀錄\r\n    dispatch(setStore({ channels: [], group: [], tags })); //清空當前頻道\r\n    dispatch(reqFetchChannels(username, ssid, tags)); //請求Channels\r\n    return () => {};\r\n  }, [dispatch, user, tags]);\r\n\r\n  return (\r\n    <Container>\r\n      {channels.length > 0 ? (\r\n        <>\r\n          <ControlPanel>\r\n            <ChannelSearch />\r\n            <ChannelTagsSwitchers />\r\n          </ControlPanel>\r\n          <ChannelSearchCard />\r\n          <ChannelCardsBrowser />\r\n        </>\r\n      ) : (\r\n        <Wrap>\r\n          <RocketLoading />\r\n        </Wrap>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction ChannelSearchCard() {\r\n  const current = useSelector(selectCurrent);\r\n\r\n  return (\r\n    <>\r\n      {current !== null ? (\r\n        current.status === \"failure\" ? (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        ) : (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        )\r\n      ) : (\r\n        <Fragment />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n  background: none;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 65px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n  background: #4c5c68;\r\n  overflow-y: auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ControlPanel = styled.div`\r\n  position: relative;\r\n  background-color: #666;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: start;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\n","import { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChatboxIframe } from \"../../../app/types\";\r\n\r\nexport function TheaterChatbox(props: ChatboxIframe) {\r\n  const chatbox = props;\r\n  const { w, h } = props;\r\n  return (\r\n    <>\r\n      {chatbox.isEnable ? (\r\n        <ChatboxContainer width={w} height={h}>\r\n          {getChatboxIframe(chatbox)}\r\n        </ChatboxContainer>\r\n      ) : (\r\n        <Fragment />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst getChatboxIframe = (chatbox: ChatboxIframe): any => {\r\n  const { method, cid, src, cname } = chatbox;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          allowFullScreen={false}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\nconst ChatboxContainer = styled.div<{ width: number; height: number }>`\r\n  background-color: #000;\r\n  width: ${(p) => p.width};\r\n  height: ${(p) => p.height};\r\n  iframe {\r\n    width: ${(p) => p.width};\r\n    height: ${(p) => p.height};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { useState } from \"react\";\r\nimport { ChatboxIframe, PlayerIframe } from \"../../../app/types\";\r\nimport { removeIframeByCid, switchChatBoxByCid } from \"../slice\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterChatbox } from \"../TheaterChatbox\";\r\n\r\ntype Props = {\r\n  flexType: string;\r\n  player: PlayerIframe;\r\n  chatbox: ChatboxIframe;\r\n};\r\n\r\nexport function TheaterPlayerItem(props: Props) {\r\n  const { flexType, player, chatbox } = props;\r\n  const { cid, w: pw, h: ph } = player;\r\n  const { w: cw, h: ch } = chatbox;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const showMenu = () => {\r\n    console.log(\"showMenu\");\r\n    setIsEnable(!isEnable);\r\n  };\r\n  const onLeaveMenu = () => {\r\n    setIsEnable(false);\r\n  };\r\n  const onEnterMenu = () => {\r\n    setIsEnable(true);\r\n  };\r\n  const removeIframe = () => {\r\n    dispatch(removeIframeByCid({ cid }));\r\n  };\r\n  const switchChatBox = () => {\r\n    dispatch(switchChatBoxByCid({ cid }));\r\n  };\r\n\r\n  return (\r\n    <IframeGridLocator\r\n      flexType={flexType}\r\n      playerWidth={pw}\r\n      playerHeight={ph}\r\n      chatboxWidth={cw}\r\n      chatboxHeight={ch}\r\n    >\r\n      <IframeContainer>\r\n        {getPlayerIframe(player)}\r\n        <Menu\r\n          onClick={showMenu}\r\n          onMouseEnter={onEnterMenu}\r\n          onMouseLeave={onLeaveMenu}\r\n          isEnable={isEnable}\r\n        >\r\n          <div onClick={removeIframe}>\r\n            <ai.AiOutlineCloseCircle />\r\n          </div>\r\n          &nbsp;\r\n          <div onClick={switchChatBox}>\r\n            <ai.AiOutlineMessage />\r\n          </div>\r\n        </Menu>\r\n      </IframeContainer>\r\n      <TheaterChatbox {...chatbox} />\r\n    </IframeGridLocator>\r\n  );\r\n}\r\n\r\nconst getPlayerIframe = (player: PlayerIframe): any => {\r\n  const { method, cid, src, cname } = player;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-presentation\"\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-presentation\"\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\nconst IframeGridLocator = styled.div<{\r\n  flexType: string;\r\n  playerWidth: number;\r\n  playerHeight: number;\r\n  chatboxWidth: number;\r\n  chatboxHeight: number;\r\n}>`\r\n  --playerWidth: ${(p) => p.playerWidth}px;\r\n  --playerHeight: ${(p) => p.playerHeight}px;\r\n  --chatboxWidth: ${(p) => p.chatboxWidth}px;\r\n  --chatboxHeight: ${(p) => p.chatboxHeight}px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: ${(p) => p.flexType};\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #000;\r\n`;\r\n\r\nconst IframeContainer = styled.div`\r\n  width: var(--playerWidth);\r\n  height: var(--playerHeight);\r\n  position: relative;\r\n  iframe {\r\n    width: var(--playerWidth);\r\n    height: var(--playerHeight);\r\n  }\r\n`;\r\n\r\nconst Menu = styled.h1<{ isEnable: boolean }>`\r\n  top: 0;\r\n  right: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: ${(p) => (p.isEnable ? `80px` : `50px`)};\r\n  max-height: 100vh;\r\n  background-color: #000;\r\n  opacity: ${(p) => (p.isEnable ? `0.8` : `0.02`)};\r\n  transition: 0.6s;\r\n  cursor: pointer;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  // MenuButton\r\n  div {\r\n    font-size: ${(p) => (p.isEnable ? `50px` : `0px`)};\r\n    svg {\r\n      position: relative;\r\n      top: ${(p) => (p.isEnable ? `0%` : `30%`)};\r\n      color: hotpink;\r\n      cursor: pointer;\r\n      border-radius: 50%;\r\n      opacity: ${(p) => (p.isEnable ? `.8` : `0`)};\r\n      transform: ${(p) => (p.isEnable ? `rotate(360deg)` : `none`)};\r\n      transition: 0.4s;\r\n      :hover {\r\n        color: gray;\r\n        background-color: hotpink;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport {\r\n  selectPlayPairs,\r\n  selectGridLayout,\r\n  resizeGridLayout,\r\n} from \"../slice\";\r\nimport { useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { TheaterPlayerItem } from \"../TheaterPlayerItem\";\r\n\r\nexport function TheaterIframesViewer() {\r\n  const dom = useRef<HTMLDivElement>(null);\r\n  const pairs = useSelector(selectPlayPairs);\r\n  const numOfIframes = pairs.length;\r\n  const { col, row, flexType } = useSelector(selectGridLayout);\r\n  const dispatch = useDispatch();\r\n\r\n  const resizeIframes = useCallback(() => {\r\n    if (numOfIframes === 0 || dom.current === null) {\r\n      return;\r\n    }\r\n    console.log(\"[TheaterIframesViewer] Resize All Iframes\");\r\n    const { clientWidth, clientHeight } = dom.current;\r\n    dispatch(resizeGridLayout({ clientWidth, clientHeight }));\r\n  }, [dispatch, dom, numOfIframes]);\r\n\r\n  useLayoutEffect(() => {\r\n    // 添加新的Iframe元素時，要先執行一次\r\n    resizeIframes();\r\n\r\n    // 監聽畫面更新時的resize\r\n    let handler: any = null;\r\n    const resize = () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      handler = setTimeout(resizeIframes, 500);\r\n    };\r\n    window.addEventListener(\"resize\", resize);\r\n\r\n    return () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      window.removeEventListener(\"resize\", resize);\r\n    };\r\n  }, [resizeIframes]);\r\n\r\n  // console.log(`[TheaterIframesViewer] render, numOfIframes: ${numOfIframes}`);\r\n  return (\r\n    <Container ref={dom} col={col} row={row}>\r\n      {pairs.map(({ player, chatbox }) => (\r\n        <TheaterPlayerItem\r\n        key={\"TheaterPlayerItem_\" + player.cid}\r\n          flexType={flexType}\r\n          player={player}\r\n          chatbox={chatbox}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div<{ col: number; row: number }>`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 100px;\r\n  width: 100%;\r\n  height: calc(100% - 100px);\r\n  box-sizing: border-box;\r\n  background: linear-gradient(120deg, #4c4a46, #c5c3c6);\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => props.col}, 1fr);\r\n  grid-template-rows: repeat(${(props) => props.row}, 1fr);\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport { appendIframeToPlaylist, removeIframeFromPlaylist } from \"../slice\";\r\n\r\ntype TheaterSliderItemProps = {\r\n  item: TheaterElement;\r\n  index: number;\r\n  isStopTrans: boolean;\r\n};\r\n\r\nexport function TheaterSliderItem(props: TheaterSliderItemProps) {\r\n  const { index, isStopTrans, item } = props;\r\n  const { preview, cname, avatar, checked } = item;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    if (item.checked) {\r\n      dispatch(removeIframeFromPlaylist({ item }));\r\n    } else {\r\n      dispatch(appendIframeToPlaylist({ item }));\r\n    }\r\n  };\r\n  // console.log(\"[TheaterSliderItem] render\")\r\n  return (\r\n    <Section index={index} isStopTrans={isStopTrans}>\r\n      <SliderPreview>\r\n        <img src={preview} alt={`${cname}_preview`} />\r\n        <p>{`${cname}`}</p>\r\n      </SliderPreview>\r\n      <Avatar\r\n        src={avatar}\r\n        alt={`${cname}_avatar`}\r\n        onClick={handleClick}\r\n        checked={checked}\r\n      />\r\n    </Section>\r\n  );\r\n}\r\nconst Section = styled.div<{ index: number; isStopTrans: boolean }>`\r\n  position: relative;\r\n  left: ${(props) => -100 * props.index}%;\r\n  min-width: 100%;\r\n  height: 100px;\r\n\r\n  background-color: var(--navColor);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  transition: ${(props) => (props.isStopTrans ? `none` : `.5s`)};\r\n`;\r\n\r\nconst SliderPreview = styled.div`\r\n  --navColor: #4c4a46;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  img {\r\n    width: auto;\r\n    height: auto;\r\n    filter: blur(2px);\r\n    opacity: 0.3;\r\n  }\r\n\r\n  p {\r\n    position: absolute;\r\n    top: 100px;\r\n    padding: 4px;\r\n    color: hotpink;\r\n    background-color: var(--navColor);\r\n    opacity: 0.8;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    transition: top 0.5s;\r\n    z-index: 1; //讓提示訊息擋在Avatar前面\r\n\r\n    min-width: 100%;\r\n    border-radius: 70% 70% 0 0;\r\n  }\r\n\r\n  :hover {\r\n    p {\r\n      top: 78px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.img<{ checked: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 85px;\r\n  border-radius: 50%;\r\n  border: ${(props) => (props.checked ? `solid 5px hotpink` : `none`)};\r\n  cursor: pointer;\r\n  transition: width 0.2s ease-in-out;\r\n  transition: border 0.5s;\r\n  opacity: 0.9;\r\n\r\n  :hover {\r\n    width: 90px;\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport {\r\n  selectNumOfElements,\r\n  selectSliderElements,\r\n  selectSlider,\r\n} from \"../slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { TheaterSliderItem } from \"../TheaterSliderItem\";\r\nimport { playSliderLeft, playSliderRight } from \"../api\";\r\n\r\n\r\nexport function TheaterSlider() {\r\n  const { sliderIndex, isTakenOverAnim } = useSelector(selectSlider);\r\n  const numOfElements = useSelector(selectNumOfElements);\r\n  const sliderElements = useSelector(selectSliderElements);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderLeft = () => {\r\n    dispatch(playSliderLeft(sliderIndex, numOfElements));\r\n  };\r\n\r\n  const sliderRight = () => {\r\n    dispatch(playSliderRight(sliderIndex, numOfElements));\r\n  };\r\n\r\n  // console.log(\r\n  //   `[TheaterSlider] render, numOfElements: ${numOfElements}, sliderIndex: ${sliderIndex}`\r\n  // );\r\n  return (\r\n    <SliderWrap>\r\n      <SliderContainer>\r\n        <Content>\r\n          {sliderElements.map((e: TheaterElement, i: number) => (\r\n            <TheaterSliderItem\r\n              key={`slider_${i}_cid_${e.cid}_content`}\r\n              item={e}\r\n              index={sliderIndex}\r\n              isStopTrans={isTakenOverAnim}\r\n            />\r\n          ))}\r\n        </Content>\r\n        <Control onClick={sliderLeft}>\r\n          <ai.AiOutlineLeftCircle />\r\n        </Control>\r\n        <Control onClick={sliderRight}>\r\n          <ai.AiOutlineRightCircle />\r\n        </Control>\r\n      </SliderContainer>\r\n    </SliderWrap>\r\n  );\r\n}\r\n\r\nconst SliderWrap = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color:#4c4a46;\r\n`;\r\n\r\nconst SliderContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: none;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: left;\r\n  overflow: hidden;\r\n  align-items: center;\r\n  background: none;\r\n`;\r\n\r\nconst Control = styled.span`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  font-size: 50px;\r\n  background-color: none;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n  \r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  :nth-of-type(1) {\r\n    left: 30px;\r\n    text-align: right;\r\n  }\r\n  :nth-of-type(2) {\r\n    left: calc(100% - 100px);\r\n    text-align: right;\r\n  }\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n","import { setSlider } from \"../slice\";\r\n\r\nexport const playSliderLeft =\r\n  (sliderIndex: number, numOfElements: number) => (dispatch: any) => {\r\n    let next = sliderIndex - 1;\r\n    if (next === 0) {\r\n      dispatch(setSlider({ next: numOfElements + 1, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: numOfElements, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n\r\nexport const playSliderRight =\r\n  (sliderIndex: number, numOfElements: number) => (dispatch: any) => {\r\n    let next = sliderIndex + 1;\r\n    if (next === numOfElements + 1) {\r\n      dispatch(setSlider({ next: 0, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: 1, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n","import { useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport {\r\n  TheaterSlider,\r\n  TheaterIframesViewer,\r\n  reqTheaterChannels,\r\n} from \"../../features/theater\";\r\n\r\nimport {\r\n  selectSlider,\r\n  setFullScreen,\r\n  setSliderFolded,\r\n} from \"../../features/theater/slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { selectHasFetchChannels } from \"../../features/channelCardStore/slice\";\r\nimport { history } from \"../..\";\r\n\r\nexport default function TheaterPage() {\r\n  const hasfetchChannels = useSelector(selectHasFetchChannels);\r\n  const { isFolded, isFullScreen } = useSelector(selectSlider);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderFold = () => {\r\n    dispatch(setSliderFolded(!isFolded));\r\n  };\r\n\r\n  const fullScreen = () => {\r\n    dispatch(setFullScreen(!isFullScreen));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    // 進入Theater前，必須先至少取得一次完整的頻道資訊避免異常。\r\n    if (!hasfetchChannels) {\r\n      history.push({ pathname: \"/channels\" });\r\n      return;\r\n    }\r\n    // 進入頁面時，先獲取Theater清單(目前為取出所有live頻道)\r\n    dispatch(reqTheaterChannels(\"live\"));\r\n    \r\n    return () => {\r\n      // 離開影院時，強制將Folded狀態回復。\r\n      dispatch(setSliderFolded(false));\r\n    };\r\n  }, [hasfetchChannels, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Wrap isFolded={isFolded}>\r\n        <TheaterSlider />\r\n        <TheaterIframesViewer />\r\n      </Wrap>\r\n      <HideNavBarBtn onClick={sliderFold} isFolded={isFolded}>\r\n        {isFolded ? (\r\n          <ai.AiOutlineVerticalAlignBottom />\r\n        ) : (\r\n          <ai.AiOutlineVerticalAlignTop />\r\n        )}\r\n      </HideNavBarBtn>\r\n      <FullScreenBtn onClick={fullScreen} isFolded={isFolded}>\r\n        {isFullScreen ? (\r\n          <ai.AiOutlineFullscreenExit />\r\n        ) : (\r\n          <ai.AiOutlineFullscreen />\r\n        )}\r\n      </FullScreenBtn>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div<{ isFolded: boolean }>`\r\n  --topOffset: ${(props) => (props.isFolded ? `-100px` : `65px`)};\r\n\r\n  position: absolute;\r\n  left: 0;\r\n  top: var(--topOffset);\r\n\r\n  width: 100%;\r\n  height: calc(100vh - var(--topOffset));\r\n\r\n  overflow: hidden;\r\n  /* z-index: -1; //為了讓整體在NAV後面 */\r\n`;\r\n\r\nconst HideNavBarBtn = styled.span<{ isFolded: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: ${(p) => (p.isFolded ? `85px` : `135px`)};\r\n  left: calc(100% - 35px);\r\n  text-align: right;\r\n\r\n  font-size: 35px;\r\n  background-color: #eee;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  transition: 0.3s;\r\n\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nconst FullScreenBtn = styled.span<{ isFolded: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: ${(p) => (p.isFolded ? `35px` : `85px`)};\r\n  left: calc(100% - 35px);\r\n  text-align: right;\r\n\r\n  font-size: 35px;\r\n  background-color: #eee;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  transition: 0.3s;\r\n\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { ChannelProps } from \"../../../app/types\";\r\nimport { setElements } from \"../slice\";\r\n\r\nexport const reqTheaterChannels =\r\n  (tag: string) => (dispatch: any) => {\r\n    axios.get(`${API_SERVER_URL}/channels/${tag}`).then(\r\n      (resp) => {\r\n        console.log(\"Theater請求成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const channels: ChannelProps[] = resp.data[\"channels\"];\r\n        if (code === \"success\") {\r\n          dispatch(setElements({ channels }));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"Theater請求失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { useEffect } from \"react\";\r\nimport { history } from \"../..\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { selectIsLogin, setMsg } from \"../../features/user/slice\";\r\n\r\nexport default function HomePage() {\r\n  const isLogin = useSelector(selectIsLogin);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isLogin) {\r\n      history.push({ pathname: \"/channels\" });\r\n    } else {\r\n      dispatch(setMsg(\"\")); // clear\r\n      history.push({ pathname: \"/login\" });\r\n    }\r\n    return () => {};\r\n  }, [isLogin, dispatch]);\r\n\r\n  return <div>Home</div>;\r\n}\r\n","import styled from \"styled-components\"\r\nimport RocketLoading from \"../../components/RocketLoading\"\r\n\r\nexport default function LoadingPage() {\r\n    return (\r\n        <Container>\r\n            <RocketLoading/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    top: 65px;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: none;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  /* background: none; */\r\n  background: linear-gradient(120deg, #4c4a46, #c5c3c6);\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  --titleColor: #E87A00;\r\n\r\n  --mainColor: #4c5c68;\r\n  --mainBorderColor: #adadad;\r\n  --mainHoverColor: #E87A00;\r\n  --mainBorderHoverColor: #D89C60;\r\n\r\n  --inputLineColor: #adadad;\r\n  --inputLineValidColor: #E87A00;\r\n\r\n  --msgBgColor: #E87A00;\r\n  --msgBorderColor: #D89C60;\r\n  --msgTxtColor: #fff;\r\n\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.5);\r\n\r\n  max-width: 480px;\r\n  min-width: 250px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px 40px 0 40px;\r\n  background-color: none;\r\n  div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    input {\r\n      width: 100%;\r\n      padding: 0 5px;\r\n      height: 40px;\r\n      font-size: 16px;\r\n      border: none;\r\n      outline: none;\r\n      color: var(--inputLineValidColor);\r\n\r\n      :focus ~ label {\r\n        top: -5px;\r\n        color: var(--inputLineValidColor);\r\n      }\r\n      :valid ~ label {\r\n        top: -5px;\r\n        color: var(--inputLineValidColor);\r\n      }\r\n      :focus ~ span::before {\r\n        width: 100%;\r\n      }\r\n      :valid ~ span::before {\r\n        width: 100%;\r\n      }\r\n    }\r\n    label {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 5px;\r\n      color: var(--inputLineColor);\r\n      transform: translateY(-50%);\r\n      font-size: 16px;\r\n      pointer-events: none;\r\n      transition: 0.3s;\r\n    }\r\n    span {\r\n      ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 40px;\r\n        left: 0;\r\n        width: 0%;\r\n        height: 2px;\r\n        background-color: var(--inputLineValidColor);\r\n        transition: 0.3s;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  padding: 20px 0 0 0;\r\n  h1 {\r\n    letter-spacing: 5px;\r\n    text-align: center;\r\n    padding: 0 0 20px 0;\r\n    border-bottom: 1px solid silver;\r\n    font-size: 28px;\r\n    width: 100%;\r\n    color: var(--titleColor);\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nexport const MsgBox = styled.div`\r\n  position: relative;\r\n  left: 0%;\r\n  top: 0%;\r\n  padding: 20px 0;\r\n\r\n  border-radius: 20px;\r\n  border: 2px solid var(--msgBorderColor);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  background: var(--msgBgColor);\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.2);\r\n\r\n  :after {\r\n    position: absolute;\r\n    margin-top: 59px;\r\n    content: \"\";\r\n    width: 25px;\r\n    height: 25px;\r\n    background-color: var(--msgBgColor);\r\n    border-bottom: 2px solid var(--msgBorderColor);\r\n    border-right: 2px solid var(--msgBorderColor);\r\n    transform: rotate(45deg);\r\n  }\r\n\r\n  h1 {\r\n    position: relative;\r\n    display: block;\r\n    color: var(--msgTxtColor);\r\n    animation: msgTextShaking 0.8s linear infinite;\r\n\r\n    @keyframes msgTextShaking {\r\n      0% {\r\n        transform: translateX(-3px);\r\n      }\r\n      50% {\r\n        transform: translateX(3px);\r\n      }\r\n      100% {\r\n        transform: translateX(-3px);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UsernameField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid var(--inputLineColor);\r\n  margin: 30px 0;\r\n\r\n  input {\r\n    background: none;\r\n  }\r\n`;\r\n\r\nexport const PasswordField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid var(--inputLineColor);\r\n  margin: 30px 0;\r\n\r\n  input {\r\n    background: none;\r\n  }\r\n`;\r\n\r\nexport const MainButton = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  border-radius: 25px;\r\n  font-size: 18px;\r\n  font-weight: 700px;\r\n  color: var(--inputLineColor);\r\n  background-color: var(--mainColor);\r\n  border: 2px solid;\r\n  border-color: var(--mainBorderColor);\r\n  letter-spacing: 2px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  p {\r\n    width: 100%;\r\n    text-align: center;\r\n    pointer-events: none;\r\n  }\r\n  :hover {\r\n    color: #fff;\r\n    background-color: var(--mainHoverColor);\r\n    border-color: var(--mainBorderHoverColor);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nexport const SwitchField = styled.div`\r\n  position: relative;\r\n  margin: 30px 0;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  p {\r\n    text-align: center;\r\n    pointer-events: none;\r\n    color: var(--inputLineColor);\r\n  }\r\n  div {\r\n    padding: 0px 10px;\r\n    color: var(--titleColor);\r\n    cursor: pointer;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n","import { Fragment, useLayoutEffect, useRef } from \"react\";\r\nimport { reqLogin } from \"./api\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { history } from \"../../index\";\r\nimport { selectIsLogin, selectMsg, selectUser, setMsg } from \"./slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"./styles\";\r\n\r\nexport function LoginPage() {\r\n  const user = useSelector(selectUser);\r\n  const isLogin = useSelector(selectIsLogin);\r\n  const msg = useSelector(selectMsg);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n  const dispatch = useDispatch();\r\n  \r\n  const routeToRegister = () => {\r\n    dispatch(setMsg(\"\")) //clear\r\n    history.push({ pathname: \"/register\" });\r\n  };\r\n\r\n  const onLogin = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      // console.log(\"用戶名不可為空\");\r\n      dispatch(setMsg(\"用戶名不可為空\"));\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      // console.log(\"密碼不可為空\");\r\n      dispatch(setMsg(\"密碼不可為空\"));\r\n      return;\r\n    }\r\n\r\n    dispatch(reqLogin(username, password));\r\n  };\r\n\r\n  // 如果用戶已經登入時，直接從網址進入會強制轉址到logout。\r\n  useLayoutEffect(()=>{\r\n    if (isLogin){\r\n      dispatch(setMsg(`${user.username} 要登出嗎?`))\r\n      history.push({ pathname: \"/logout\" });\r\n    }\r\n    return ()=>{}\r\n  },[])\r\n  \r\n  useLayoutEffect(() => {\r\n    const {username} = user\r\n    if (usernameInput.current && username !== \"\") {\r\n      usernameInput.current.value = username;\r\n    }\r\n  }, [usernameInput, user]);\r\n\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員登入</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment />\r\n          )}\r\n          <UsernameField>\r\n            <input\r\n              type=\"text\"\r\n              // placeholder=\"請輸入用戶名?\"\r\n              ref={usernameInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input\r\n              type=\"password\"\r\n              // placeholder=\"請輸入密碼?\"\r\n              ref={passwordInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onLogin}>\r\n            <p>登 入</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>還不是會員?</p>\r\n            <div onClick={routeToRegister}>註冊</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserLoginResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserLogin } from \"../slice\";\r\n\r\nexport const reqLogin =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    // 產生登入的postform資料\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n\r\n    // 發送Post請求\r\n    axios.post(`${API_SERVER_URL}/auth/login`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userLoginRes: UserLoginResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserLogin(userLoginRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"登入成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { useLayoutEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { reqRegister } from \"./api\";\r\nimport { history } from \"../../index\";\r\nimport { useSelector } from \"../../app/hooks\";\r\nimport { selectIsLogin, selectMsg, selectUser, setMsg } from \"./slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"./styles\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport function RegisterPage() {\r\n  const user = useSelector(selectUser);\r\n  const isLogin = useSelector(selectIsLogin);\r\n  const msg = useSelector(selectMsg);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput2 = useRef<HTMLInputElement>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const routeToLogin = () => {\r\n    dispatch(setMsg(\"\")); // clear\r\n    history.push({ pathname: \"/login\" });\r\n  };\r\n\r\n  const onRegister = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n    const password2 = passwordInput2.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      // console.log(\"用戶名不可為空\");\r\n      dispatch(setMsg(\"用戶名不可為空\"));\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      // console.log(\"密碼不可為空\");\r\n      dispatch(setMsg(\"密碼不可為空\"));\r\n      return;\r\n    }\r\n    if (password !== password2) {\r\n      // console.log(\"輸入的密碼不一致\");\r\n      dispatch(setMsg(\"輸入的密碼不一致\"));\r\n      return;\r\n    }\r\n\r\n    dispatch(reqRegister(username, password));\r\n  };\r\n\r\n  // 如果用戶已經登入時，直接從網址進入會強制轉址到logout。\r\n  useLayoutEffect(()=>{\r\n    if (isLogin){\r\n      dispatch(setMsg(`${user.username} 要登出嗎?`))\r\n      history.push({ pathname: \"/logout\" });\r\n    }\r\n    return ()=>{}\r\n  },[])\r\n\r\n  useLayoutEffect(() => {\r\n    const {username} = user;\r\n    if(usernameInput.current && username !== \"\") {\r\n      usernameInput.current.value = username;\r\n    }\r\n  }, [usernameInput, user])\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員註冊</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment/>\r\n          )}\r\n          <UsernameField>\r\n            <input type=\"text\" ref={usernameInput} required />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput} required />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput2} required />\r\n            <span />\r\n            <label>{\"密碼確認\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onRegister}>\r\n            <p>註 冊</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>註冊過了?</p>\r\n            <div onClick={routeToLogin}>登入</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserRegisterResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserRegister } from \"../slice\";\r\n\r\nexport const reqRegister =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n    axios.post(`${API_SERVER_URL}/auth/register`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userRegisterRes: UserRegisterResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserRegister(userRegisterRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"註冊成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { Fragment, useLayoutEffect} from \"react\";\r\nimport { reqLogout } from \"./api\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { selectIsLogin, selectMsg, selectUser, setMsg } from \"./slice\";\r\nimport { Wrap, Container, Title, Content, MsgBox, MainButton } from \"./styles\";\r\nimport { history } from \"../..\";\r\n\r\nexport function LogoutPage() {\r\n  const user = useSelector(selectUser);\r\n  const isLogin = useSelector(selectIsLogin);\r\n  const msg = useSelector(selectMsg);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = () => {\r\n    const { username, ssid } = user;\r\n    dispatch(reqLogout(username, ssid));\r\n  };\r\n\r\n  useLayoutEffect(()=>{\r\n    if (!isLogin){\r\n      dispatch(setMsg(`${user.username} 要登入嗎?`))\r\n      history.push({ pathname: \"/login\" });\r\n    }\r\n    return ()=>{}\r\n  },[])\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員登出</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment />\r\n          )}\r\n          <br />\r\n          <br />\r\n          <MainButton onClick={onLogout}>\r\n            <p>登 出</p>\r\n          </MainButton>{\" \"}\r\n          <br />\r\n          <br />\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserLoginResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserLogin } from \"../slice\";\r\n\r\nexport const reqLogout =\r\n  (username: string, ssid: string) => (dispatch: any) => {\r\n\r\n    // 產生登入的postform資料\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n\r\n    // 發送Post請求\r\n    axios.post(`${API_SERVER_URL}/auth/logout`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        // const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n\r\n          const userLoginRes: UserLoginResponse = {\r\n            username:\"\",\r\n            ssid:\"\",\r\n            expiration: -1,\r\n            msg:`${username} 已登出`,\r\n          };\r\n          dispatch(setUserLogin(userLoginRes));\r\n          history.push({ pathname: \"/login/\" });\r\n\r\n        } else {\r\n          dispatch(setMsg(`${username} 登出失敗`));\r\n          history.push({ pathname: \"/logout/\" });\r\n        }\r\n      },\r\n      (err) => {\r\n        dispatch(setMsg(`登出時發生異常，請重試`));\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { selectFavoredList, selectGroup, setFavoredList } from \"./slice\";\r\n\r\nexport function FavoredCard(props: FavoredItem) {\r\n  const {\r\n    cid: Cid,\r\n    group: groupName,\r\n    owner,\r\n    cname,\r\n    avatar,\r\n    isDeleted,\r\n    isNewAdded,\r\n  } = props;\r\n  const list = useSelector(selectFavoredList);\r\n  const group = useSelector(selectGroup);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getEditedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.filter(\r\n      (item: FavoredItem) => item.cid !== newItem.cid\r\n    );\r\n    return [newItem, ...newList];\r\n  };\r\n\r\n  const getDeletedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.map((item: FavoredItem) =>\r\n      item.cid !== newItem.cid ? item : newItem\r\n    );\r\n    return [...newList];\r\n  };\r\n\r\n  const handleGroupEdit = () => {\r\n    // 取得新的狀態\r\n    const newGroupName = window.prompt(\"指定為新的群組? \", groupName);\r\n\r\n    if (newGroupName == null) {\r\n      return;\r\n    }\r\n    if (newGroupName === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n\r\n    // 加入到新的群組\r\n    if (newGroupName !== groupName) {\r\n      // 修改該元素的群組屬性\r\n      const newList: FavoredItem[] = getEditedList({\r\n        ...props,\r\n        isChanged: true, //添加變更紀錄\r\n        group: newGroupName,\r\n      });\r\n\r\n      const newGroup: string[] = [\r\n        newGroupName,\r\n        ...group.filter((g: string) => g !== newGroupName),\r\n      ];\r\n      dispatch(setFavoredList({ group: newGroup, list: newList }));\r\n    }\r\n  };\r\n\r\n  const handleItemEdit = () => {\r\n    var newOwner = window.prompt(\"輸入新的頻道名稱 ? \", owner);\r\n    if (newOwner == null) {\r\n      return;\r\n    }\r\n    if (newOwner === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n    const newList = getEditedList({\r\n      ...props,\r\n      isChanged: true, //添加變更紀錄\r\n      owner: newOwner,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  const handleItemDelete = () => {\r\n    var ok = window.confirm(`確定要停止追隨 ${owner} 嗎 ?`);\r\n    if (ok) {\r\n      const newList = getDeletedList({\r\n        ...props,\r\n        isDeleted: true, //添加變更紀錄\r\n        group: groupName,\r\n      });\r\n      dispatch(setFavoredList({ list: newList, group: null }));\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    const newList = getDeletedList({\r\n      ...props,\r\n      isDeleted: false, //添加變更紀錄\r\n      group: groupName,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Avatar>\r\n        <img src={avatar} alt={`${cname}'s avatar`} />\r\n      </Avatar>\r\n      <OwnerText isDeleted={isDeleted} isNewAdded={isNewAdded}>\r\n        <label htmlFor={Cid}>{owner}</label>\r\n      </OwnerText>\r\n      <ButtonGroup>\r\n        <Button onClick={handleGroupEdit}>\r\n          <ai.AiOutlineGroup />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        <Button onClick={handleItemEdit}>\r\n          <ai.AiOutlineEdit />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        {isDeleted ? (\r\n          <Button onClick={cancelDelete}>\r\n            <ai.AiOutlineRedo />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        ) : (\r\n          <Button onClick={handleItemDelete}>\r\n            <ai.AiTwotoneDelete />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        )}\r\n      </ButtonGroup>\r\n    </Container>\r\n  );\r\n}\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  background-color: none;\r\n  border-radius: 10px;\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.5);\r\n\r\n  padding: 16px;\r\n  margin: 6px auto;\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  margin-right: 15px;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  pointer-events: none;\r\n\r\n  img {\r\n    min-width: 50px;\r\n    max-width: 100px;\r\n    background-color: #999;\r\n    border-radius: 15px;\r\n    width: 4rem;\r\n    height: 4rem;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst OwnerText = styled.div<{ isDeleted: boolean; isNewAdded: boolean }>`\r\n  width: 100%;\r\n  padding: 0 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: ${(p) => (p.isNewAdded ? `#f00` : p.isDeleted ? `#888` : `#fff`)};\r\n  label {\r\n    text-decoration: ${(p) => (p.isDeleted ? `line-through` : `none`)};\r\n    font-size: 18px;\r\n  }\r\n`;\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Button = styled.div`\r\n  margin-left: 12px;\r\n  padding: 5px 5px;\r\n  cursor: pointer;\r\n  font-size: 25px;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  p {\r\n    display: none;\r\n  }\r\n  :hover {\r\n    color: var(--btnHoverColor);\r\n    background-color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { VISITS_DEFAULT_GROUPNAME } from \"../../app/config\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { FavoredCard } from \"./FavoredCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\n\r\nexport function FavoredCardsGroup(props: {\r\n  items: FavoredItem[];\r\n  groupName: string;\r\n}) {\r\n  const groupName = props.groupName || VISITS_DEFAULT_GROUPNAME;\r\n\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"30px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#4c5c68\"}\r\n      />\r\n      <Content>\r\n        {props.items.map((item: FavoredItem) => (\r\n          <li key={\"FavoredCard_\" + item.cid}>\r\n            <FavoredCard {...item} />\r\n          </li>\r\n        ))}\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Content = styled.ul`\r\n  max-width: 960px;\r\n  width: 99%;\r\n  margin: auto;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { FavoredCardsGroup } from \"./FavoredCardsGroup\";\r\nimport { Fragment } from \"react\";\r\nimport { selectFavoredCardsList, selectGroup } from \"./slice\";\r\n\r\n/**\r\n * 收藏品，表列出已登入使用者自定義的喜好頻道列表\r\n */\r\nexport function FavoredCardsViewer() {\r\n  const favoredCardsList: FavoredItem[][] = useSelector(selectFavoredCardsList);\r\n  const group = useSelector(selectGroup);\r\n\r\n  return (\r\n    <ViewerContainer>\r\n      {/* <Header {...headerTheme}>\r\n        <div onClick={onHeaderBtnClick}>\r\n          {headerTheme.icon}\r\n          <p>{headerTheme.text}</p>\r\n        </div>\r\n      </Header> */}\r\n      <Content>\r\n        {favoredCardsList.map((items: FavoredItem[], i) => {\r\n          // 驗證groupname\r\n          // 根據分群顯示\r\n          const groupName = group[i];\r\n          return items.length > 0 ? (\r\n            <FavoredCardsGroup\r\n              key={\"GroupVisitItems_\" + groupName}\r\n              items={items}\r\n              groupName={groupName}\r\n            />\r\n          ) : (\r\n            <Fragment key={\"GroupVisitItems_\" + groupName} />\r\n          );\r\n        })}\r\n      </Content>\r\n    </ViewerContainer>\r\n  );\r\n}\r\n\r\nconst ViewerContainer = styled.div`\r\n  --btnTextColor: #fff;\r\n  --btnTextHoverColor: #fff;\r\n  --btnBgColor: rgba(25, 133, 161, 0.5);\r\n  --btnBgHoverColor: rgb(25, 133, 161);\r\n  --groupTextColor: rgb(25, 133, 161);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #4c4a46;\r\n\r\n  position: absolute;\r\n  top: 65px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n  background: #4c5c68;\r\n  overflow-y: auto;\r\n`;\r\n\r\n// type HeaderThemeType = {\r\n//   icon: any;\r\n//   text: string;\r\n// };\r\n// const getHeaderIcon = (\r\n//   isLogin: boolean,\r\n//   isChanged: boolean\r\n// ): HeaderThemeType => {\r\n//   // debugger\r\n//   if (!isLogin) {\r\n//     // login first\r\n//     return {\r\n//       text: \"請先登入\",\r\n//       icon: <ai.AiOutlineUser />,\r\n//     };\r\n//   }\r\n//   if (isChanged) {\r\n//     // should update\r\n//     return {\r\n//       text: \"保存修改\",\r\n//       icon: <ai.AiOutlineCloudUpload />,\r\n//     };\r\n//   } else {\r\n//     // colsed\r\n//     return {\r\n//       text: \"直接關閉\",\r\n//       icon: <ai.AiOutlineClose />,\r\n//     };\r\n//   }\r\n// };\r\n\r\n// const Header = styled.div<HeaderThemeType>`\r\n//   position: relative;\r\n//   background-color: var(--navColor);\r\n//   width: 100%;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n\r\n//   div {\r\n//     position: relative;\r\n//     width: 100%;\r\n//     margin: 10px 20px 0;\r\n//     padding: 15px 0;\r\n//     border-radius: 30px;\r\n//     font-weight: 700px;\r\n//     display: flex;\r\n//     flex-direction: row;\r\n//     align-items: center;\r\n//     justify-content: center;\r\n//     color: var(--btnTextColor);\r\n//     background-color: var(--btnBgColor);\r\n//     cursor: pointer;\r\n//     border: 2px solid;\r\n//     transition: 0.5s;\r\n\r\n//     svg {\r\n//       font-size: 8vmin;\r\n//       padding-right: 5px;\r\n//       transition: 0.2s;\r\n//     }\r\n\r\n//     p {\r\n//       letter-spacing: 1vmin;\r\n//       font-size: 6vmin;\r\n//       transition: 0.2s;\r\n//     }\r\n\r\n//     :hover {\r\n//       color: var(--btnTextHoverColor);\r\n//       background-color: var(--btnBgHoverColor);\r\n\r\n//       svg {\r\n//         font-size: 9vmin;\r\n//       }\r\n\r\n//       p {\r\n//         font-size: 8vmin;\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n`;\r\n","import { useLayoutEffect } from \"react\";\r\nimport { history } from \"../..\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { selectHasFetchChannels } from \"../../features/channelCardStore/slice\";\r\nimport { FavoredCardsViewer } from \"../../features/favored\";\r\nimport { reqEditVisit } from \"../../features/favored/api\";\r\nimport { selectIsLogin, selectUser, setMsg } from \"../../features/user/slice\";\r\n\r\nexport default function FavoredPage() {\r\n  const user = useSelector(selectUser);\r\n  const isLogin = useSelector(selectIsLogin);\r\n  const hasFetchChannel = useSelector(selectHasFetchChannels);\r\n  const dispatch = useDispatch();\r\n\r\n  useLayoutEffect(() => {\r\n    const { username, ssid } = user;\r\n    if (isLogin) {\r\n      if (!hasFetchChannel) {\r\n        dispatch(reqEditVisit(username, ssid));\r\n      }\r\n    } \r\n    else {\r\n      history.push({ pathname: \"/login\" });\r\n      dispatch(setMsg(\"想加收藏要先登入唷~\"));\r\n    }\r\n\r\n    return () => {};\r\n  }, [dispatch, user, isLogin,  hasFetchChannel]);\r\n\r\n  return <FavoredCardsViewer />;\r\n}\r\n","/**\r\n * 每次開啟收藏清單時，驗證並獲取該收藏清單。\r\n */\r\nimport axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL, VISITS_DEFAULT_GROUPNAME } from \"../../../app/config\";\r\nimport { VisitItem, VisitList, FavoredItem } from \"../../../app/types\";\r\nimport { onErrorAndClearUser } from \"../../user/slice\";\r\nimport { createFavoredItem } from \"../shares/createFavoredItem\";\r\nimport { setFavoredList } from \"../slice\";\r\n\r\nexport const reqEditVisit =\r\n  (username: string, ssid: string) => (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    axios.post(`${API_SERVER_URL}/visit/edit`, postform).then(\r\n      (resp) => {\r\n        console.log(\"開啟VisitList成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const visit: VisitList = resp.data[\"visit\"];\r\n\r\n        if (code === \"success\") {\r\n          // 安全地設置新的group，且添加 \"Favorite\" 分群\r\n          const group =\r\n            visit.group && visit.group.length > 0\r\n              ? visit.group.includes(VISITS_DEFAULT_GROUPNAME)\r\n                ? visit.group\r\n                : [VISITS_DEFAULT_GROUPNAME, ...visit.group]\r\n              : [VISITS_DEFAULT_GROUPNAME];\r\n\r\n          // 安全地設置新的 FavoredList\r\n          const newFavoredList: FavoredItem[] =\r\n            visit.list && visit.list.length > 0\r\n              ? visit.list.map((l: VisitItem) =>\r\n                  createFavoredItem(l, {\r\n                    isChanged: false,\r\n                    isDeleted: false,\r\n                    isNewAdded: false,\r\n                  })\r\n                )\r\n              : [];\r\n\r\n          dispatch(\r\n            setFavoredList({\r\n              list: newFavoredList,\r\n              group: group,\r\n            })\r\n          );\r\n        } else if (code === \"failure\") {\r\n          console.log(\"code failure，重新導引到登入頁面:\\n\");\r\n          setFavoredList({\r\n            list: [],\r\n            group: [VISITS_DEFAULT_GROUPNAME],\r\n          });\r\n          dispatch(onErrorAndClearUser(\"發生錯誤了，麻煩請重新登入\"))\r\n          history.push({ pathname: \"/login\" });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"開啟VisitList 失敗了, 錯誤如下:\\n\", err);\r\n        setFavoredList({\r\n          list: [],\r\n          group: [VISITS_DEFAULT_GROUPNAME],\r\n        });\r\n      }\r\n    );\r\n  };\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport ChannelsStage from \"./pages/ChannelsStage\";\r\nimport TheaterPage from \"./pages/TheaterPage\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport LoadingPage from \"./pages/LoadingPage\";\r\nimport { LoginPage, RegisterPage, LogoutPage } from \"./features/user\";\r\nimport FavoredPage from \"./pages/FavoredPage\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/channels/\" component={ChannelsStage} />\r\n        <Route path=\"/theater/\" component={TheaterPage} />\r\n        <Route path=\"/favored/\" component={FavoredPage} />\r\n        <Route path=\"/login/\" component={LoginPage} />\r\n        <Route path=\"/logout/\" component={LogoutPage} />\r\n        <Route path=\"/register/\" component={RegisterPage} />\r\n        <Route path=\"/loading/\" component={LoadingPage} />\r\n      </Switch>\r\n\r\n      {/* 讓NavBar可以fixed在最上方 */}\r\n      <Navbar /> \r\n    </>\r\n  );\r\n}\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport channelCardStoreReducer from \"../features/channelCardStore/slice\";\r\nimport userReducer from \"../features/user/slice\";\r\nimport theaterReducer from \"../features/theater/slice\";\r\nimport favoredReducer from \"../features/favored/slice\";\r\nimport { decodeUrlToConnectionConfig } from \"./connections\";\r\n\r\nconst reducer = combineReducers({\r\n  channelCardStore: channelCardStoreReducer,\r\n  user: userReducer,\r\n  theater: theaterReducer,\r\n  favored:favoredReducer,\r\n});\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n});\r\n\r\n// 透過Url取得連線參數。\r\ndecodeUrlToConnectionConfig();\r\n\r\n// const preloadedState = {\r\n//   channels:{\r\n//     favored:[],\r\n//     resident:[],\r\n//   },\r\n//   visit:{\r\n//     list:[],\r\n//   },\r\n//   user:{\r\n//     username: \"\",\r\n//     ssid: \"\",\r\n//   }\r\n// }\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  middleware,\r\n  // preloadedState,\r\n});\r\n\r\n// 透過其回傳值自行推斷出 Store 的形態\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\nimport { Router } from \"react-router\";\r\nimport {createHashHistory} from 'history'\r\n\r\nexport const history = createHashHistory()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}