{"version":3,"sources":["components/NavItem/index.tsx","app/hooks.ts","features/theater/share.tsx","features/theater/slice.tsx","app/config.tsx","features/channelCardStore/share.tsx","features/channelCardStore/slice.tsx","features/channelCardStore/ChannelCard.tsx","components/GroupLine/index.tsx","features/channelCardStore/ChannelCardsGroup.tsx","features/channelCardStore/ChannelCardsBrowser.tsx","components/SearchBox/index.tsx","features/channelCardStore/api/reqFetchChannels.tsx","features/channelCardStore/api/reqUpdateVisit.tsx","features/user/slice.tsx","features/channelCardStore/ChannelSearch.tsx","features/channelCardStore/api/reqSearchChannel.tsx","components/SwitchBtn/index.tsx","features/channelCardStore/ChannelTagsSwitchers.tsx","features/channelCardStore/FavoredCard.tsx","features/channelCardStore/FavoredCardsGroup.tsx","features/channelCardStore/FavoredCardsViewer.tsx","features/channelCardStore/FavoredCardsNavItem.tsx","components/Navbar/index.tsx","pages/ChannelsStage/index.tsx","features/channelCardStore/api/reqEditVisit.tsx","features/theater/TheaterChatbox/index.tsx","features/theater/TheaterPlayerItem/index.tsx","features/theater/TheaterIframesViewer/index.tsx","features/theater/TheaterSliderItem/index.tsx","features/theater/TheaterSlider/index.tsx","pages/TheaterPage/index.tsx","features/theater/api/reqTheaterChannels.tsx","pages/HomePage/index.tsx","components/RocketLoading/index.tsx","pages/LoadingPage/index.tsx","features/user/styles.tsx","features/user/Login/index.tsx","features/user/api/reqLogin.tsx","features/user/Register/index.tsx","features/user/api/reqRegister.tsx","pages/UserPage/index.tsx","App.tsx","app/store.ts","index.tsx"],"names":["NavItem","props","title","path","icon","showMenu","Container","onClick","history","push","pathname","styled","div","useSelector","hook_useSelector","useDispatch","hook_useDispatch","createTheaterElement","ch","options","cid","cname","avatar","streamurl","preview","thumbnail","method","checked","getPlayerSrc","src","sub","match","vedioid","console","error","getChatboxSrc","getListAppendIframe","list","newItem","filter","o","concat","getListRemoveIframe","setIframeSize","item","ratio","w","h","getResult","col","row","cw","pw","ph","flexType","slice","createSlice","name","initialState","elements","playlist","chatlist","slider","sliderIndex","isTakenOverAnim","isFolded","gridlayout","clientWidth","clientHeight","reducers","setElements","state","action","channels","payload","length","mp","Map","forEach","p","set","map","i","get","setSlider","next","log","setSliderFolded","resizeGridLayout","newIframeSize","cW","cH","size","result","maxArea","curRow","Math","ceil","gridW","gridH","curPlayW","curPlayH","curChatW","curChatH","min","area","calcNewIframeSizeV2","player","chatbox","setFromChannel","newPlayerIframe","convertToPlayerIframe","newChatboxIframe","isEnable","convertToChatboxIframe","status","appendIframeToPlaylist","newElements","e","newPlaylist","createPlayerIframe","newChatlist","createChatboxIframe","removeIframeFromPlaylist","removeIframeByCid","actions","selectTheater","theater","selectElements","createSelector","selectPlaylist","selectPlayPairs","len","selectGridLayout","selectSlider","selectNumOfElements","selectSliderElements","API_SERVER_URL","VISITS_DEFAULT_GROUPNAME","CHANNELS_DEFAULT_GROUPNAME","SwitcherList","htmlFor","afterColor","NavItemsArray","createChannelCard","group","heart","createFavoredItem","card","isChanged","isNewAdded","isDeleted","owner","createVisitItem","hasFetchChannels","clusters","favoredList","tags","current","isFavoredCardsViewerEnable","setStore","v","chgroups","setCluster","setChannelCard","prelist","cards","setFavoredList","setSearchResult","f","setIsFavoredCardsViewerEnable","undefined","selectChannelCardStore","channelCardStore","selectHasFetchChannels","store","selectTags","selectGroup","selectFavoredList","selectCurrent","selectIsFavoredCardsViewerEnable","selectVisitList","newfavoredList","newGroup","has","selectFavoredCardsList","x","index","indexOf","selectIsFavoredCardsListChanged","isListChanged","selectNumOfFavoredCards","count","ChannelCard","viewcount","starttime","groupName","useState","isVisible","setIsVisible","ref","useRef","heartTheme","getHeartTheme","dispatch","useEffect","parentDom","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","disconnect","AvatarBox","getAvatarStyles","alt","FavoredHeartBtn","CardBody","PreviewBox","GetImg","Description","Owner","ChTitle","Detail","Left","Right","fontcolor","fontbgcolor","bordercolor","type","color","hoverColor","Error","a","GroupLine","h1","lineColor","bkgColor","fontsize","ChannelCardsGroup","ChannelGridCantainer","ChannelCardsBrowser","view","cs","GetChannelCardsGroup","SearchBox","theme","setIsEnable","searchInput","commit","onSubmit","value","onChange","onKeyUp","keyCode","id","placeholder","style","fontSize","iconColor","focusColor","reqFetchChannels","username","ssid","request","FormData","append","JSON","stringify","axios","post","then","response","data","reqUpdateVisit","visit","postform","resp","code","msg","setTimeout","err","setSession","session","expiration","expires","Date","now","toUTCString","document","cookie","setCookie","getCookie","setUserLogin","setUserRegiser","setMsg","c_name","c_start","c_end","unescape","substring","selectUser","user","ChannelSearch","keyword","url","SwitchBtn","HiddenCheckedInput","handleSwitchClick","tag","isChecked","ToogleFill","label","beforeColor","ballColor","input","ChannelTagsSwitchers","includes","newtags","_tag","_","SwitchBtnBox","FavoredCard","Cid","getEditedList","newList","getDeletedList","Avatar","OwnerText","ButtonGroup","Button","newGroupName","window","prompt","g","alert","newOwner","confirm","FavoredCardsGroup","favoredlist","onDragEnd","source","dest","destination","splice","deleted","droppableId","provided","Content","droppableProps","innerRef","items","draggableId","draggableProps","dragHandleProps","ul","FavoredCardsViewer","isLogin","headerTheme","getHeaderIcon","useLayoutEffect","ViewerContainer","Header","text","FavoredCardsNavItem","numOfFavored","Collection","visible","Navbar","Nav","Logo","Menu","ToogleNavBkg","nav","ChannelsStage","already","newAdded","reduce","cur","newlist","reqEditVisit","isStopScroll","ControlPanel","ChannelSearchCard","TheaterChatbox","ChatboxContainer","width","height","getChatboxIframe","scrolling","allowFullScreen","allowTransparency","seamless","frameBorder","TheaterPlayerItem","IframeGridLocator","playerWidth","playerHeight","chatboxWidth","chatboxHeight","IframeContainer","onMouseEnter","onMouseLeave","getPlayerIframe","sandbox","TheaterIframesViewer","dom","pairs","numOfIframes","resizeIframes","useCallback","handler","resize","clearTimeout","addEventListener","removeEventListener","TheaterSliderItem","isStopTrans","Section","SliderPreview","img","TheaterSlider","numOfElements","sliderElements","SliderWrap","SliderContainer","Control","span","TheaterPage","hasfetchChannels","dispatchEvent","Event","Wrap","HomePage","RocketLoading","Loader","Array","fill","Dot","Rocket","LoadingPage","MsgBox","Title","UsernameField","PasswordField","MainButton","SwitchField","Login","usernameInput","passwordInput","required","password","reqLogin","Register","passwordInput2","password2","reqRegister","UserPage","pageName","App","exact","component","render","reducer","combineReducers","channelCardStoreReducer","userReducer","theaterReducer","middleware","getDefaultMiddleware","serializableCheck","configureStore","createHashHistory","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d3b7e2cf.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { history } from \"../../index\";\r\nimport { NavItemProps } from \"../../app/types\";\r\n\r\ninterface Props extends NavItemProps{\r\n  showMenu:Function\r\n}\r\n\r\nexport default function NavItem(props: Props) {\r\n  const { title, path, icon, showMenu } = props;\r\n\r\n  const onClick = () => {\r\n    if (path !== \"\"){\r\n      history.push({ pathname: `${path}` });\r\n    }\r\n    showMenu();\r\n  };\r\n\r\n  return (\r\n    <Container onClick={onClick}>\r\n      {icon}\r\n      <p>{title}</p>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 1.5em;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    color: var(--menuText);\r\n    margin-right: 10px;\r\n    font-size: 26px;\r\n  }\r\n  p {\r\n    color: var(--menuText);\r\n    text-decoration: none;\r\n    font-size: 23px;\r\n    letter-spacing: 5px;\r\n  }\r\n  :hover {\r\n    background-color: var(--menuText_Hover);\r\n    p {\r\n      color: var(#fff);\r\n    }\r\n  }\r\n\r\n  // 螢幕寬度小於768px時\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    margin: 0 0;\r\n    padding: 0 0;\r\n    svg {\r\n      margin: 0px 0px;\r\n      padding: 0 16px;\r\n      font-size: 35px;\r\n    }\r\n    p {\r\n      display: none;\r\n    }\r\n    :hover {\r\n      svg {\r\n        font-size: 38px;\r\n      }\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    margin: 0px 10px 0px 15px;\r\n    padding: 25px;\r\n    /* background-color: orange; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    svg {\r\n      font-size: 28px;\r\n    }\r\n    p {\r\n      display: block;\r\n      letter-spacing: 10px;\r\n      font-size: 25px;\r\n      width: 50%;\r\n    }\r\n    :hover {\r\n      border-radius: 10px;\r\n      svg {\r\n        font-size: 30px;\r\n      }\r\n      p {\r\n        font-size: 26px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import type { RootState, AppDispatch } from \"./store\";\r\n// hooks\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as hook_useDispatch,\r\n  useSelector as hook_useSelector,\r\n} from \"react-redux\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n\r\n// 不要直接用store.getState(),useSelector會在你store發生改變時重新渲染，省掉\"訂閱\"部分\r\nexport const useSelector: TypedUseSelectorHook<RootState> = hook_useSelector;\r\n\r\n// redux會自動幫我們創建context\r\nexport const useDispatch = () => hook_useDispatch<AppDispatch>();\r\n\r\n","import {\r\n  ChannelProps,\r\n  ChatboxIframe,\r\n  IframeProps,\r\n  IframeSizeProps,\r\n  PlayerIframe,\r\n  TheaterElement,\r\n} from \"../../app/types\";\r\n\r\nexport const createTheaterElement = (\r\n  ch: ChannelProps,\r\n  options: { checked: boolean }\r\n): TheaterElement => {\r\n  const { cid, cname, avatar, streamurl, thumbnail, method } = ch;\r\n  const { checked } = options;\r\n  return {\r\n    cid,\r\n    cname,\r\n    avatar,\r\n    streamurl,\r\n    preview: thumbnail,\r\n    method,\r\n    checked,\r\n  };\r\n};\r\n\r\nconst getPlayerSrc = (\r\n  method: string,\r\n  streamurl: string,\r\n  cname: string\r\n): string => {\r\n  let src = \"\";\r\n  switch (method) {\r\n    case \"youtube\":\r\n      let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n      let vedioid = sub ? sub[1] : \"\";\r\n      src = `//www.youtube.com/embed/${vedioid}?enablejsapi=1&origin=localhost&widgetid=1`;\r\n      break;\r\n    case \"twitch\":\r\n      src = `//player.twitch.tv?allowfullscreen=false&channel=${cname}&parent=localhost&muted=false&autoplay=false`;\r\n      break;\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n  return src;\r\n};\r\n\r\nconst getChatboxSrc = (\r\n  method: string,\r\n  streamurl: string,\r\n  cname: string\r\n): string => {\r\n  let src = \"\";\r\n  switch (method) {\r\n    case \"youtube\":\r\n      let sub = streamurl.match(/https?:\\/\\/www.youtube.com\\/watch\\?v=(\\S*)/);\r\n      let vedioid = sub ? sub[1] : \"\";\r\n      src = `//www.youtube.com/live_chat?v=${vedioid}&is_popout=1&embed_domain=localhost&dark_theme=1`;\r\n      break;\r\n    case \"twitch\":\r\n      src = `//www.twitch.tv/embed/${cname}/chat?darkpopout=&secret=safe&parent=localhost`;\r\n      break;\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n  return src;\r\n};\r\n\r\nexport const convertToPlayerIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const convertToChatboxIframe = (\r\n  ch: ChannelProps,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, thumbnail, method, streamurl } = ch;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview: thumbnail,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nexport const createPlayerIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number }\r\n): PlayerIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getPlayerSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const createChatboxIframe = (\r\n  item: TheaterElement,\r\n  options: { ratio?: number; w: number; h: number; isEnable: boolean }\r\n): ChatboxIframe => {\r\n  const { cid, cname, avatar, preview, method, streamurl } = item;\r\n  const { ratio, w, h, isEnable } = options;\r\n\r\n  return {\r\n    cid,\r\n    streamurl,\r\n    src: getChatboxSrc(method, streamurl, cname),\r\n    cname,\r\n    avatar,\r\n    preview,\r\n    method,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n    isEnable,\r\n  };\r\n};\r\n\r\nexport const getListAppendIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  newItem: T\r\n): T[] => {\r\n  const newlist = !list\r\n    ? [newItem]\r\n    : list.filter((o) => o.cid !== newItem.cid).concat(newItem);\r\n\r\n  return newlist;\r\n};\r\n\r\nexport const getListRemoveIframe = <T extends IframeProps>(\r\n  list: T[],\r\n  cid: string\r\n): T[] => {\r\n  const newlist = !list ? [] : list.filter((o) => o.cid !== cid);\r\n\r\n  return newlist;\r\n};\r\n\r\nexport const setIframeSize = <T extends {}>(\r\n  item: T,\r\n  options: { ratio?: number; w: number; h: number }\r\n): T => {\r\n  const { ratio, w, h } = options;\r\n  return {\r\n    ...item,\r\n    ratio: ratio || 0.5625,\r\n    w,\r\n    h,\r\n  };\r\n};\r\n\r\nexport const calcNewIframeSize = (\r\n  cW: number,\r\n  cH: number,\r\n  ratio: number,\r\n  size: number\r\n): IframeSizeProps => {\r\n  let maxArea = 0;\r\n  let col = 0;\r\n  let row = 0;\r\n  let w = 0;\r\n  let h = 0;\r\n\r\n  for (let i = 1; i < size + 1; i++) {\r\n    const curRow = Math.ceil(size / i);\r\n    // 期待的均分高度為  (cW / i) * Ratio ;\r\n    // 實際允許高度上限  cH / curRow) ;\r\n    // 合理高度範圍勢必介於 [期待的均分高度為, 實際允許高度上限] 這兩者之間\r\n    const gridW = cW / i;\r\n    const gridH = gridW * ratio;\r\n    let curH = Math.min(gridH, cH / curRow);\r\n    // 高度決定後，便可直接決定出寬度。\r\n    let curW = curH * (1 / ratio);\r\n\r\n    const curArea = curW * curH;\r\n    if (curArea > maxArea) {\r\n      maxArea = curArea;\r\n      col = i;\r\n      row = curRow;\r\n      w = curW;\r\n      h = curH;\r\n    }\r\n    console.log(\r\n      `[TheaterIframesViewer] \\n col: ${i}, row: ${curRow}, w: ${curW}, h: ${curH}, area: ${curArea}, max: ${maxArea}`\r\n    );\r\n  }\r\n\r\n  return { col, row, w, h };\r\n};\r\n\r\ntype IframeSizePropsV2 = {\r\n  col: number;\r\n  row: number;\r\n  pw: number;\r\n  ph: number;\r\n  cw: number;\r\n  ch: number;\r\n  flexType: string;\r\n};\r\n\r\nconst MIN_CHATBOX_WIDTH = 320;\r\nconst MIN_CHATBOX_HEIGHT = 320;\r\n\r\nconst getResult = (\r\n  col: number,\r\n  row: number,\r\n  cw: number,\r\n  ch: number,\r\n  pw: number,\r\n  ph: number,\r\n  flexType: string\r\n): IframeSizePropsV2 => {\r\n  return {\r\n    col,\r\n    row,\r\n    cw,\r\n    ch,\r\n    pw,\r\n    ph,\r\n    flexType,\r\n  };\r\n};\r\n\r\nexport const calcNewIframeSizeV2 = (\r\n  cW: number,\r\n  cH: number,\r\n  ratio: number,\r\n  size: number\r\n): IframeSizePropsV2 => {\r\n  let result: IframeSizePropsV2 = {\r\n    col: 0,\r\n    row: 0,\r\n    cw: 0,\r\n    ch: 0,\r\n    pw: 0,\r\n    ph: 0,\r\n    flexType: \"column\",\r\n  };\r\n\r\n  let maxArea = 0;\r\n\r\n  for (let i = 1; i < size + 1; i++) {\r\n    const curRow = Math.ceil(size / i);\r\n\r\n    const gridW = cW / i;\r\n    const gridH = cH / curRow;\r\n    var curPlayW = 0;\r\n    var curPlayH = 0;\r\n    var curChatW = 0;\r\n    var curChatH = 0;\r\n\r\n    // TYPE flex-direction: column\r\n    if (gridH > MIN_CHATBOX_HEIGHT) {\r\n      curChatW = gridW;\r\n      curPlayH = Math.min(gridW * ratio, gridH - MIN_CHATBOX_HEIGHT);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n\r\n      curChatH = gridH - curPlayH;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // TYPE flex-direction: row\r\n    if (gridW > MIN_CHATBOX_WIDTH) {\r\n      curChatH = gridH;\r\n      curPlayW = Math.min(gridH * (1 / ratio), gridW - MIN_CHATBOX_WIDTH);\r\n      curPlayH = curPlayW * ratio;\r\n\r\n      curChatW = gridW - curPlayW;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"row\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[row] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n\r\n    // neither\r\n    if (gridH <= MIN_CHATBOX_HEIGHT && gridW <= MIN_CHATBOX_WIDTH) {\r\n      curPlayH = Math.min(gridW * ratio, gridH);\r\n      curPlayW = curPlayH * (1 / ratio);\r\n      curChatW = 0;\r\n      curChatH = 0;\r\n\r\n      let area = curPlayH * curPlayW;\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        result = getResult(\r\n          i,\r\n          curRow,\r\n          curChatW,\r\n          curChatH,\r\n          curPlayW,\r\n          curPlayH,\r\n          \"column\"\r\n        );\r\n      }\r\n      console.log(\r\n        `[column] \\n col: ${i}, row: ${curRow}, pw: ${curPlayW}, ph: ${curPlayH}, cw: ${curChatW}, ch: ${curChatH},  area: ${area}, max: ${maxArea}`\r\n      );\r\n    }\r\n  }\r\n\r\n  return { ...result };\r\n};\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { history } from \"../..\";\r\nimport { RootState } from \"../../app/store\";\r\nimport {\r\n  ChannelCardProps,\r\n  ChannelProps,\r\n  ChatboxIframe,\r\n  PlayerIframe,\r\n  TheaterElement,\r\n  TheaterState,\r\n} from \"../../app/types\";\r\nimport {\r\n  calcNewIframeSizeV2,\r\n  convertToChatboxIframe,\r\n  convertToPlayerIframe,\r\n  createChatboxIframe,\r\n  createPlayerIframe,\r\n  createTheaterElement,\r\n  getListAppendIframe,\r\n  getListRemoveIframe,\r\n  setIframeSize,\r\n} from \"./share\";\r\n\r\nconst initialState: TheaterState = {\r\n  elements: [],\r\n  playlist: [],\r\n  chatlist: [],\r\n  slider: {\r\n    sliderIndex: 0,\r\n    isTakenOverAnim: false,\r\n    isFolded: false,\r\n  },\r\n  gridlayout: {\r\n    flexType: \"column\",\r\n    ratio: 0.5625,\r\n    clientWidth: 0,\r\n    clientHeight: 0,\r\n    col: 0,\r\n    row: 0,\r\n  },\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"theater\",\r\n  initialState,\r\n  reducers: {\r\n    setElements: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { channels: ChannelProps[] };\r\n      }\r\n    ) => {\r\n      const { channels } = action.payload;\r\n      if (channels.length === 0) {\r\n        state.elements = [];\r\n        state.slider.sliderIndex = 0;\r\n      }\r\n\r\n      const mp = new Map<string, boolean>();\r\n      state.playlist.forEach((p) => mp.set(p.cid, true));\r\n\r\n      // 透過playlist中的元素，對應elements進行修改\r\n      const elements: TheaterElement[] = channels.map((ch, i) => {\r\n        if (mp.get(ch.cid)) {\r\n          return createTheaterElement(ch, { checked: true });\r\n        } else {\r\n          return createTheaterElement(ch, { checked: false });\r\n        }\r\n      });\r\n\r\n      // 獲取新的 elements後，還要指定起始位置\r\n      state.elements = elements;\r\n      state.slider.sliderIndex = 1;\r\n    },\r\n    setSlider: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { next: number; isTakenOverAnim: boolean };\r\n      }\r\n    ) => {\r\n      const { next, isTakenOverAnim } = action.payload;\r\n      console.log(\r\n        `[setSlider] next:${next} , isTakenOverAnim:${isTakenOverAnim}`\r\n      );\r\n      state.slider.sliderIndex = next;\r\n      state.slider.isTakenOverAnim = isTakenOverAnim;\r\n    },\r\n    setSliderFolded: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: boolean;\r\n      }\r\n    ) => {\r\n      state.slider.isFolded = action.payload;\r\n      console.log(`slider isFolded : ${action.payload}`);\r\n    },\r\n    resizeGridLayout: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          clientWidth: number;\r\n          clientHeight: number;\r\n        };\r\n      }\r\n    ) => {\r\n      const { clientWidth, clientHeight } = action.payload;\r\n      const ratio = state.gridlayout.ratio;\r\n      const numOfIframes = state.playlist.length;\r\n      const newIframeSize = calcNewIframeSizeV2(\r\n        clientWidth,\r\n        clientHeight,\r\n        ratio,\r\n        numOfIframes\r\n      );\r\n      const { flexType, pw, ph, cw, ch, col, row } = newIframeSize;\r\n      state.playlist = state.playlist.map((player) =>\r\n        setIframeSize(player, { w: pw, h: ph })\r\n      );\r\n      state.chatlist = state.chatlist.map((chatbox) =>\r\n        setIframeSize(chatbox, { w: cw, h: ch })\r\n      );\r\n      state.gridlayout = {\r\n        flexType,\r\n        ratio,\r\n        clientWidth,\r\n        clientHeight,\r\n        col,\r\n        row,\r\n      };\r\n    },\r\n    setFromChannel: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { item: ChannelCardProps };\r\n      }\r\n    ) => {\r\n      const { item } = action.payload;\r\n      const newPlayerIframe = convertToPlayerIframe(item, {\r\n        w: 0,\r\n        h: 0,\r\n      });\r\n      const newChatboxIframe = convertToChatboxIframe(item, {\r\n        w: 0,\r\n        h: 0,\r\n        isEnable: item.status === \"live\"\r\n      });\r\n      state.playlist = [newPlayerIframe];\r\n      state.chatlist = [newChatboxIframe];\r\n      history.push({ pathname: \"/theater\" });\r\n    },\r\n    appendIframeToPlaylist: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { item: TheaterElement };\r\n      }\r\n    ) => {\r\n      const { item } = action.payload;\r\n      const newItem: TheaterElement = { ...item, checked: true };\r\n      const newElements: TheaterElement[] = state.elements.map((e) =>\r\n        e.cid === item.cid ? newItem : e\r\n      );\r\n\r\n      const newPlaylist: PlayerIframe[] = getListAppendIframe(\r\n        state.playlist,\r\n        createPlayerIframe(newItem, { w: 0, h: 0 })\r\n      );\r\n\r\n      const newChatlist: ChatboxIframe[] = getListAppendIframe(\r\n        state.chatlist,\r\n        createChatboxIframe(newItem, { w: 0, h: 0, isEnable:true })\r\n      );\r\n\r\n      state.elements = newElements;\r\n      state.playlist = newPlaylist;\r\n      state.chatlist = newChatlist;\r\n    },\r\n    removeIframeFromPlaylist: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { item: TheaterElement };\r\n      }\r\n    ) => {\r\n      const { item } = action.payload;\r\n      const newItem: TheaterElement = { ...item, checked: false };\r\n      const newElements: TheaterElement[] = state.elements.map((e) =>\r\n        e.cid === item.cid ? newItem : e\r\n      );\r\n      state.elements = newElements;\r\n      state.playlist = getListRemoveIframe(state.playlist, item.cid);\r\n      state.chatlist = getListRemoveIframe(state.chatlist, item.cid);\r\n    },\r\n    removeIframeByCid: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { cid: string };\r\n      }\r\n    ) => {\r\n      const { cid } = action.payload;\r\n      state.playlist = getListRemoveIframe(state.playlist, cid);\r\n      state.chatlist = getListRemoveIframe(state.chatlist, cid);\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setElements,\r\n  setSlider,\r\n  setSliderFolded,\r\n  resizeGridLayout,\r\n  setFromChannel,\r\n  appendIframeToPlaylist,\r\n  removeIframeFromPlaylist,\r\n  removeIframeByCid,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const selectTheater = (state: RootState): TheaterState => state.theater;\r\nexport const selectElements = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.elements\r\n);\r\nexport const selectPlaylist = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.playlist\r\n);\r\nexport const selectPlayPairs = createSelector([selectTheater], (theater) => {\r\n  const playlist = theater.playlist;\r\n  const chatlist = theater.chatlist;\r\n  const len = playlist.length;\r\n  const result = [];\r\n  for (let i = 0; i < len; i++) {\r\n    result.push({ player: playlist[i], chatbox: chatlist[i] });\r\n  }\r\n  return result;\r\n});\r\nexport const selectGridLayout = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.gridlayout\r\n);\r\nexport const selectSlider = createSelector(\r\n  [selectTheater],\r\n  (theater) => theater.slider\r\n);\r\nexport const selectNumOfElements = createSelector(\r\n  [selectElements],\r\n  (elements) => elements.length\r\n);\r\nexport const selectSliderElements = createSelector(\r\n  [selectElements],\r\n  (elements) =>\r\n    elements.length > 0\r\n      ? [elements[elements.length - 1], ...elements, elements[0]]\r\n      : []\r\n);\r\n","import { NavItemProps, Switcher } from \"./types\";\r\nimport * as ai from \"react-icons/ai\";\r\n\r\nexport const API_SERVER_URL = \"https://lowkeydd.ddnsking.com\";\r\n// export const API_SERVER_URL = \"http://192.168.50.240:8000\";\r\n\r\nexport const VISITS_DEFAULT_GROUPNAME = \"Favorite\";\r\n\r\nexport const CHANNELS_DEFAULT_GROUPNAME = \"Resident\";\r\n\r\nexport const SwitcherList: Array<Switcher> = [\r\n  { checked: false, htmlFor: \"live\", afterColor: \"#f00\" },\r\n  { checked: false, htmlFor: \"wait\", afterColor: \"#0ff\" },\r\n  { checked: false, htmlFor: \"off\", afterColor: \"#856\" },\r\n];\r\n\r\nexport const NavItemsArray: NavItemProps[] = [\r\n  {\r\n    title: \"瀏覽\",\r\n    path: \"/channels/\",\r\n    icon: <ai.AiOutlineHeart />,\r\n  },\r\n  {\r\n    title: \"影院\",\r\n    path: \"/theater/\",\r\n    icon: <ai.AiOutlineVideoCamera />,\r\n  },\r\n  {\r\n    title: \"會員\",\r\n    path: \"/login/\",\r\n    icon: <ai.AiOutlineUser />,\r\n  },\r\n  // {\r\n  //   title: \"收藏\",\r\n  //   path: \"/visit/\",\r\n  //   icon: <ai.AiOutlineBook />,\r\n  // },\r\n];\r\n","import {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../app/config\";\r\nimport {\r\n  ChannelCardProps,\r\n  ChannelProps,\r\n  FavoredItem,\r\n  VisitItem,\r\n} from \"../../app/types\";\r\n\r\nexport const createChannelCard = (\r\n  ch: ChannelProps,\r\n  group: string,\r\n  heart: boolean,\r\n): ChannelCardProps => {\r\n  // 表示為自動添加的預設名稱\r\n\r\n  return {\r\n    ...ch,\r\n    group,\r\n    heart,\r\n  };\r\n};\r\n\r\nexport const createFavoredItem = (\r\n  card: ChannelCardProps | VisitItem,\r\n  options: { isChanged: boolean; isNewAdded: boolean; isDeleted: boolean }\r\n): FavoredItem => {\r\n  const { isChanged, isNewAdded, isDeleted } = options;\r\n  const { cid, cname, owner, avatar, method, group } = card;\r\n  const groupName =\r\n    group === CHANNELS_DEFAULT_GROUPNAME ? VISITS_DEFAULT_GROUPNAME : group;\r\n  return {\r\n    cid,\r\n    cname,\r\n    owner,\r\n    avatar,\r\n    method,\r\n    group: groupName,\r\n    isChanged,\r\n    isNewAdded,\r\n    isDeleted,\r\n  };\r\n};\r\n\r\nexport const createVisitItem = (\r\n  card: ChannelCardProps | FavoredItem\r\n): VisitItem => {\r\n  const { cid, cname, owner, avatar, method, group } = card;\r\n  const groupName =\r\n    group === CHANNELS_DEFAULT_GROUPNAME ? VISITS_DEFAULT_GROUPNAME : group;\r\n  return {\r\n    cid,\r\n    cname,\r\n    owner,\r\n    avatar,\r\n    method,\r\n    group: groupName,\r\n  };\r\n};\r\n\r\nexport const createVMap = <T extends { cid: string }>(\r\n  list: T[]\r\n): Map<string, T> => {\r\n  const mp = new Map<string, T>();\r\n  list.forEach((o) => {\r\n    mp.set(o.cid, o);\r\n  });\r\n  return mp;\r\n};\r\n\r\nexport const createMap = <T extends { cid: string }>(\r\n  list: T[]\r\n): Map<string, boolean> => {\r\n  const mp = new Map<string, boolean>();\r\n  list.forEach((o) => {\r\n    mp.set(o.cid, true);\r\n  });\r\n  return mp;\r\n};\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../app/config\";\r\nimport { RootState } from \"../../app/store\";\r\nimport {\r\n  ChannelCardProps,\r\n  ChannelProps,\r\n  FavoredItem,\r\n  VisitItem,\r\n  VisitList,\r\n} from \"../../app/types\";\r\nimport { createChannelCard, createFavoredItem, createVisitItem } from \"./share\";\r\n\r\ntype ChannelCardStore = {\r\n  hasFetchChannels: boolean;\r\n  clusters: ChannelCardProps[][];\r\n  group: string[];\r\n  favoredList: FavoredItem[];\r\n  tags: string[];\r\n  current: ChannelCardProps | null;\r\n  isFavoredCardsViewerEnable: boolean;\r\n};\r\n\r\nconst initialState: ChannelCardStore = {\r\n  hasFetchChannels: false,\r\n  clusters: [[]],\r\n  group: [],\r\n  favoredList: [],\r\n  tags: [\"live\"],\r\n  current: null,\r\n  isFavoredCardsViewerEnable: false,\r\n};\r\n\r\nconst setCluster = (\r\n  state: ChannelCardStore,\r\n  channels: ChannelProps[][],\r\n  group: string[]\r\n) => {\r\n  const clusters = channels.map((chgroups, i) =>\r\n    chgroups !== null\r\n      ? chgroups.map((ch) =>\r\n          createChannelCard(\r\n            ch,\r\n            group[i],\r\n            group[i] !== CHANNELS_DEFAULT_GROUPNAME\r\n          )\r\n        )\r\n      : []\r\n  );\r\n  console.log(\"[ChannelCardStore] setCluster\");\r\n  state.clusters = clusters;\r\n  state.hasFetchChannels = true;\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"browser\",\r\n  initialState,\r\n  reducers: {\r\n    setStore: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          channels: ChannelProps[][];\r\n          group: string[];\r\n          list: VisitItem[];\r\n          tags: string[];\r\n        };\r\n      }\r\n    ) => {\r\n      const { channels, group, list, tags } = action.payload;\r\n      state.group = group;\r\n      state.tags = tags[0] === \"all\" ? [\"live\", \"wait\", \"off\"] : tags;\r\n      // state.current = null;\r\n\r\n      // list\r\n      if (list) {\r\n        state.favoredList = list.map((v: VisitItem) =>\r\n          createFavoredItem(v, {\r\n            isChanged: false,\r\n            isNewAdded: false,\r\n            isDeleted: false,\r\n          })\r\n        );\r\n      }\r\n\r\n      // cluster\r\n      setCluster(state, channels, group);\r\n    },\r\n    setChannelCard: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          card: ChannelCardProps;\r\n          options: {\r\n            isChanged: boolean;\r\n            isNewAdded: boolean;\r\n            isDeleted: boolean;\r\n          };\r\n        };\r\n      }\r\n    ) => {\r\n      const { card, options } = action.payload;\r\n      const { isChanged, isNewAdded, isDeleted } = options;\r\n      const prelist = state.favoredList;\r\n\r\n      if (card.heart) {\r\n        state.favoredList = [\r\n          createFavoredItem(card, {\r\n            isChanged,\r\n            isNewAdded,\r\n            isDeleted,\r\n          }),\r\n          ...prelist.filter((p) => p.cid !== card.cid),\r\n        ];\r\n      } else {\r\n        if (isNewAdded) {\r\n          // 對於還不是喜愛的頻道直接移除。\r\n          state.favoredList = [...prelist.filter((p) => p.cid !== card.cid)];\r\n        } else {\r\n          // 對於已經加入喜愛的頻道視為刪除(劃線)。\r\n          const newItem = createFavoredItem(card, {\r\n            isChanged,\r\n            isNewAdded,\r\n            isDeleted: true,\r\n          });\r\n          state.favoredList = prelist.map((p) =>\r\n            p.cid !== newItem.cid ? p : newItem\r\n          );\r\n        }\r\n      }\r\n\r\n      // 產生新的卡片群集\r\n      state.clusters = state.clusters.map((cards: ChannelCardProps[]) =>\r\n        cards.length !== 0\r\n          ? cards.map((ch: ChannelCardProps) =>\r\n              ch.cid !== card.cid ? ch : card\r\n            )\r\n          : []\r\n      );\r\n    },\r\n    setFavoredList: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: {\r\n          group: string[] | null;\r\n          list: FavoredItem[];\r\n        };\r\n      }\r\n    ) => {\r\n      const { group, list } = action.payload;\r\n      if (group !== null) {\r\n        state.group = group;\r\n      }\r\n      state.favoredList = list;\r\n\r\n      // 無法透過新生成的List去推得新的卡片群集；\r\n      // 必須在更新後發送請求，重新獲取新的clusters 和更新後的 List\r\n    },\r\n    setSearchResult: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: { current: ChannelCardProps | null };\r\n      }\r\n    ) => {\r\n      const { current } = action.payload;\r\n      if (current !== null) {\r\n        state.current = current;\r\n\r\n        if (current.heart === true) {\r\n          const newItem = createFavoredItem(\r\n            { ...current, group: VISITS_DEFAULT_GROUPNAME }, //修正為合法的group屬性\r\n            {\r\n              isChanged: false,\r\n              isNewAdded: true,\r\n              isDeleted: false,\r\n            }\r\n          );\r\n          state.favoredList = [newItem, ...state.favoredList];\r\n        } else {\r\n          state.favoredList = state.favoredList.filter(\r\n            (f) => f.cid !== current.cid\r\n          );\r\n        }\r\n      }\r\n    },\r\n    setIsFavoredCardsViewerEnable: (\r\n      state,\r\n      action: {\r\n        type: string;\r\n        payload: boolean | undefined;\r\n      }\r\n    ) => {\r\n      if (action.payload === undefined) {\r\n        state.isFavoredCardsViewerEnable = !state.isFavoredCardsViewerEnable;\r\n      } else {\r\n        state.isFavoredCardsViewerEnable = action.payload;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setStore,\r\n  setChannelCard,\r\n  setFavoredList,\r\n  setSearchResult,\r\n  setIsFavoredCardsViewerEnable,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\nexport const selectChannelCardStore = (state: RootState) =>\r\n  state.channelCardStore;\r\n\r\nexport const selectHasFetchChannels = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.hasFetchChannels\r\n);\r\n\r\nexport const selectChannelsCluster = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.clusters\r\n);\r\n\r\nexport const selectTags = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.tags\r\n);\r\n\r\nexport const selectGroup = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.group\r\n);\r\n\r\nexport const selectFavoredList = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.favoredList\r\n);\r\n\r\nexport const selectCurrent = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.current\r\n);\r\n\r\nexport const selectIsFavoredCardsViewerEnable = createSelector(\r\n  [selectChannelCardStore],\r\n  (store) => store.isFavoredCardsViewerEnable\r\n);\r\n\r\nexport const selectVisitList = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    const newfavoredList = favoredList\r\n      // 刪除\r\n      .filter((f) => !f.isDeleted)\r\n      // 修正群主名稱 Resident => Favorite\r\n      .map((f) =>\r\n        f.group === CHANNELS_DEFAULT_GROUPNAME\r\n          ? { ...f, group: VISITS_DEFAULT_GROUPNAME }\r\n          : f\r\n      );\r\n\r\n    // 刪除多餘沒被使用到的群組名稱\r\n    const mp = new Map<string, boolean>();\r\n    const newGroup: string[] = [];\r\n    newfavoredList.forEach((f: FavoredItem) => {\r\n      if (!mp.has(f.group)) {\r\n        mp.set(f.group, true);\r\n        newGroup.push(f.group);\r\n      }\r\n    });\r\n\r\n    // 轉成VisitItem表單。\r\n    const list: VisitItem[] = newfavoredList.map((f) => createVisitItem(f));\r\n\r\n    // 輸出結果\r\n    const visit: VisitList = {\r\n      list,\r\n      group: newGroup,\r\n    };\r\n    return visit;\r\n  }\r\n);\r\n\r\nexport const selectFavoredCardsList = createSelector(\r\n  [selectGroup, selectFavoredList],\r\n  (group, favoredList) => {\r\n    if (group.length === 0) {\r\n      return [[]];\r\n    }\r\n\r\n    const result: FavoredItem[][] = group.map((x) => []);\r\n    favoredList.forEach((f: FavoredItem) => {\r\n      const index = group.indexOf(f.group);\r\n      result[index].push(f);\r\n    });\r\n\r\n    return result;\r\n  }\r\n);\r\n\r\nexport const selectIsFavoredCardsListChanged = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var isListChanged = false;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isChanged, isNewAdded, isDeleted } = favoredList[i];\r\n      if (isChanged || isNewAdded || isDeleted) {\r\n        isListChanged = true;\r\n        break;\r\n      }\r\n    }\r\n    return isListChanged;\r\n  }\r\n);\r\n\r\nexport const selectNumOfFavoredCards = createSelector(\r\n  [selectFavoredList],\r\n  (favoredList) => {\r\n    var count = 0;\r\n    const len = favoredList.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const { isNewAdded } = favoredList[i];\r\n      if (isNewAdded) {\r\n        count += 1;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n);\r\n\r\n// export const selectFavoredList = createSelector([selectChannelCardStore], (store) => {\r\n//   return store.favoredList;\r\n// });\r\n","import * as ai from \"react-icons/ai\";\r\nimport { ReactElement, useEffect, useRef, useState, Fragment } from \"react\";\r\nimport { useDispatch } from \"../../app/hooks\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { setFromChannel } from \"../theater/slice\";\r\nimport styled from \"styled-components\";\r\nimport { setChannelCard, setSearchResult } from \"./slice\";\r\nimport { CHANNELS_DEFAULT_GROUPNAME } from \"../../app/config\";\r\n\r\nexport function ChannelCard(props: ChannelCardProps) {\r\n  const {\r\n    avatar,\r\n    // cname,\r\n    cid,\r\n    owner,\r\n    status,\r\n    // streamurl,\r\n    // thumbnail,\r\n    title,\r\n    viewcount,\r\n    starttime,\r\n    // method,\r\n    // updatetime,\r\n    group: groupName,\r\n    heart,\r\n  } = props;\r\n  const item = props;\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  // heartTheme\r\n  const heartTheme = getHeartTheme(heart);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEnterTheater = () => {\r\n    // 當點選頻道進入Theater。\r\n    dispatch(setFromChannel({ item }));\r\n  };\r\n\r\n  const onFavoredHeartBtnClick = () => {\r\n    const card: ChannelCardProps = { ...props, heart: !heart };\r\n    if (groupName !== \"Search Result\") {\r\n      dispatch(\r\n        setChannelCard({\r\n          card,\r\n          options: {\r\n            isChanged: false,\r\n            isNewAdded: groupName === CHANNELS_DEFAULT_GROUPNAME,\r\n            isDeleted: false,\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        setSearchResult({\r\n          current: { ...props, heart: !heart },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const parentDom = ref.current;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsVisible(entry.isIntersecting);\r\n    });\r\n    if (parentDom) {\r\n      observer.observe(parentDom);\r\n    }\r\n    return () => {\r\n      if (parentDom) {\r\n        observer.unobserve(parentDom);\r\n      }\r\n      observer.disconnect();\r\n    };\r\n  }, [ref, isVisible]);\r\n\r\n  return (\r\n    <Container ref={ref}>\r\n      {status !== \"failure\" ? (\r\n        <>\r\n          <AvatarBox {...getAvatarStyles(status)}>\r\n            <img src={isVisible ? avatar : undefined} alt={\"avatar_\" + cid} />\r\n            <div>\r\n              <p>{status}</p>\r\n            </div>\r\n          </AvatarBox>\r\n          <FavoredHeartBtn onClick={onFavoredHeartBtnClick} {...heartTheme}>\r\n            {heartTheme.icon}\r\n          </FavoredHeartBtn>\r\n        </>\r\n      ) : (\r\n        <Fragment />\r\n      )}\r\n      <CardBody>\r\n        <PreviewBox onClick={handleEnterTheater}>\r\n          {GetImg(props, isVisible)}\r\n        </PreviewBox>\r\n        <Description>\r\n          <Owner>\r\n            <h1>{owner}</h1>\r\n          </Owner>\r\n          <ChTitle>\r\n            <p>{title}</p>\r\n          </ChTitle>\r\n          <Detail>\r\n            <Left>\r\n              <ai.AiOutlineEye />\r\n              <p>{viewcount}</p>\r\n            </Left>\r\n            <Right>\r\n              <ai.AiOutlineCalendar />\r\n              <p>{status === \"live\" ? \"熱映中\" : starttime}</p>\r\n            </Right>\r\n          </Detail>\r\n        </Description>\r\n      </CardBody>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst GetImg = (current: any, isVisible: boolean): ReactElement =>\r\n  // current === null ? (\r\n  //   <div>\r\n  //     <ai.AiOutlineFundView />\r\n  //     <p>一緒にddしましょう o(*￣▽￣*)ブ</p>\r\n  //   </div>\r\n  // ) :\r\n  current.thumbnail === \"\" ? (\r\n    <div>\r\n      <ai.AiFillFrown />\r\n      <p>獲取頻道訊息發生錯誤</p>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <img\r\n        src={isVisible ? current.thumbnail : undefined}\r\n        alt={\"thumbnail_\" + current.cid}\r\n      />\r\n    </div>\r\n  );\r\n\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --bkgColor: #fff;\r\n\r\n  /* background-color: #999; */\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\ntype AvatarStyle = {\r\n  fontcolor: string;\r\n  fontbgcolor: string;\r\n  bordercolor: string;\r\n};\r\n\r\nconst getAvatarStyles = (status: string): AvatarStyle => {\r\n  switch (status) {\r\n    case \"live\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#ee5253\",\r\n        bordercolor: \"#f00\",\r\n      };\r\n    case \"wait\":\r\n      return {\r\n        fontcolor: \"#fff\",\r\n        fontbgcolor: \"#34afeb\",\r\n        bordercolor: \"#6a97ad\",\r\n      };\r\n    case \"off\":\r\n      return {\r\n        fontcolor: \"#f9fae6\",\r\n        fontbgcolor: \"#616161\",\r\n        bordercolor: \"#616161\",\r\n      };\r\n    default:\r\n      return {\r\n        fontcolor: \"#f0d8e2\",\r\n        fontbgcolor: \"#cb4ede\",\r\n        bordercolor: \"#6c3075\",\r\n      };\r\n  }\r\n};\r\n\r\nconst AvatarBox = styled.div<AvatarStyle>`\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: none;\r\n  pointer-events: none;\r\n  img {\r\n    width: 4.8em;\r\n    border: 5px solid ${(p) => p.fontbgcolor};\r\n    border-radius: 50%;\r\n  }\r\n  div {\r\n    position: relative;\r\n    background: none;\r\n    top: -12px;\r\n    left: 0;\r\n    width: 100%;\r\n    padding: 3px 0;\r\n    p {\r\n      margin: auto;\r\n      width: 48px;\r\n      padding: 1px 1px;\r\n      color: ${(p) => p.fontcolor};\r\n      background-color: ${(p) => p.fontbgcolor};\r\n      text-align: center;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n`;\r\n\r\ntype HeartThemeType = {\r\n  color: string;\r\n  hoverColor: string;\r\n  icon: any;\r\n};\r\nexport const getHeartTheme = (type: boolean): HeartThemeType => {\r\n  switch (type) {\r\n    case true:\r\n      return {\r\n        color: \"#ee5253\",\r\n        hoverColor: \"#ee5253\",\r\n        icon: <ai.AiFillHeart />,\r\n      };\r\n\r\n    case false:\r\n      return {\r\n        color: \"#aaa\",\r\n        hoverColor: \"#ee5253\",\r\n        icon: <ai.AiOutlineHeart />,\r\n      };\r\n    default:\r\n      throw new Error(\"沒有定義得型態錯誤!\");\r\n  }\r\n};\r\n\r\nconst FavoredHeartBtn = styled.div<HeartThemeType>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  right: 0.5em;\r\n  top: 2.5em;\r\n  z-index: 1;\r\n\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: none;\r\n\r\n  svg {\r\n    font-size: 35px;\r\n    color: ${(p) => p.color};\r\n    transition: 0.1s;\r\n  }\r\n\r\n  :hover {\r\n    svg {\r\n      font-size: 38px;\r\n      color: ${(p) => p.hoverColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  background-color: var(--navColor);\r\n  border-radius: 1.2em;\r\n  margin: 10px 10px;\r\n`;\r\n\r\nconst PreviewBox = styled.a`\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  //點擊後將跳轉到Theater\r\n  cursor: pointer;\r\n\r\n  div {\r\n    background-color: #000;\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 15rem;\r\n    // 透過hidden把超出範圍的圖片直接剪裁掉\r\n    overflow: hidden;\r\n    border-radius: 1.2em;\r\n\r\n    color: var(--toogleColor);\r\n\r\n    // 頻道正確顯示時\r\n    img {\r\n      width: 99.9%;\r\n      border-radius: 6px;\r\n    }\r\n\r\n    // 錯誤提示訊息\r\n    svg {\r\n      margin: 0 0 10px 0;\r\n      font-size: 150px;\r\n    }\r\n    p {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  /* background-color: royalblue; */\r\n\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 6px auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Owner = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  margin: 0 0 10px;\r\n  height: 56px;\r\n  border-bottom: 1px solid silver;\r\n\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  h1 {\r\n    font-size: 26px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n    letter-spacing: 5px;\r\n  }\r\n`;\r\n\r\nconst ChTitle = styled.div`\r\n  /* background-color: royalblue; */\r\n  width: 100%;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  p {\r\n    /* background-color: royalblue; */\r\n    font-size: 16px;\r\n    line-height: 25px;\r\n    padding: 0 20px;\r\n    height: 50px;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n\r\nconst Detail = styled.div`\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  div {\r\n    height: 40px;\r\n    flex: 1;\r\n    background-color: var(--toogleColor);\r\n    padding: 5px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  margin: 0 2px 0 5px;\r\n  border-radius: 0 0 0 15px;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    letter-spacing: 1px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div`\r\n  margin: 0 5px 0 2px;\r\n  border-radius: 0 0 15px 0;\r\n\r\n  svg {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n\r\n  p {\r\n    letter-spacing: 1px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  groupName: string;\r\n  fontsize: string;\r\n  lineColor?: string;\r\n  bkgColor?: string;\r\n};\r\n\r\nexport default function GroupLine(props: Props) {\r\n  const { groupName } = props;\r\n  return (\r\n    <Container {...props}>\r\n      <span>{groupName}</span>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.h1<Props>`\r\n  --lineColor: ${(p) => p.lineColor || `#000`};\r\n  --bkgColor: ${(p) => p.bkgColor || `#fff`};\r\n\r\n  margin: 50px 0 20px 0;\r\n  position: relative;\r\n  text-align: center;\r\n  font-size: ${(p) => p.fontsize};\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  z-index: 1;\r\n  line-height: 50px;\r\n  ::before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  ::after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 50%;\r\n    height: 2px;\r\n    background-color: var(--lineColor);\r\n    position: absolute;\r\n    right: 0;\r\n    top: 50%;\r\n    z-index: -1;\r\n  }\r\n  span {\r\n    padding: 0 10px;\r\n    color: var(--lineColor);\r\n    background-color: var(--bkgColor);\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { ChannelCard } from \"./ChannelCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\n\r\nexport function ChannelCardsGroup(props: {\r\n  cards: ChannelCardProps[];\r\n  groupName: string;\r\n}) {\r\n  const { cards, groupName } = props;\r\n\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"40px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#fff\"}\r\n      />\r\n      <ChannelGridCantainer key={\"ChannelGridCantainer_\" + groupName}>\r\n        {cards.map((ch: ChannelCardProps) => (\r\n          <ChannelCard\r\n            key={`ChannelCard_${ch.cid}`}\r\n            {...ch}\r\n            group={groupName}\r\n          />\r\n        ))}\r\n      </ChannelGridCantainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ChannelGridCantainer = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #fff;\r\n\r\n  @media (min-width: 360px) {\r\n    display: grid;\r\n    grid-gap: 4px;\r\n    grid-template-columns: repeat(auto-fill, minmax(310px, 1fr));\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n","import { useSelector } from \"../../app/hooks\";\r\nimport { selectChannelCardStore } from \"./slice\";\r\nimport { ChannelCardsGroup } from \"./ChannelCardsGroup\";\r\nimport { ChannelCardProps } from \"../../app/types\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport function ChannelCardsBrowser() {\r\n  const { group, clusters } = useSelector(selectChannelCardStore);\r\n  const view = clusters.filter((cs) => cs !== null);\r\n\r\n  return (\r\n    <>\r\n      {view.map((cards, i) =>\r\n        // 收到的頻道資料會透過group清單，以此查找出其所對應的組別\r\n        GetChannelCardsGroup(cards, group[i])\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst GetChannelCardsGroup = (\r\n  cards: ChannelCardProps[],\r\n  groupName: string\r\n): JSX.Element => {\r\n  // groupName =\r\n  //   groupName === VISITS_DEFAULT_GROUPNAME\r\n  //     ? CHANNELS_DEFAULT_GROUPNAME\r\n  //     : groupName;\r\n  console.log(\"GetChannelCardsGroup groupName\", groupName);\r\n  if (cards.length === 0) {\r\n    return <Fragment key={\"ChannelCardsGroup_\" + groupName} />;\r\n  } else {\r\n    return (\r\n      <ChannelCardsGroup\r\n        key={\"ChannelCardsGroup_\" + groupName}\r\n        cards={cards}\r\n        groupName={groupName}\r\n      />\r\n    );\r\n  }\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function SearchBox(props: SearchBoxProps) {\r\n  // 取得樣式設定參數\r\n  const { theme } = props;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n  const searchInput = useRef<HTMLInputElement>(null);\r\n\r\n  // 輸入查詢功能\r\n  const handleKeyUp = (e: any) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n\r\n    // 按下enter鍵，提交數據\r\n    commit();\r\n  };\r\n\r\n  const commit = () => {\r\n    if (searchInput.current != null) {\r\n      props.onSubmit(searchInput.current.value);\r\n    } else {\r\n      console.error(\"searchInput 不存在\");\r\n    }\r\n  };\r\n\r\n  const onChange = () => {\r\n    if (searchInput.current && searchInput.current.value !== \"\") {\r\n      setIsEnable(true);\r\n    } else {\r\n      setIsEnable(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container {...theme} isEnable={isEnable}>\r\n      <input\r\n        onChange={onChange}\r\n        onKeyUp={handleKeyUp}\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n        placeholder=\"請輸入一些關鍵字來獲取喜歡的頻道吧 (´▽`ʃ❤ƪ)\"\r\n        ref={searchInput}\r\n      />\r\n      <button onClick={commit}>\r\n        <ai.AiOutlineSearch style={{ fontSize: \"1.5rem\" }} />\r\n      </button>\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SearchBoxProps = {\r\n  theme?: SearchBoxThemeProps;\r\n  onSubmit: (inputValue: string) => void;\r\n};\r\n\r\ntype SearchBoxThemeProps = {\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n};\r\n\r\nexport const Container = styled.div<{\r\n  iconColor?: string;\r\n  focusColor?: string;\r\n  isEnable: boolean;\r\n}>`\r\n  --height: 2.4rem;\r\n  --width: 2.4rem;\r\n  --bgColor: #2f3640;\r\n  --iconColor: ${(props) => props.iconColor || \"#e84118\"};\r\n  --focusColor: ${(props) => props.focusColor || \"#fff\"};\r\n  background: var(--bgColor);\r\n  width: ${(p) => (p.isEnable ? `100%` : `var(--width)`)};\r\n  height: var(--height);\r\n  border-radius: var(--height);\r\n  padding: calc(var(--height) / 4);\r\n  transition: width 0.4s;\r\n\r\n  input {\r\n    border: none;\r\n    background: none;\r\n    outline: none;\r\n    float: left;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    line-height: var(--height);\r\n    border-radius: var(--height);\r\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n    padding: ${(p) => (p.isEnable ? `0 1rem` : `0px`)};\r\n    width: ${(p) => (p.isEnable ? `80%` : `0%`)};\r\n    transition: all 0.4s;\r\n  }\r\n\r\n  button {\r\n    color: var(--iconColor);\r\n    float: right;\r\n    width: var(--width);\r\n    height: var(--height);\r\n    border-radius: 50%;\r\n    background-color: ${(p) =>\r\n    p.isEnable ? `var(--focusColor)` : `var(--bgColor)`};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    :hover{\r\n\r\n    }\r\n  }\r\n\r\n  :focus-within {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    width: 100%;\r\n    input {\r\n      padding: 0 1rem;\r\n      width: 80%;\r\n    }\r\n    button {\r\n      background-color: var(--focusColor);\r\n    }\r\n  }\r\n`;\r\n\r\n// const SearchInput = styled.input`\r\n//     border: none;\r\n//     background: none;\r\n//     outline: none;\r\n//     float: left;\r\n//     color: #fff;\r\n//     font-size: 16px;\r\n//     line-height: var(--height);\r\n//     border-radius: var(--height);\r\n//     box-shadow: 0 0 10px rgba(255, 255, 255, 0.25);\r\n//     padding: 0px;\r\n//     width: 0%;\r\n//     transition: all 0.4s;\r\n// `;\r\n\r\n// const SearchButton = styled.a`\r\n//   color: var(--iconColor);\r\n//   float: right;\r\n//   width: var(--width);\r\n//   height: var(--height);\r\n//   border-radius: 50%;\r\n//   background-color: var(--bgColor);\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n// `;\r\n","import axios from \"axios\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { ChannelProps, VisitItem } from \"../../../app/types\";\r\nimport { setStore } from \"../slice\";\r\n\r\nexport const reqFetchChannels =\r\n  (username: string, ssid: string, tags: string[]) => (dispatch: any) => {\r\n    // 避免tags為空\r\n    if (tags.length === 0) {\r\n      console.error(\"tags不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    // 搜尋內容為空時會被撤回\r\n    if (tags[0] === \"\") {\r\n      console.error(\"搜尋內容不可為空，此動作已被撤回\");\r\n      return;\r\n    }\r\n\r\n    const request = new FormData();\r\n    request.append(\"username\", username);\r\n    request.append(\"ssid\", ssid);\r\n    request.append(\"tags\", JSON.stringify(tags));\r\n\r\n    console.log(\"getLetsddV2Channels, tags: \", [tags]);\r\n    axios.post(`${API_SERVER_URL}/letsdd/v2`, request).then(\r\n      (response) => {\r\n        console.log(\"成功了, 回應如下:\\n\", response.data);\r\n        const channels: ChannelProps[][] = response.data[\"channels\"];\r\n        const group: string[] = response.data[\"group\"];\r\n        const list: VisitItem[] = response.data[\"list\"];\r\n \r\n\r\n        // 檢驗收到的資料，如果沒有傳送AUTH或驗證失敗，會收到空的group清單。\r\n\r\n        if (group.length === 0 && channels.length === 1) {\r\n          // 使用預設的群組名稱為此頻道來命名。\r\n          dispatch(\r\n            setStore({\r\n              channels: [[], ...channels],\r\n              group: [VISITS_DEFAULT_GROUPNAME, CHANNELS_DEFAULT_GROUPNAME],\r\n              tags,\r\n              list,\r\n            })\r\n          );\r\n        } else {\r\n          // 使用收到的group清單。\r\n          dispatch(\r\n            setStore({\r\n              channels,\r\n              group: group.concat(CHANNELS_DEFAULT_GROUPNAME),\r\n              tags,\r\n              list,\r\n            })\r\n          );\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", error);\r\n      }\r\n    );\r\n  };\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { VisitList } from \"../../../app/types\";\r\nimport { reqFetchChannels } from \"./reqFetchChannels\";\r\n\r\nexport const reqUpdateVisit =\r\n  (username: string, ssid: string, visit: VisitList, tags: string[]) =>\r\n  (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    postform.append(\"visit\", JSON.stringify({ ...visit }));\r\n    axios.post(`${API_SERVER_URL}/visit/update`, postform).then(\r\n      (resp) => {\r\n        console.log(\"更新VisitList, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        // const visit: VisitList = resp.data[\"visit\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          console.log(\"更新VisitList成功了, msg:\\n\", msg);\r\n          // const newList = visit.list || [];\r\n          // const newGroup = visit.group || [];\r\n        } else {\r\n          console.log(\"更新VisitList失敗了, msg:\\n\", msg);\r\n        }\r\n        setTimeout(() =>\r\n          (function (username, ssid, tags) {\r\n            dispatch(reqFetchChannels(username, ssid, tags));\r\n            history.push({ pathname: \"/channels/\" });\r\n          })(username, ssid, tags)\r\n        );\r\n      },\r\n      (err) => {\r\n        console.log(\"更新VisitList失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { UserLoginResponse, UserSession, UserState } from \"../../app/types\";\r\n\r\nconst setSession = (state: UserState, session: UserSession) => {\r\n  const { username, ssid, expiration } = session;\r\n  state.username = username;\r\n  state.ssid = ssid;\r\n  setCookie(ssid, username, expiration);\r\n};\r\n\r\nconst initialState: UserState = {\r\n  username: getCookie(\"username\"),\r\n  ssid: getCookie(\"ssid\"),\r\n  msg: \"\",\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    setUserLogin: (\r\n      state,\r\n      action: { type: string; payload: UserLoginResponse }\r\n    ) => {\r\n      const { username, ssid, expiration, msg } = action.payload;\r\n      setSession(state, { username, ssid, expiration });\r\n      state.msg = msg;\r\n    },\r\n    setUserRegiser: (\r\n      state,\r\n      action: { type: string; payload: UserLoginResponse }\r\n    ) => {\r\n      const { username, ssid, expiration, msg } = action.payload;\r\n      setSession(state, { username, ssid, expiration });\r\n      state.msg = msg;\r\n    },\r\n    setMsg: (state, action: { type: string; payload: string }) => {\r\n      state.msg = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUserLogin, setUserRegiser, setMsg } = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// expiration 會乘上1000倍，所以單位是秒\r\nfunction setCookie(ssid: string, username: string, expiration: number) {\r\n  var expires = new Date(Date.now() + expiration * 1000).toUTCString();\r\n  document.cookie = `ssid=${ssid}; expires=${expires}; path=/`;\r\n  document.cookie = `username=${username}; expires=${expires}; path=/`;\r\n}\r\n\r\nfunction getCookie(c_name: string): string {\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + \"=\");\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(\";\", c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport const selectUser = (state: RootState) => state.user;\r\nexport const selectMsg = createSelector([selectUser], (user) => {\r\n  return user.msg;\r\n});\r\n","import SearchBox from \"../../components/SearchBox\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { reqFetchChannels } from \"./api\";\r\nimport { reqSearchChannel } from \"./api/reqSearchChannel\";\r\nimport { selectUser } from \"../user/slice\";\r\n\r\nexport function ChannelSearch() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (keyword: string) => {\r\n    if (keyword === \"\") return\r\n    if (\r\n      keyword === \"all\" ||\r\n      keyword === \"live\" ||\r\n      keyword === \"wait\" ||\r\n      keyword === \"off\" ||\r\n      keyword === \"failure\"\r\n    ) {\r\n      dispatch(reqFetchChannels(username, ssid, [keyword]));\r\n    }else{\r\n      dispatch(reqSearchChannel(keyword))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchBox\r\n      onSubmit={onSubmit}\r\n      theme={{ focusColor: \"#1985a1\", iconColor: \"#c5c3c6\" }}\r\n    />\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { ChannelProps} from \"../../../app/types\";\r\nimport { createChannelCard } from \"../share\";\r\nimport { setSearchResult } from \"../slice\";\r\n\r\nexport const reqSearchChannel = (url: string) => (dispatch: any) => {\r\n  const postform = new FormData();\r\n  postform.append(\"url\", url);\r\n  axios.post(`${API_SERVER_URL}/channels/search`, postform).then(\r\n    (resp) => {\r\n      console.log(\"[ChanelSearch]成功了, 回應如下:\\n\", resp.data);\r\n      const code: string = resp.data[\"code\"];\r\n      const ch: ChannelProps = resp.data[\"channels\"][0];\r\n\r\n      switch (code) {\r\n        case \"success\":\r\n          console.log(`成功獲取頻道 ${ch.cname} \\n`);\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(ch, \"Search Result\", false),\r\n            })\r\n          );\r\n          break;\r\n        case \"failure\":\r\n          console.log(\r\n            `獲取頻道 ${ch.cname} 失敗，請確認該頻道是否已經沒有內容或受到閱覽限制\\n`\r\n          );\r\n\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(ch, \"Search Failed\", false),\r\n            })\r\n          );\r\n          break;\r\n        default:\r\n          console.log(\"作為搜尋頻道的連結格式有誤，請參考以下: \\n\");\r\n          console.log(\"Youtube : https://www.youtube.com/channel/xxxxxxx\\n\");\r\n          console.log(\"twitch  : https://www.twitch.tv/xxxxxx\\n\");\r\n          dispatch(\r\n            setSearchResult({\r\n              current: createChannelCard(ch, \"Search Result\", false),\r\n            })\r\n          );\r\n          break;\r\n      }\r\n    },\r\n    (err) => {\r\n      console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n    }\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default function SwitchBtn(props: SwitchButtonProps) {\r\n  const { checked, htmlFor, theme } = props;\r\n\r\n  const handleClick = () => {\r\n    props.handleSwitchClick({ tag: htmlFor, isChecked: !checked });\r\n  };\r\n  \r\n  return (\r\n    <Container {...theme}>\r\n      <HiddenCheckedInput\r\n        type=\"checkbox\"\r\n        id={htmlFor || \"\"}\r\n        onClick={handleClick}\r\n      />\r\n      <ToogleFill checked={checked} />\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype SwitchButtonProps = {\r\n  htmlFor: string;\r\n  checked: boolean;\r\n  theme?: SwitchButtonThemeProps;\r\n  handleSwitchClick: (action: { tag: string; isChecked: boolean }) => void;\r\n};\r\n\r\ntype SwitchButtonThemeProps = {\r\n  beforeColor?: string;\r\n  afterColor?: string;\r\n  ballColor?: string;\r\n};\r\n\r\nconst Container = styled.label<SwitchButtonThemeProps>`\r\n  --width: 32px;\r\n  --height: calc(var(--width) / 2);\r\n  --radius: calc(var(--height) / 2);\r\n  --beforeColor: ${(props) => props.beforeColor || \"#ddd\"};\r\n  --afterColor: ${(props) => props.afterColor || \"#34deeb\"};\r\n  --ballColor: ${(props) => props.ballColor || \"#fff\"};\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ToogleFill = styled.div<{ checked: boolean }>`\r\n  /* 底色 */\r\n  position: relative;\r\n  width: var(--width);\r\n  height: var(--height);\r\n  border-radius: var(--radius);\r\n  background: ${(props) =>\r\n    props.checked ? `var(--afterColor)` : `var(--beforeColor)`};\r\n  transition: background 0.2s;\r\n\r\n  /* 球球與陰影效果 */\r\n  ::after {\r\n    /* 透過after實現了相對內部移動的效果 */\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: var(--height);\r\n    width: var(--height);\r\n    background: var(--ballColor);\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\r\n    border-radius: var(--radius);\r\n    transform: ${(props) =>\r\n      props.checked ? `translateX(110%)` : `translateX(0%)`};\r\n    transition: transform 0.5s;\r\n  }\r\n`;\r\n\r\nconst HiddenCheckedInput = styled.input`\r\n  display: none;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport SwitchBtn from \"../../components/SwitchBtn\";\r\nimport { SwitcherList } from \"../../app/config\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { selectUser } from \"../user/slice\";\r\nimport { selectTags } from \"./slice\";\r\nimport { reqFetchChannels } from \"./api\";\r\n\r\nexport function ChannelTagsSwitchers() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const dispatch = useDispatch();\r\n  console.log({ tags });\r\n\r\n  const handleSwitchClick = (action: { tag: string; isChecked: boolean }) => {\r\n    const { tag, isChecked } = action;\r\n    if (isChecked) {\r\n      if (!tags.includes(tag)) {\r\n        dispatch(reqFetchChannels(username, ssid, [...tags, tag]));\r\n      }\r\n    } else {\r\n      const newtags = tags.filter((_tag) => _tag !== tag);\r\n      dispatch(reqFetchChannels(username, ssid, newtags));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {SwitcherList.map((tag, _) => {\r\n        const { htmlFor, afterColor } = tag;\r\n        const checked = tags.indexOf(htmlFor) > -1;\r\n        return (\r\n          <SwitchBtnBox key={\"SwitchBtnBox_\" + htmlFor}>\r\n            <p>{htmlFor}</p>\r\n            <SwitchBtn\r\n              htmlFor={htmlFor}\r\n              checked={checked}\r\n              theme={{ afterColor }}\r\n              handleSwitchClick={handleSwitchClick}\r\n            />\r\n          </SwitchBtnBox>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst SwitchBtnBox = styled.div`\r\n  margin: 0 0.5rem;\r\n  height: 2.4rem;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  p {\r\n    margin-right: 6px;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    color: #eee;\r\n  }\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { setFavoredList, selectChannelCardStore } from \"./slice\";\r\n\r\nexport function FavoredCard(props: FavoredItem) {\r\n  const {\r\n    cid: Cid,\r\n    group: groupName,\r\n    owner,\r\n    cname,\r\n    avatar,\r\n    isDeleted,\r\n    isNewAdded,\r\n  } = props;\r\n  const { favoredList: list, group } = useSelector(selectChannelCardStore);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getEditedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.filter(\r\n      (item: FavoredItem) => item.cid !== newItem.cid\r\n    );\r\n    return [newItem, ...newList];\r\n  };\r\n\r\n  const getDeletedList = (newItem: FavoredItem): FavoredItem[] => {\r\n    const newList = list.map((item: FavoredItem) =>\r\n      item.cid !== newItem.cid ? item : newItem\r\n    );\r\n    return [...newList];\r\n  };\r\n\r\n  const handleGroupEdit = () => {\r\n    // 取得新的狀態\r\n    const newGroupName = window.prompt(\"指定為新的群組? \", groupName);\r\n\r\n    if (newGroupName == null) {\r\n      return;\r\n    }\r\n    if (newGroupName === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n\r\n    // 加入到新的群組\r\n    if (newGroupName !== groupName) {\r\n      // 修改該元素的群組屬性\r\n      const newList: FavoredItem[] = getEditedList({\r\n        ...props,\r\n        isChanged: true, //添加變更紀錄\r\n        group: newGroupName,\r\n      });\r\n\r\n      const newGroup: string[] = [\r\n        newGroupName,\r\n        ...group.filter((g: string) => g !== newGroupName),\r\n      ];\r\n      dispatch(setFavoredList({ group: newGroup, list: newList }));\r\n    }\r\n  };\r\n\r\n  const handleItemEdit = () => {\r\n    var newOwner = window.prompt(\"輸入新的頻道名稱 ? \", owner);\r\n    if (newOwner == null) {\r\n      return;\r\n    }\r\n    if (newOwner === \"\") {\r\n      alert(\"不可以為空白\");\r\n      return;\r\n    }\r\n    const newList = getEditedList({\r\n      ...props,\r\n      isChanged: true, //添加變更紀錄\r\n      owner: newOwner,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  const handleItemDelete = () => {\r\n    var ok = window.confirm(`確定要停止追隨 ${owner} 嗎 ?`);\r\n    if (ok) {\r\n      const newList = getDeletedList({\r\n        ...props,\r\n        isDeleted: true, //添加變更紀錄\r\n        group: groupName,\r\n      });\r\n      dispatch(setFavoredList({ list: newList, group: null }));\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    const newList = getDeletedList({\r\n      ...props,\r\n      isDeleted: false, //添加變更紀錄\r\n      group: groupName,\r\n    });\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Avatar>\r\n        <img src={avatar} alt={`${cname}'s avatar`} />\r\n      </Avatar>\r\n      <OwnerText isDeleted={isDeleted} isNewAdded={isNewAdded}>\r\n        <label htmlFor={Cid}>{owner}</label>\r\n      </OwnerText>\r\n      <ButtonGroup>\r\n        <Button onClick={handleGroupEdit}>\r\n          <ai.AiOutlineGroup />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        <Button onClick={handleItemEdit}>\r\n          <ai.AiOutlineEdit />\r\n          <p>{owner}</p>\r\n        </Button>\r\n        {isDeleted ? (\r\n          <Button onClick={cancelDelete}>\r\n            <ai.AiOutlineRedo />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        ) : (\r\n          <Button onClick={handleItemDelete}>\r\n            <ai.AiTwotoneDelete />\r\n            <p>{owner}</p>\r\n          </Button>\r\n        )}\r\n      </ButtonGroup>\r\n    </Container>\r\n  );\r\n}\r\nconst Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  /* --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n    --toogleColor: #fff;\r\n    --bkgColor: #999; */\r\n\r\n  box-sizing: border-box;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  align-items: center;\r\n  background-color: #c5c3c6;\r\n  padding: 16px;\r\n  margin: 6px auto;\r\n  border-radius: 10px;\r\n\r\n  // 最大寬度\r\n  /* max-width: 480px; */\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  margin-right: 15px;\r\n  /* background-color: var(--btnHoverColor); */\r\n  border-radius: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  pointer-events: none;\r\n\r\n  img {\r\n    min-width: 50px;\r\n    max-width: 100px;\r\n    background-color: #999;\r\n    border-radius: 15px;\r\n    width: 4rem;\r\n    height: 4rem;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst OwnerText = styled.div<{ isDeleted: boolean; isNewAdded: boolean }>`\r\n  width: 100%;\r\n  padding: 0 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: ${(p) => (p.isNewAdded ? `#f00` : p.isDeleted ? `#888` : `#fff`)};\r\n  label {\r\n    text-decoration: ${(p) => (p.isDeleted ? `line-through` : `none`)};\r\n    font-size: 18px;\r\n  }\r\n`;\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Button = styled.div`\r\n  margin-left: 12px;\r\n  padding: 5px 5px;\r\n  cursor: pointer;\r\n  font-size: 25px;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  p {\r\n    display: none;\r\n  }\r\n  :hover {\r\n    color: var(--btnHoverColor);\r\n    background-color: #fff;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { VISITS_DEFAULT_GROUPNAME } from \"../../app/config\";\r\nimport { FavoredItem } from \"../../app/types\";\r\nimport { FavoredCard } from \"./FavoredCard\";\r\nimport GroupLine from \"../../components/GroupLine\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { selectFavoredList, setFavoredList } from \"./slice\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\n\r\nexport function FavoredCardsGroup(props: {\r\n  items: FavoredItem[];\r\n  groupName: string;\r\n}) {\r\n  const groupName = props.groupName || VISITS_DEFAULT_GROUPNAME;\r\n  const favoredlist = useSelector(selectFavoredList);\r\n  const dispatch = useDispatch();\r\n  \r\n  const onDragEnd = (e: any) => {\r\n    const src = e.source.index;\r\n    const dest = e.destination.index;\r\n    if (src === undefined || dest === undefined || src === dest) {\r\n      return;\r\n    }\r\n    console.log(`onDragEnd: src: ${src}, dest: ${dest}`);\r\n    const newList = [...favoredlist]\r\n    // 從src位置刪除1個元素，並返回該刪除元素形成的陣列\r\n    const [deleted] = newList.splice(src, 1); \r\n    // 再將被移出的元素，從新放置到該陣列裡面。\r\n    newList.splice(dest, 0, {...deleted, isChanged:true}); // 表示在dest後，(0)不刪除任何元素，把deleted隨後添加進去。\r\n    dispatch(setFavoredList({ list: newList, group: null }));\r\n  };\r\n  return (\r\n    <>\r\n      <GroupLine\r\n        groupName={groupName}\r\n        fontsize={\"30px\"}\r\n        lineColor={\"rgb(25, 133, 161)\"}\r\n        bkgColor={\"#4c4a46\"}\r\n      />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"favoredlist-dnd\">\r\n          {(provided) => (\r\n            <Content {...provided.droppableProps} ref={provided.innerRef}>\r\n              {props.items.map((item: FavoredItem, i) => (\r\n                <Draggable key={item.cid} draggableId={item.cid} index={i}>\r\n                  {(provided) => (\r\n                    <li\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      ref={provided.innerRef}\r\n                    >\r\n                      <FavoredCard {...item} />\r\n                    </li>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </Content>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Content = styled.ul`\r\n  max-width: 960px;\r\n  width: 99%;\r\n  margin: auto;\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { FavoredItem, VisitList } from \"../../app/types\";\r\nimport { selectUser } from \"../user/slice\";\r\nimport { FavoredCardsGroup } from \"./FavoredCardsGroup\";\r\nimport { Fragment } from \"react\";\r\nimport {\r\n  selectFavoredCardsList,\r\n  selectGroup,\r\n  selectIsFavoredCardsListChanged,\r\n  selectTags,\r\n  selectVisitList,\r\n  setIsFavoredCardsViewerEnable,\r\n} from \"./slice\";\r\nimport { reqUpdateVisit } from \"./api\";\r\nimport { history } from \"../..\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\nexport function FavoredCardsViewer() {\r\n  const { username, ssid } = useSelector(selectUser);\r\n  const isLogin: boolean = username !== \"\";\r\n  const isListChanged: boolean = useSelector(selectIsFavoredCardsListChanged);\r\n  const headerTheme: HeaderThemeType = getHeaderIcon(isLogin, isListChanged);\r\n  const favoredlist: FavoredItem[][] = useSelector(selectFavoredCardsList);\r\n  const group = useSelector(selectGroup);\r\n  const visit: VisitList = useSelector(selectVisitList);\r\n  const tags: string[] = useSelector(selectTags);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onHeaderBtnClick = () => {\r\n    if (!isLogin) {\r\n      history.push({ pathname: \"/login/\" });\r\n    } else if (isListChanged) {\r\n      dispatch(reqUpdateVisit(username, ssid, visit, tags));\r\n    }\r\n    dispatch(setIsFavoredCardsViewerEnable(false));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <ViewerContainer>\r\n      <Header {...headerTheme}>\r\n        <div onClick={onHeaderBtnClick}>\r\n          {headerTheme.icon}\r\n          <p>{headerTheme.text}</p>\r\n        </div>\r\n      </Header>\r\n      <Content>\r\n        {favoredlist.map((items: FavoredItem[], i) => {\r\n          // 驗證groupname\r\n          // 根據分群顯示\r\n          const groupName = group[i];\r\n          return items.length > 0 ? (\r\n            <FavoredCardsGroup\r\n              key={\"GroupVisitItems_\" + groupName}\r\n              items={items}\r\n              groupName={groupName}\r\n            />\r\n          ) : (\r\n            <Fragment key={\"GroupVisitItems_\" + groupName} />\r\n          );\r\n        })}\r\n      </Content>\r\n    </ViewerContainer>\r\n  );\r\n}\r\n\r\nconst ViewerContainer = styled.div`\r\n  --btnTextColor: #fff;\r\n  --btnTextHoverColor: #fff;\r\n  --btnBgColor: rgba(25, 133, 161, 0.5);\r\n  --btnBgHoverColor: rgb(25, 133, 161);\r\n  --groupTextColor: rgb(25, 133, 161);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #4c4a46;\r\n\r\n  position: fixed;\r\n  top: 65px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n  background-color: var(--bkgColor);\r\n  z-index: 7;\r\n  overflow-y: auto;\r\n`;\r\n\r\ntype HeaderThemeType = {\r\n  icon: any;\r\n  text: string;\r\n};\r\nconst getHeaderIcon = (\r\n  isLogin: boolean,\r\n  isChanged: boolean\r\n): HeaderThemeType => {\r\n  // debugger\r\n  if (!isLogin) {\r\n    // login first\r\n    return {\r\n      text: \"請先登入唷o(*￣▽￣*)ブ\",\r\n      icon: <ai.AiOutlineUser />,\r\n    };\r\n  }\r\n  if (isChanged) {\r\n    // should update\r\n    return {\r\n      text: \"上傳檔案\",\r\n      icon: <ai.AiOutlineCloudUpload />,\r\n    };\r\n  } else {\r\n    // colsed\r\n    return {\r\n      text: \"直接關閉\",\r\n      icon: <ai.AiOutlineClose />,\r\n    };\r\n  }\r\n};\r\n\r\nconst Header = styled.div<HeaderThemeType>`\r\n  position: relative;\r\n  background-color: var(--navColor);\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  div {\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 10px 20px 0;\r\n    padding: 15px 0;\r\n    border-radius: 30px;\r\n    font-weight: 700px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: var(--btnTextColor);\r\n    background-color: var(--btnBgColor);\r\n    cursor: pointer;\r\n    border: 2px solid;\r\n    transition: 0.5s;\r\n\r\n    svg {\r\n      font-size: 42px;\r\n      padding-right: 5px;\r\n      transition: 0.2s;\r\n    }\r\n\r\n    p {\r\n      letter-spacing: 5px;\r\n      font-size: 32px;\r\n      transition: 0.2s;\r\n    }\r\n\r\n    :hover {\r\n      color: var(--btnTextHoverColor);\r\n      background-color: var(--btnBgHoverColor);\r\n\r\n      svg {\r\n        font-size: 46px;\r\n      }\r\n\r\n      p {\r\n        font-size: 35px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { AiOutlineBook } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport NavItem  from \"../../components/NavItem\";\r\nimport {\r\n  selectNumOfFavoredCards,\r\n  setIsFavoredCardsViewerEnable,\r\n} from \"./slice\";\r\n\r\ntype Props = {\r\n  showMenu: () => void;\r\n};\r\n\r\nexport function FavoredCardsNavItem(props: Props) {\r\n  const numOfFavored = useSelector(selectNumOfFavoredCards);\r\n  const isVisible = numOfFavored > 0;\r\n  const dispatch = useDispatch();\r\n\r\n  const showMenu = () => {\r\n    // 開關Menu面板(手機模式時)\r\n    props.showMenu();\r\n    // undefined 時為切換\r\n    dispatch(setIsFavoredCardsViewerEnable());\r\n  };\r\n\r\n  return (\r\n    <Collection visible={isVisible}>\r\n      <NavItem\r\n        key={`MenuItem_收藏`}\r\n        title=\"收藏\"\r\n        path=\"\" // 不改變當前的目錄位置。\r\n        icon={<AiOutlineBook />}\r\n        showMenu={showMenu}\r\n      />\r\n      <h1>\r\n        <span>{numOfFavored}</span>\r\n      </h1>\r\n    </Collection>\r\n  );\r\n}\r\n\r\nconst Collection = styled.div<{ visible: boolean }>`\r\n  --display: ${(props) => [props.visible ? `block` : `none`]};\r\n\r\n  display: flex;\r\n  h1 {\r\n    text-align: center;\r\n    line-height: 18px;\r\n    display: var(--display);\r\n    position: absolute;\r\n    color: #fff;\r\n    z-index: 2;\r\n    top: 22px;\r\n    right: 95px;\r\n    font-size: 12px;\r\n  }\r\n  span {\r\n    display: var(--display);\r\n    content: \"\";\r\n    transform: translate(-50%, -50%);\r\n    top: -1px;\r\n    left: 0px;\r\n    width: 16px;\r\n    height: 16px;\r\n    position: absolute;\r\n    color: white;\r\n    background-color: red;\r\n    border-radius: 50%;\r\n    z-index: -1;\r\n  }\r\n  @media screen and (max-width: 768px) and (min-width: 480px) {\r\n    h1 {\r\n      line-height: 18px;\r\n      top: 19px;\r\n      right: 24px;\r\n      font-size: 14px;\r\n    }\r\n    span {\r\n      top: 0px;\r\n      left: 0px;\r\n      width: 18px;\r\n      height: 18px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    div {\r\n      width: 80%;\r\n      p {\r\n        margin: 0px;\r\n      }\r\n    }\r\n    h1 {\r\n      line-height: 16px;\r\n      top: 327px;\r\n      left: 102px;\r\n      font-size: 12px;\r\n    }\r\n    span {\r\n      top: 0px;\r\n      left: 0px;\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n  }\r\n`;\r\n","import * as ai from \"react-icons/ai\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { NavItemProps } from \"../../app/types\";\r\nimport NavItem from \"../NavItem\";\r\nimport { FavoredCardsNavItem } from \"../../features/channelCardStore\";\r\n\r\ntype NavbarProps = {\r\n  items: NavItemProps[];\r\n  onClick: () => void;\r\n};\r\n\r\nexport default function Navbar(props: NavbarProps) {\r\n  const [isEnable, setIsEnable] = useState(false);\r\n\r\n  const showMenu = () => {\r\n    setIsEnable(!isEnable);\r\n    props.onClick()\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Nav>\r\n        <Logo>\r\n          <p>LowkeyDD</p>\r\n        </Logo>\r\n        <Menu isEnable={isEnable}>\r\n          <ToogleNavBkg onClick={showMenu}>\r\n            <div>\r\n              <ai.AiOutlineMenu />\r\n            </div>\r\n          </ToogleNavBkg>\r\n          <ul>\r\n            <ToogleNavBkg onClick={showMenu}>\r\n              <div>\r\n                <ai.AiOutlineClose />\r\n              </div>\r\n            </ToogleNavBkg>\r\n\r\n            {props.items.map((item) => (\r\n              <NavItem\r\n                key={`MenuItem_${item.title}`}\r\n                {...item}\r\n                showMenu={showMenu}\r\n              />\r\n            ))}\r\n\r\n            {/* 額外的 FavoredCardsNav */}\r\n            <FavoredCardsNavItem showMenu={showMenu} />\r\n          </ul>\r\n        </Menu>\r\n      </Nav>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: fixed; //這樣才能讓NAV固定在畫面上\r\n  width: 100%;\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n  --menuBgColor: #4c5c68;\r\n  --menuText: #c5c3c6;\r\n  --menuText_Hover: #1985a1;\r\n  --logoColor: #fff;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  position: relative;\r\n  background-color: var(--navColor);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: relative;\r\n  padding: 0 1rem;\r\n  background: none;\r\n  width: 150px; // 由內部logo字體決定寬度\r\n  height: 65px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  z-index: 1;\r\n  p {\r\n    color: var(--logoColor);\r\n    font-size: 25px;\r\n    letter-spacing: 2px;\r\n  }\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.ul<{ isEnable: boolean }>`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  width: 100%; //剩下的部分\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  ul {\r\n    position: relative;\r\n    /* background-color: #0051ff; */\r\n    width: 100%; //剩下的部分\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  // 螢幕寬度小於480px時\r\n  @media screen and (max-width: 480px) {\r\n    ul {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      background-color: var(--menuBgColor);\r\n      width: 380px;\r\n      height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n      padding: 65px 0 0 0;\r\n      transform: ${(props) =>\r\n        props.isEnable ? `translateX(0%)` : `translateX(-100%)`};\r\n      transition: transform 0.2s ease-in;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToogleNavBkg = styled.div`\r\n  position: absolute;\r\n  background-color: var(--navColor);\r\n  color: var(--toogleColor);\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%; //用它來當作NAV的底層\r\n  height: 65px;\r\n  font-size: 40px;\r\n  div {\r\n    display: none;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    div {\r\n      width: 65px;\r\n      height: 65px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n    div:hover {\r\n      background-color: var(--toogleColor);\r\n      color: var(--logoColor);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"../../app/hooks\";\r\nimport { selectUser } from \"../../features/user/slice\";\r\nimport { Fragment, useLayoutEffect } from \"react\";\r\nimport {\r\n  selectCurrent,\r\n  selectFavoredList,\r\n  selectIsFavoredCardsListChanged,\r\n  selectIsFavoredCardsViewerEnable,\r\n  selectTags,\r\n} from \"../../features/channelCardStore/slice\";\r\nimport {\r\n  reqFetchChannels,\r\n  reqEditVisit,\r\n} from \"../../features/channelCardStore\";\r\nimport {\r\n  ChannelCardsGroup,\r\n  ChannelSearch,\r\n  ChannelTagsSwitchers,\r\n  ChannelCardsBrowser,\r\n} from \"../../features/channelCardStore\";\r\n\r\nexport default function ChannelsStage() {\r\n  const isEnable = useSelector(selectIsFavoredCardsViewerEnable);\r\n  const user = useSelector(selectUser);\r\n  const tags = useSelector(selectTags);\r\n  const isListChanged = useSelector(selectIsFavoredCardsListChanged);\r\n  const favoredList = useSelector(selectFavoredList);\r\n  const dispatch = useDispatch();\r\n\r\n  useLayoutEffect(() => {\r\n    if (isListChanged) {\r\n      const { username, ssid } = user;\r\n      // 透過當前路徑去解析，取得要獲取的資源標籤\r\n      dispatch(reqEditVisit(username, ssid, favoredList, tags));\r\n    } else {\r\n      const { username, ssid } = user;\r\n      // 透過當前路徑去解析，取得要獲取的資源標籤\r\n      dispatch(reqFetchChannels(username, ssid, tags));\r\n    }\r\n    return () => {};\r\n  }, [dispatch, user, tags]);\r\n\r\n  return (\r\n    <Container isStopScroll={isEnable}>\r\n      <ControlPanel>\r\n        <ChannelSearch />\r\n        <ChannelTagsSwitchers />\r\n      </ControlPanel>\r\n      <ChannelSearchCard />\r\n      <ChannelCardsBrowser />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction ChannelSearchCard() {\r\n  const current = useSelector(selectCurrent);\r\n\r\n  return (\r\n    <>\r\n      {current !== null ? (\r\n        current.status === \"failure\" ? (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        ) : (\r\n          <ChannelCardsGroup\r\n            key={\"ChannelCardsGroup_\" + current.group}\r\n            cards={[current]}\r\n            groupName={current.group}\r\n          />\r\n        )\r\n      ) : (\r\n        <Fragment />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div<{ isStopScroll: boolean }>`\r\n  position: absolute;\r\n  top: 65px;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: calc(100vh - 65px);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: ${(p) => (p.isStopScroll ? `hidden` : `auto`)};\r\n`;\r\n\r\nconst ControlPanel = styled.div`\r\n  position: relative;\r\n  background-color: #666;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: start;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\n","import axios from \"axios\";\r\nimport {\r\n  API_SERVER_URL,\r\n  CHANNELS_DEFAULT_GROUPNAME,\r\n  VISITS_DEFAULT_GROUPNAME,\r\n} from \"../../../app/config\";\r\nimport { FavoredItem, VisitItem, VisitList } from \"../../../app/types\";\r\nimport { createVisitItem } from \"../share\";\r\nimport { setFavoredList } from \"../slice\";\r\nimport { reqUpdateVisit } from \"./reqUpdateVisit\";\r\n\r\nexport const reqEditVisit =\r\n  (username: string, ssid: string, already: FavoredItem[], tags: string[]) =>\r\n  (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"ssid\", ssid);\r\n    axios.post(`${API_SERVER_URL}/visit/edit`, postform).then(\r\n      (resp) => {\r\n        console.log(\"開啟VisitList成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const visit: VisitList = resp.data[\"visit\"];\r\n\r\n        // 尚未登入時已有添加喜歡的對象到表單，登入後自動獲取該表單與回應收到的結果進行合併。\r\n\r\n        // 即使success，也可能新的使用者初始清單為空。\r\n        if (code === \"success\" && visit.list) {\r\n          // 安全地添加 \"Favorite\" 分群\r\n          const group = visit.group.includes(VISITS_DEFAULT_GROUPNAME)\r\n            ? visit.group\r\n            : [VISITS_DEFAULT_GROUPNAME, ...visit.group];\r\n\r\n          // 被添加到最愛的頻道都會被標記為 isNewAdded = true，蒐集後並轉換型態成VisitItem[]\r\n          const newAdded: VisitItem[] = already.reduce(\r\n            (result: VisitItem[], cur: FavoredItem) =>\r\n              cur.isNewAdded && !cur.isDeleted\r\n                ? result.concat(createVisitItem(cur))\r\n                : result,\r\n            []\r\n          );\r\n\r\n          // 取出\"新的且沒被刪除的\"被添加到最愛的頻道，並與回應收到的表單頻道比對後去除重複的。\r\n          const mp = new Map<string, boolean>();\r\n          const newlist: VisitItem[] = newAdded\r\n            .concat(visit.list)\r\n            .reduce((result: VisitItem[], cur: VisitItem) => {\r\n              if (!mp.has(cur.cid)) {\r\n                mp.set(cur.cid, true);\r\n                return result.concat(cur);\r\n              } else {\r\n                return result;\r\n              }\r\n            }, []);\r\n          setTimeout(() =>\r\n            (function (group: string[], list: VisitItem[]) {\r\n              dispatch(reqUpdateVisit(username, ssid, { group, list }, tags));\r\n            })(group, newlist)\r\n          );\r\n        } else {\r\n          dispatch(\r\n            setFavoredList({\r\n              list: already,\r\n              group: [VISITS_DEFAULT_GROUPNAME, CHANNELS_DEFAULT_GROUPNAME],\r\n            })\r\n          );\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"開啟VisitList 失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChatboxIframe } from \"../../../app/types\";\r\n\r\nexport function TheaterChatbox(props: ChatboxIframe) {\r\n  const chatbox = props;\r\n  const { w, h } = props;\r\n  return (\r\n    <>\r\n      {chatbox.isEnable ? (\r\n        <ChatboxContainer width={w} height={h}>{getChatboxIframe(chatbox)}</ChatboxContainer>\r\n      ) : (\r\n        <Fragment/>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst getChatboxIframe = (chatbox: ChatboxIframe): any => {\r\n  const { method, cid, src, cname } = chatbox;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          allowFullScreen={false}\r\n          allowTransparency={true}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_ChatboxIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          allowTransparency={true}\r\n          seamless={false}\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\nconst ChatboxContainer = styled.div<{ width: number; height: number }>`\r\n  background-color: #000;\r\n  width: ${(p) => p.width};\r\n  height: ${(p) => p.height};\r\n  iframe {\r\n    width: ${(p) => p.width};\r\n    height: ${(p) => p.height};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { useState } from \"react\";\r\nimport { ChatboxIframe, PlayerIframe } from \"../../../app/types\";\r\nimport { removeIframeByCid } from \"../slice\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterChatbox } from '../TheaterChatbox';\r\n\r\ntype Props = {\r\n  flexType: string;\r\n  player: PlayerIframe;\r\n  chatbox: ChatboxIframe;\r\n};\r\n\r\nexport function TheaterPlayerItem(props: Props) {\r\n  const { flexType, player, chatbox } = props;\r\n  const { cid, w: pw, h: ph } = player;\r\n  const { w: cw, h: ch } = chatbox;\r\n  const [isEnable, setIsEnable] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const showMenu = () => {\r\n    setIsEnable(!isEnable);\r\n  };\r\n  const onLeaveMenu = () => {\r\n    setIsEnable(false);\r\n  };\r\n  const onEnterMenu = () => {\r\n    setIsEnable(true);\r\n  };\r\n  const removeIframe = () => {\r\n    dispatch(removeIframeByCid({ cid }));\r\n  };\r\n\r\n  return (\r\n    <IframeGridLocator\r\n      flexType={flexType}\r\n      playerWidth={pw}\r\n      playerHeight={ph}\r\n      chatboxWidth={cw}\r\n      chatboxHeight={ch}\r\n    >\r\n      <IframeContainer>\r\n        <Menu\r\n          onClick={showMenu}\r\n          onMouseEnter={onEnterMenu}\r\n          onMouseLeave={onLeaveMenu}\r\n          isEnable={isEnable}\r\n        >\r\n          <div onClick={removeIframe}>\r\n            <ai.AiOutlineCloseCircle />\r\n          </div>\r\n        </Menu>\r\n        {getPlayerIframe(player)}\r\n      </IframeContainer>\r\n        <TheaterChatbox {...chatbox}/>\r\n    </IframeGridLocator>\r\n  );\r\n}\r\n\r\nconst getPlayerIframe = (player: PlayerIframe): any => {\r\n  const { method, cid, src, cname } = player;\r\n  switch (method) {\r\n    case \"youtube\":\r\n      return (\r\n        <iframe\r\n          key={`Youtube_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox\"\r\n        ></iframe>\r\n      );\r\n    case \"twitch\":\r\n      return (\r\n        <iframe\r\n          key={`Twitch_PlayerIframe_${cid}`}\r\n          src={src}\r\n          title={`${cname}'s channel`}\r\n          scrolling=\"no\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen={false}\r\n          sandbox=\"allow-modals allow-scripts allow-same-origin allow-popups allow-popups-to-escape-sandbox\"\r\n        ></iframe>\r\n      );\r\n    default:\r\n      console.error(\"缺少對應的處理方式: \", method);\r\n      break;\r\n  }\r\n};\r\n\r\n\r\n\r\nconst IframeGridLocator = styled.div<{\r\n  flexType: string;\r\n  playerWidth: number;\r\n  playerHeight: number;\r\n  chatboxWidth: number;\r\n  chatboxHeight: number;\r\n}>`\r\n  --playerWidth: ${(p) => p.playerWidth}px;\r\n  --playerHeight: ${(p) => p.playerHeight}px;\r\n  --chatboxWidth: ${(p) => p.chatboxWidth}px;\r\n  --chatboxHeight: ${(p) => p.chatboxHeight}px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: ${(p) => p.flexType};\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #000;\r\n`;\r\n\r\nconst IframeContainer = styled.div`\r\n  width: var(--playerWidth);\r\n  height: var(--playerHeight);\r\n  position: relative;\r\n  iframe {\r\n    z-index: 1;\r\n    width: var(--playerWidth);\r\n    height: var(--playerHeight);\r\n  }\r\n`;\r\n\r\nconst Menu = styled.h1<{ isEnable: boolean }>`\r\n  top: 0;\r\n  right: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: ${(p) => (p.isEnable ? `200px` : `50px`)};\r\n  background-color: black;\r\n  opacity: ${(p) => (p.isEnable ? `0.8` : `0.02`)};\r\n  transition: 0.6s;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  div {\r\n    font-size: ${(p) => (p.isEnable ? `100px` : `0px`)};\r\n    svg {\r\n      position: relative;\r\n      top: ${(p) => (p.isEnable ? `0%` : `30%`)};\r\n      color: hotpink;\r\n      cursor: pointer;\r\n      border-radius: 50%;\r\n      opacity: ${(p) => (p.isEnable ? `.8` : `0`)};\r\n      transform: ${(p) => (p.isEnable ? `rotate(360deg)` : `none`)};\r\n      transition: 0.4s;\r\n      :hover {\r\n        color: gray;\r\n        background-color: hotpink;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport {\r\n  selectPlayPairs,\r\n  selectGridLayout,\r\n  resizeGridLayout,\r\n} from \"../slice\";\r\nimport { useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { TheaterPlayerItem } from \"../TheaterPlayerItem\";\r\n\r\nexport function TheaterIframesViewer() {\r\n  const dom = useRef<HTMLDivElement>(null);\r\n  const pairs = useSelector(selectPlayPairs);\r\n  const numOfIframes = pairs.length;\r\n  const { col, row, flexType } = useSelector(selectGridLayout);\r\n  const dispatch = useDispatch();\r\n\r\n  const resizeIframes = useCallback(() => {\r\n    if (numOfIframes === 0 || dom.current === null) {\r\n      return;\r\n    }\r\n    console.log(\"[TheaterIframesViewer] Resize All Iframes\");\r\n    const { clientWidth, clientHeight } = dom.current;\r\n    dispatch(resizeGridLayout({ clientWidth, clientHeight }));\r\n  }, [dispatch, dom, numOfIframes]);\r\n\r\n  useLayoutEffect(() => {\r\n    // 添加新的Iframe元素時，要先執行一次\r\n    resizeIframes();\r\n\r\n    // 監聽畫面更新時的resize\r\n    let handler: any = null;\r\n    const resize = () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      handler = setTimeout(resizeIframes, 500);\r\n    };\r\n    window.addEventListener(\"resize\", resize);\r\n\r\n    return () => {\r\n      if (handler) {\r\n        clearTimeout(handler);\r\n      }\r\n      window.removeEventListener(\"resize\", resize);\r\n    };\r\n  }, [resizeIframes]);\r\n\r\n  console.log(`[TheaterIframesViewer] render, numOfIframes: ${numOfIframes}`);\r\n  return (\r\n    <Container ref={dom} col={col} row={row}>\r\n      {pairs.map(({ player, chatbox }) => (\r\n        <TheaterPlayerItem\r\n        key={\"TheaterPlayerItem_\" + player.cid}\r\n          flexType={flexType}\r\n          player={player}\r\n          chatbox={chatbox}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div<{ col: number; row: number }>`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 100px;\r\n  width: 100%;\r\n  height: calc(100% - 100px);\r\n  box-sizing: border-box;\r\n  background-color: gray;\r\n  z-index: 1;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => props.col}, 1fr);\r\n  grid-template-rows: repeat(${(props) => props.row}, 1fr);\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport { appendIframeToPlaylist, removeIframeFromPlaylist } from \"../slice\";\r\n\r\ntype TheaterSliderItemProps = {\r\n  item: TheaterElement;\r\n  index: number;\r\n  isStopTrans: boolean;\r\n};\r\n\r\nexport function TheaterSliderItem(props: TheaterSliderItemProps) {\r\n  const { index, isStopTrans, item } = props;\r\n  const { preview, cname, avatar, checked } = item;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    if (item.checked) {\r\n      dispatch(removeIframeFromPlaylist({ item }));\r\n    } else {\r\n      dispatch(appendIframeToPlaylist({ item }));\r\n    }\r\n  };\r\n  // console.log(\"[TheaterSliderItem] render\")\r\n  return (\r\n    <Section index={index} isStopTrans={isStopTrans}>\r\n      <SliderPreview>\r\n        <img src={preview} alt={`${cname}_preview`} />\r\n        <p>{`${cname}`}</p>\r\n      </SliderPreview>\r\n      <Avatar\r\n        src={avatar}\r\n        alt={`${cname}_avatar`}\r\n        onClick={handleClick}\r\n        checked={checked}\r\n      />\r\n    </Section>\r\n  );\r\n}\r\nconst Section = styled.div<{ index: number; isStopTrans: boolean }>`\r\n  position: relative;\r\n  left: ${(props) => -100 * props.index}%;\r\n  min-width: 100%;\r\n  height: 100px;\r\n\r\n  background-color: var(--navColor);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n\r\n  transition: ${(props) => (props.isStopTrans ? `none` : `.5s`)};\r\n`;\r\n\r\nconst SliderPreview = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  img {\r\n    width: auto;\r\n    height: auto;\r\n    filter: blur(2px);\r\n    opacity: 0.3;\r\n  }\r\n\r\n  p {\r\n    position: absolute;\r\n    top: 100px;\r\n    padding: 4px;\r\n    color: hotpink;\r\n    background-color: var(--navColor);\r\n    opacity: 0.8;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    transition: top 0.5s;\r\n    z-index: 1;\r\n\r\n    min-width: 100%;\r\n    border-radius: 70% 70% 0 0;\r\n  }\r\n\r\n  :hover {\r\n    p {\r\n      top: 78px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Avatar = styled.img<{ checked: boolean }>`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 85px;\r\n  border-radius: 50%;\r\n  border: ${(props) => (props.checked ? `solid 5px hotpink` : `none`)};\r\n  cursor: pointer;\r\n  transition: width 0.2s ease-in-out;\r\n  transition: border 0.5s;\r\n  opacity: 0.9;\r\n\r\n  :hover {\r\n    width: 90px;\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport { TheaterElement } from \"../../../app/types\";\r\nimport {\r\n  setSlider,\r\n  selectNumOfElements,\r\n  selectSliderElements,\r\n  selectSlider,\r\n} from \"../slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { TheaterSliderItem } from \"../TheaterSliderItem\";\r\n\r\nexport function TheaterSlider() {\r\n  const { sliderIndex, isTakenOverAnim } = useSelector(selectSlider);\r\n  const numOfElements = useSelector(selectNumOfElements);\r\n  const sliderElements = useSelector(selectSliderElements);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderLeft = () => {\r\n    let next = sliderIndex - 1;\r\n    if (next === 0) {\r\n      dispatch(setSlider({ next: numOfElements + 1, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: numOfElements, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n\r\n  const sliderRight = () => {\r\n    let next = sliderIndex + 1;\r\n    if (next === numOfElements + 1) {\r\n      dispatch(setSlider({ next: 0, isTakenOverAnim: true }));\r\n      setTimeout(() => {\r\n        dispatch(setSlider({ next: 1, isTakenOverAnim: false }));\r\n      });\r\n    } else {\r\n      dispatch(setSlider({ next, isTakenOverAnim: false }));\r\n    }\r\n  };\r\n\r\n  console.log(\r\n    `[TheaterSlider] render, numOfElements: ${numOfElements}, sliderIndex: ${sliderIndex}`\r\n  );\r\n  return (\r\n    <SliderWrap>\r\n      <SliderContainer>\r\n        <Control onClick={sliderLeft}>\r\n          <ai.AiOutlineLeftCircle />\r\n        </Control>\r\n        <Control onClick={sliderRight}>\r\n          <ai.AiOutlineRightCircle />\r\n        </Control>\r\n        <Content>\r\n          {sliderElements.map((e: TheaterElement, i: number) => (\r\n            <TheaterSliderItem\r\n              key={`slider_${i}_cid_${e.cid}_content`}\r\n              item={e}\r\n              index={sliderIndex}\r\n              isStopTrans={isTakenOverAnim}\r\n            />\r\n          ))}\r\n        </Content>\r\n      </SliderContainer>\r\n    </SliderWrap>\r\n  );\r\n}\r\n\r\nconst SliderWrap = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: auto;\r\n  z-index: 1;\r\n`;\r\n\r\nconst SliderContainer = styled.div`\r\n  --navColor: #4c4a46;\r\n  --toogleColor: #1985a1;\r\n\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  background-color: var(--navColor);\r\n  box-sizing: border-box;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n\r\n  background-color: gray;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: left;\r\n  overflow: hidden;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nconst Control = styled.span`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n\r\n  font-size: 50px;\r\n  background-color: none;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 1;\r\n  border-radius: 50%;\r\n  :nth-of-type(1) {\r\n    left: 30px;\r\n    text-align: right;\r\n  }\r\n  :nth-of-type(2) {\r\n    left: calc(100% - 100px);\r\n    text-align: right;\r\n  }\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n","import { useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../app/hooks\";\r\nimport { TheaterSlider, TheaterIframesViewer } from \"../../features/theater\";\r\nimport { reqTheaterChannels } from \"../../features/theater\";\r\nimport {\r\n  selectPlaylist,\r\n  selectSlider,\r\n  setSliderFolded,\r\n} from \"../../features/theater/slice\";\r\nimport * as ai from \"react-icons/ai\";\r\nimport { selectHasFetchChannels } from \"../../features/channelCardStore/slice\";\r\nimport { history } from \"../..\";\r\n\r\ntype Props = {\r\n  setNavbarFolded:(isFolded:boolean)=>void\r\n}\r\n\r\nexport default function TheaterPage(props:Props) {\r\n  const hasfetchChannels = useSelector(selectHasFetchChannels);\r\n  const playlist = useSelector(selectPlaylist);\r\n  const { isFolded } = useSelector(selectSlider);\r\n  const dispatch = useDispatch();\r\n\r\n  const sliderFold = () => {\r\n    dispatch(setSliderFolded(!isFolded));\r\n\r\n    // 主動觸發一次resize\r\n    if (playlist.length > 0) {\r\n      console.log(\"resize on after sliderFold\");\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n    }\r\n  };\r\n  \r\n  useLayoutEffect(() => {\r\n    if (!hasfetchChannels){\r\n      history.push({pathname:\"/channels\"})\r\n      return;\r\n    }\r\n    dispatch(reqTheaterChannels(\"live\"));\r\n    return () => {};\r\n  }, [dispatch, playlist, hasfetchChannels]);\r\n\r\n  return (\r\n    <>\r\n      <Control onClick={sliderFold}>\r\n        {isFolded ? (\r\n          <ai.AiOutlineVerticalAlignBottom />\r\n        ) : (\r\n          <ai.AiOutlineVerticalAlignTop />\r\n        )}\r\n      </Control>\r\n      <Wrap isFolded={isFolded}>\r\n        <TheaterSlider />\r\n        <TheaterIframesViewer />\r\n      </Wrap>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrap = styled.div<{ isFolded: boolean }>`\r\n  --topOffset: ${(props) => (props.isFolded ? `-100` : `65`)}px;\r\n\r\n  position: absolute;\r\n  left: 0;\r\n  top: var(--topOffset);\r\n\r\n  width: 100%;\r\n  height: calc(100vh - var(--topOffset));\r\n  z-index: 5;\r\n`;\r\n\r\nconst Control = styled.span`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  top: 115px;\r\n  left: calc(100% - 35px);\r\n  text-align: right;\r\n\r\n  font-size: 45px;\r\n  background-color: #eee;\r\n  color: hotpink;\r\n  opacity: 0.7;\r\n\r\n  cursor: pointer;\r\n  z-index: 6;\r\n  border-radius: 50%;\r\n\r\n  :hover {\r\n    background-color: hotpink;\r\n    color: gray;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { ChannelProps } from \"../../../app/types\";\r\nimport { setElements } from \"../slice\";\r\n\r\nexport const reqTheaterChannels =\r\n  (tag: string) => (dispatch: any) => {\r\n    axios.get(`${API_SERVER_URL}/channels/${tag}`).then(\r\n      (resp) => {\r\n        console.log(\"Theater請求成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const channels: ChannelProps[] = resp.data[\"channels\"];\r\n        if (code === \"success\") {\r\n          dispatch(setElements({ channels }));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"Theater請求失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };\r\n","import { useEffect } from 'react'\r\nimport { history } from '../..';\r\nimport { useSelector } from '../../app/hooks';\r\nimport { selectUser } from '../../features/user/slice';\r\n\r\n\r\nexport default function HomePage() {\r\n    const user = useSelector(selectUser);\r\n\r\n    useEffect(() => {\r\n    const { ssid, username } = user;\r\n    console.log({ ssid });\r\n    if (ssid !== \"\" && username !== \"\") {\r\n        history.push({ pathname: \"/channels\" });\r\n    } else{\r\n        history.push({ pathname: \"/login\" });\r\n    }\r\n    return () => {};\r\n  }, [user]);\r\n\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    )\r\n}\r\n","import { IoMdRocket } from \"react-icons/io\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function RocketLoading() {\r\n  return (\r\n    <Loader>\r\n      {Array(20)\r\n        .fill(0)\r\n        .map((_, i) => {\r\n          return <Dot key={`dot_${i}`} index={i} />;\r\n        })}\r\n      <Rocket>\r\n        <IoMdRocket />\r\n      </Rocket>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nconst Loader = styled.div`\r\n\r\n  --speed: 1;\r\n  --scale: 2;\r\n  --dotColor: #fff;\r\n  --rocketColor: #fff;\r\n\r\n  position: relative;\r\n  width: calc(120px * var(--scale));\r\n  height: calc(120px * var(--scale));\r\n`;\r\n\r\ntype DotProps = {\r\n  index: number;\r\n};\r\nconst Dot = styled.div<DotProps>`\r\n  --i: ${(p) => p.index};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: rotate(calc(180deg + 18deg * var(--i)));\r\n\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(15px * var(--scale));\r\n    height: calc(15px * var(--scale));\r\n    background-color: var(--dotColor);\r\n    border-radius: 50%;\r\n    transform: scale(0);\r\n    animation: animate calc(2s / var(--speed)) linear infinite;\r\n    animation-delay: calc(0.1s / var(--speed) * var(--i));\r\n  }\r\n\r\n  @keyframes animate {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    10% {\r\n      transform: scale(1.2);\r\n    }\r\n    80%,\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Rocket = styled.div`\r\n  /* background-color: brown; */\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: var(--rocketColor);\r\n  font-size: calc(50px * var(--scale));\r\n  animation: rotating calc(2s / var(--speed)) linear infinite;\r\n  animation-delay: calc(-1s / var(--speed));\r\n\r\n  svg{\r\n      transform: rotate(45deg);\r\n      position: relative;\r\n      top: calc(-15px * var(--scale));\r\n      left: calc(-15px * var(--scale));\r\n  }\r\n\r\n  @keyframes rotating{\r\n    0%{\r\n        transform: rotate(10deg)\r\n    }\r\n    100%{\r\n        transform: rotate(370deg)\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\"\r\nimport RocketLoading from \"../../components/RocketLoading\"\r\n\r\nexport default function LoadingPage() {\r\n    return (\r\n        <Container>\r\n            <RocketLoading/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    top: 65px;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: grey;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: none;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  --navColor: #4c4a46;\r\n  --btnHoverColor: rgb(25, 133, 161);\r\n  --btnHoverBgColor: rgba(25, 133, 161, 0.5);\r\n  --toogleColor: #fff;\r\n  --bkgColor: #fff;\r\n\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  box-sizing: border-box;\r\n  border: 5px solid;\r\n  border-radius: 1.5em 1.5em 1.5em 1.5em;\r\n  border-color: var(--navColor);\r\n  background-color: var(--bkgColor);\r\n\r\n  max-width: 480px;\r\n  min-width: 250px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  /* background-color: red; */\r\n`;\r\n\r\nexport const MsgBox = styled.div`\r\n  position: relative;\r\n  left: 0%;\r\n  top: 0%;\r\n\r\n  padding: 20px 0;\r\n  border-radius: 20px;\r\n\r\n  border: 2px solid var(--btnHoverBgColor);\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  :after {\r\n    position: absolute;\r\n    margin-top: 58px;\r\n    background-color: #fff;\r\n    /* top: 20px; */\r\n    content: \"\";\r\n    width: 25px;\r\n    height: 25px;\r\n    border-bottom: 2px solid var(--btnHoverBgColor);\r\n    border-right: 2px solid var(--btnHoverBgColor);\r\n    /* border-top: 2px solid var(--btnHoverBgColor); */\r\n    /* border-left: 2px solid var(--btnHoverBgColor); */\r\n    transform: rotate(45deg);\r\n    z-index: 1;\r\n  }\r\n\r\n  h1 {\r\n    position: relative;\r\n    display: block;\r\n    color: var(--btnHoverBgColor);\r\n    z-index: 2;\r\n\r\n    animation: animate .8s linear infinite;\r\n\r\n    @keyframes animate {\r\n      0% {\r\n        transform: translateX(-3px);\r\n      }\r\n      50% {\r\n        transform: translateX(3px);\r\n      }\r\n      100% {\r\n        transform: translateX(-3px);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  padding: 20px 0 0 0;\r\n  h1 {\r\n    letter-spacing: 5px;\r\n    text-align: center;\r\n    padding: 0 0 20px 0;\r\n    border-bottom: 1px solid silver;\r\n    font-size: 28px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px 40px 0 40px;\r\n  background-color: none;\r\n  div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    input {\r\n      width: 100%;\r\n      padding: 0 5px;\r\n      height: 40px;\r\n      font-size: 16px;\r\n      border: none;\r\n      outline: none;\r\n      color: var(--btnHoverColor);\r\n\r\n      :focus ~ label {\r\n        top: -5px;\r\n        color: var(--btnHoverColor);\r\n      }\r\n      :valid ~ label {\r\n        top: -5px;\r\n        color: var(--btnHoverColor);\r\n      }\r\n      :focus ~ span::before {\r\n        width: 100%;\r\n      }\r\n    }\r\n    label {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 5px;\r\n      color: #adadad;\r\n      transform: translateY(-50%);\r\n      font-size: 16px;\r\n      pointer-events: none;\r\n      transition: 0.3s;\r\n    }\r\n    span {\r\n      ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 40px;\r\n        left: 0;\r\n        width: 0%;\r\n        height: 2px;\r\n        background-color: var(--btnHoverColor);\r\n        transition: 0.3s;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UsernameField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #adadad;\r\n  margin: 30px 0;\r\n`;\r\nexport const PasswordField = styled.div`\r\n  position: relative;\r\n  border-bottom: 2px solid #adadad;\r\n  margin: 30px 0;\r\n`;\r\nexport const MainButton = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  border-radius: 25px;\r\n  font-size: 18px;\r\n  font-weight: 700px;\r\n  color: #fff;\r\n  background-color: var(--btnHoverColor);\r\n  letter-spacing: 2px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: 2px solid;\r\n  p {\r\n    /* background-color: red; */\r\n    width: 100%;\r\n    text-align: center;\r\n    pointer-events: none;\r\n  }\r\n  :hover {\r\n    border-color: var(--btnHoverColor);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nexport const SwitchField = styled.div`\r\n  position: relative;\r\n  margin: 30px 0;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  p {\r\n    /* background-color: red; */\r\n    text-align: center;\r\n    pointer-events: none;\r\n  }\r\n  div {\r\n    padding: 0px 10px;\r\n    color: var(--btnHoverColor);\r\n    cursor: pointer;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n","import { Fragment, useLayoutEffect, useRef } from \"react\";\r\nimport { reqLogin } from \"../api\";\r\nimport { useDispatch, useSelector } from \"../../../app/hooks\";\r\nimport { history } from \"../../../index\";\r\nimport { selectUser, setMsg } from \"../slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"../styles\";\r\n\r\nexport function Login() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { username, msg } = useSelector(selectUser);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n\r\n  const routeToRegister = () => {\r\n    history.push({ pathname: \"/register\" });\r\n  };\r\n\r\n  const onLogin = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      // console.log(\"用戶名不可為空\");\r\n      dispatch(setMsg(\"用戶名不可為空\"));\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      // console.log(\"密碼不可為空\");\r\n      dispatch(setMsg(\"密碼不可為空\"));\r\n      return;\r\n    }\r\n\r\n    dispatch(reqLogin(username, password));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (usernameInput.current) {\r\n      usernameInput.current.value = username;\r\n    }\r\n    return () => {};\r\n  }, [usernameInput, username]);\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員登入</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment/>\r\n          )}\r\n          <UsernameField>\r\n            <input\r\n              type=\"text\"\r\n              // placeholder=\"請輸入用戶名?\"\r\n              ref={usernameInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input\r\n              type=\"password\"\r\n              // placeholder=\"請輸入密碼?\"\r\n              ref={passwordInput}\r\n              required\r\n            />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onLogin}>\r\n            <p>登 入</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>還不是會員?</p>\r\n            <div onClick={routeToRegister}>註冊</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserLoginResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserLogin } from \"../slice\";\r\n\r\nexport const reqLogin =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    // 產生登入的postform資料\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n\r\n    // 發送Post請求\r\n    axios.post(`${API_SERVER_URL}/auth/login`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userLoginRes: UserLoginResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserLogin(userLoginRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"登入成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { useLayoutEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { reqRegister } from \"../api\";\r\nimport { history } from \"../../../index\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport { selectUser } from \"../slice\";\r\nimport {\r\n  Wrap,\r\n  Container,\r\n  Title,\r\n  Content,\r\n  MsgBox,\r\n  UsernameField,\r\n  PasswordField,\r\n  MainButton,\r\n  SwitchField,\r\n} from \"../styles\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport function Register() {\r\n  const dispatch = useDispatch();\r\n\r\n  const {username, msg} = useSelector(selectUser);\r\n  const usernameInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput = useRef<HTMLInputElement>(null);\r\n  const passwordInput2 = useRef<HTMLInputElement>(null);\r\n\r\n\r\n  const routeToLogin = () => {\r\n    history.push({ pathname: \"/login\" });\r\n  };\r\n\r\n  const onRegister = () => {\r\n    const username = usernameInput.current?.value + \"\";\r\n    const password = passwordInput.current?.value + \"\";\r\n    const password2 = passwordInput2.current?.value + \"\";\r\n\r\n    if (username === \"\") {\r\n      console.log(\"用戶名不可為空\");\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      console.log(\"密碼不可為空\");\r\n      return;\r\n    }\r\n    if (password !== password2) {\r\n      console.log(\"輸入的密碼不一致\");\r\n      return;\r\n    }\r\n\r\n    dispatch(reqRegister(username, password));\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if(usernameInput.current){\r\n      usernameInput.current.value = username;\r\n    }\r\n    return () => {};\r\n  }, [usernameInput, username])\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <Title>\r\n          <h1>會員註冊</h1>\r\n        </Title>\r\n        <Content>\r\n          {msg !== \"\" ? (\r\n            <MsgBox>\r\n              <h1>{msg}</h1>\r\n            </MsgBox>\r\n          ) : (\r\n            <Fragment/>\r\n          )}\r\n          <UsernameField>\r\n            <input type=\"text\" ref={usernameInput} required />\r\n            <span />\r\n            <label>{\"用戶名稱\"}</label>\r\n          </UsernameField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput} required />\r\n            <span />\r\n            <label>{\"用戶密碼\"}</label>\r\n          </PasswordField>\r\n          <PasswordField>\r\n            <input type=\"password\" ref={passwordInput2} required />\r\n            <span />\r\n            <label>{\"密碼確認\"}</label>\r\n          </PasswordField>\r\n          <MainButton onClick={onRegister}>\r\n            <p>註 冊</p>\r\n          </MainButton>{\" \"}\r\n          <SwitchField>\r\n            <p>註冊過了?</p>\r\n            <div onClick={routeToLogin}>登入</div>\r\n          </SwitchField>\r\n        </Content>\r\n      </Container>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\n// const UsernameField = styled.div`\r\n//   position: relative;\r\n//   border-bottom: 2px solid #adadad;\r\n//   margin: 30px 0;\r\n// `;\r\n// const PasswordField = styled.div`\r\n//   position: relative;\r\n//   border-bottom: 2px solid #adadad;\r\n//   margin: 30px 0;\r\n// `;\r\n// const RegisterField = styled.div`\r\n//   width: 100%;\r\n//   padding: 10px 0;\r\n//   border-radius: 25px;\r\n//   font-size: 18px;\r\n//   font-weight: 700px;\r\n//   color: #fff;\r\n//   background-color: var(--btnHoverColor);\r\n//   letter-spacing: 2px;\r\n//   cursor: pointer;\r\n//   outline: none;\r\n//   border: none;\r\n//   border: 2px solid;\r\n//   p {\r\n//     /* background-color: red; */\r\n//     width: 100%;\r\n//     text-align: center;\r\n//     pointer-events: none;\r\n//   }\r\n//   :hover {\r\n//     border-color: var(--btnHoverColor);\r\n//     transition: 0.2s;\r\n//   }\r\n// `;\r\n\r\n// const LoginField = styled.div`\r\n//   position: relative;\r\n//   margin: 30px 0;\r\n\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   p {\r\n//     /* background-color: red; */\r\n//     text-align: center;\r\n//     pointer-events: none;\r\n//   }\r\n//   div {\r\n//     padding: 0px 10px;\r\n//     color: var(--btnHoverColor);\r\n//     cursor: pointer;\r\n//     :hover {\r\n//       text-decoration: underline;\r\n//     }\r\n//   }\r\n// `;\r\n","import axios from \"axios\";\r\nimport { history } from \"../../..\";\r\nimport { API_SERVER_URL } from \"../../../app/config\";\r\nimport { UserRegisterResponse } from \"../../../app/types\";\r\nimport { setMsg, setUserRegiser } from \"../slice\";\r\n\r\nexport const reqRegister =\r\n  (username: string, password: string) => (dispatch: any) => {\r\n    const postform = new FormData();\r\n    postform.append(\"username\", username);\r\n    postform.append(\"password\", password);\r\n    axios.post(`${API_SERVER_URL}/auth/register`, postform).then(\r\n      (resp) => {\r\n        console.log(\"成功了, 回應如下:\\n\", resp.data);\r\n        const code: string = resp.data[\"code\"];\r\n        const msg: string = resp.data[\"msg\"];\r\n        if (code === \"success\") {\r\n          const { ssid, expiration } = resp.data[\"session\"];\r\n          const userRegisterRes: UserRegisterResponse = {\r\n            username,\r\n            ssid,\r\n            expiration,\r\n            msg,\r\n          };\r\n          dispatch(setUserRegiser(userRegisterRes));\r\n          setTimeout(() => {\r\n            history.push({ pathname: \"/channels\" });\r\n            console.log(\"註冊成功，直接跳轉到 channels\");\r\n          }, 1000);\r\n        } else {\r\n          dispatch(setMsg(msg));\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(\"失敗了, 錯誤如下:\\n\", err);\r\n      }\r\n    );\r\n  };","import { useDispatch } from \"../../app/hooks\";\r\nimport { setMsg } from \"../../features/user/slice\";\r\nimport { Login, Register } from \"../../features/user\";\r\n\r\nexport default function UserPage(props: { pageName: string }) {\r\n  const pageName = props.pageName;\r\n  const dispatch = useDispatch();\r\n  dispatch(setMsg(\"\"));\r\n  return (\r\n    <>\r\n      {(function (): JSX.Element {\r\n        switch (pageName) {\r\n          case \"login\":\r\n            return <Login />;\r\n          case \"register\":\r\n            return <Register />;\r\n          default:\r\n            return <Login />;\r\n        }\r\n      })()}\r\n    </>\r\n  );\r\n}\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport ChannelsStage from \"./pages/ChannelsStage\";\r\nimport TheaterPage from \"./pages/TheaterPage\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport { NavItemsArray } from \"./app/config\";\r\nimport LoadingPage from \"./pages/LoadingPage\";\r\nimport UserPage from \"./pages/UserPage\";\r\nimport { FavoredCardsViewer } from \"./features/channelCardStore\";\r\nimport { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"./app/hooks\";\r\nimport {\r\n  selectIsFavoredCardsViewerEnable,\r\n  setIsFavoredCardsViewerEnable,\r\n} from \"./features/channelCardStore/slice\";\r\n\r\nexport default function App() {\r\n  const isFavoredCardsViewerEnable = useSelector(\r\n    selectIsFavoredCardsViewerEnable\r\n  );\r\n  const dispatch = useDispatch();\r\n  const closeFavoredCardsViewer = () => {\r\n    dispatch(setIsFavoredCardsViewerEnable(false));\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar items={NavItemsArray} onClick={closeFavoredCardsViewer} />\r\n      {isFavoredCardsViewerEnable ? <FavoredCardsViewer /> : <Fragment />}\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/channels/\" component={ChannelsStage} />\r\n        <Route path=\"/theater/\" component={TheaterPage} />\r\n        <Route path=\"/login/\" render={() => <UserPage pageName=\"login\" />} />\r\n        <Route\r\n          path=\"/register/\"\r\n          render={() => <UserPage pageName=\"register\" />}\r\n        />\r\n        <Route path=\"/loading/\" component={LoadingPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport channelCardStoreReducer from \"../features/channelCardStore/slice\";\r\nimport userReducer from \"../features/user/slice\";\r\nimport theaterReducer from \"../features/theater/slice\";\r\n\r\nconst reducer = combineReducers({\r\n  channelCardStore: channelCardStoreReducer,\r\n  user: userReducer,\r\n  theater: theaterReducer,\r\n});\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n});\r\n\r\n// const preloadedState = {\r\n//   channels:{\r\n//     favored:[],\r\n//     resident:[],\r\n//   },\r\n//   visit:{\r\n//     list:[],\r\n//   },\r\n//   user:{\r\n//     username: \"\",\r\n//     ssid: \"\",\r\n//   }\r\n// }\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  middleware,\r\n  // preloadedState,\r\n});\r\n\r\n// 透過其回傳值自行推斷出 Store 的形態\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\n\r\nimport { Router } from \"react-router\";\r\n\r\nimport {createHashHistory} from 'history'\r\nexport const history = createHashHistory()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}